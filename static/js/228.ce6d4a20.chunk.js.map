{"version":3,"file":"static/js/228.ce6d4a20.chunk.js","mappings":"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","sources":["components/BasicModalWindow/BasicModalWindow.styled.js","components/BasicModalWindow/BasicModalWindow.jsx","components/Container/Container.jsx","components/Container/Container.styled.js","components/TitlePage/TitlePage.styled.js","components/TitlePage/TitlePage.jsx","components/ExercisesCategories/ExercisesCategories.styled.js","components/ExercisesCategories/ExercisesCategories.jsx","components/ExercisesSubcategoriesItem/ExercisesSubcategoriesItem.styled.js","components/ExercisesSubcategoriesItem/ExercisesSubcategoriesItem.jsx","components/ExercisesSubcategoriesList/ExercisesSubcategoriesList.styled.js","components/ExercisesSubcategoriesList/ExercisesSubcategoriesList.jsx","pages/Exercises/Exercises.styled.js","components/ExercisesItem/ExercisesItem.styled.js","components/AddExerciseForm/ExersiceModalWindowList.styled.js","components/AddExerciseForm/ExersiceModalWindowList.jsx","../node_modules/react-countdown-circle-timer/lib/index.module.js","components/AddExerciseForm/Timer.styled.js","components/AddExerciseForm/Timer.jsx","components/AddExerciseForm/AddExerciseForm.styled.js","components/AddExerciseForm/AddExerciseForm.jsx","components/AddExerciseSuccess/AddExerciseSuccess.styled.js","components/AddExerciseSuccess/AddExerciseSuccess.jsx","components/ExercisesItem/ExercisesItem.jsx","components/ExercisesList/ExercisesList.styled.js","components/ExercisesList/ExercisesList.jsx","pages/Exercises/Exercises.jsx","redux/api/apiSelectors.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const BasicWindow = styled.div`\n  width: 100%;\n  height: 100%;\n  background: rgba(04, 04, 04, 0.4);\n  position: absolute;\n  top: 0;\n  left: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 200;\n\n  @media screen and (min-width: 768px) {\n    position: fixed;\n  }\n`;\n\nexport const Modal = styled.div`\n  border-radius: 12px;\n  border: 1px solid rgba(239, 237, 232, 0.2);\n  background: #10100f;\n  position: absolute;\n  top: 5dvh;\n  ${({ children }) => {\n    if (children.some(child => child.key === 'prodSuccess')) {\n      return 'padding: 48px 89px;   @media screen and (min-width: 768px) {padding: 64px 136px;}';\n    }\n    if (children.some(child => child.key === 'addProd')) {\n      return `padding: 48px 24px;   @media screen and (min-width: 768px) {padding: 48px 32px;}`;\n    }\n    if (children.some(child => child.key === 'exercSuccess')) {\n      return `padding: 48px 89px;   @media screen and (min-width: 768px) {padding: 64px 134px;}`;\n    }\n    if (children.some(child => child.key === 'addExerc')) {\n      return `padding: 48px 16px;   @media screen and (min-width: 768px) {padding: 48px 32px;}`;\n    }\n  }};\n\n  @media screen and (min-width: 768px) {\n    position: relative;\n    top: 0;\n  }\n`;\n\nexport const ButtonClouse = styled.button`\n  width: 22px;\n  height: 22px;\n\n  border: none;\n  background: inherit;\n  position: absolute;\n  top: 14px;\n  right: 14px;\n  @media screen and (min-width: 768px) {\n    width: 26px;\n    height: 26px;\n  }\n`;\n\nexport const SvgClouse = styled.svg`\n  width: 20px;\n  height: 20px;\n\n  stroke: var(--white-color);\n`;\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\n\nimport {\n  BasicWindow,\n  Modal,\n  ButtonClouse,\n  SvgClouse,\n} from './BasicModalWindow.styled';\n\nimport sprite from '../../assets/images/sprite.svg';\n\nconst BasicModalWindow = ({ children, isOpenModalToggle }) => {\n  useEffect(() => {\n    const closeESC = e => {\n      if (e.code === 'Escape') {\n        isOpenModalToggle();\n      }\n    };\n    document.addEventListener('keydown', closeESC);\n    return () => {\n      document.removeEventListener('keydown', closeESC);\n    };\n  }, [isOpenModalToggle]);\n\n  const handleClickBackground = e => {\n    if (e.currentTarget === e.target) {\n      isOpenModalToggle();\n    }\n  };\n\n  const modal = (\n    <BasicWindow onClick={handleClickBackground}>\n      <Modal>\n        <ButtonClouse onClick={() => isOpenModalToggle()}>\n          <SvgClouse>\n            <use href={sprite + '#x'}></use>\n          </SvgClouse>\n        </ButtonClouse>\n\n        {children}\n      </Modal>\n    </BasicWindow>\n  );\n\n  return createPortal(modal, document.querySelector('#root_modal'));\n};\n\nexport default BasicModalWindow;\n\nBasicModalWindow.propTypes = {\n  children: PropTypes.any,\n  isOpenModalToggle: PropTypes.func,\n};\n","import { ContainerWrapper } from './Container.styled';\n\nconst Container = ({ children }) => {\n  return <ContainerWrapper>{children}</ContainerWrapper>;\n};\n\nexport default Container;\n","import styled from '@emotion/styled';\n\nexport const ContainerWrapper = styled.div`\n  width: 100%;\n  margin-inline: auto;\n  padding-inline: 20px;\n  /* padding-top: 61px; */\n\n  @media screen and (min-width: 375px) {\n    width: 375px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 768px;\n    padding-inline: 32px;\n    /* padding-top: 84px; */\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 1440px;\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const Title = styled.h1`\n  margin-top: 40px;\n  font-family: Roboto;\n  color: #efede8;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 1.375;\n\n  @media screen and (min-width: 375px) {\n    margin-top: 40px;\n    font-size: 24px;\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-top: 72px;\n    font-size: 32px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Title } from './TitlePage.styled';\n\nconst TitlePage = ({ title }) => {\n  return <Title>{title}</Title>;\n};\n\nexport default TitlePage;\n\nTitlePage.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const ExercisesCategoriesUl = styled.ul`\n  @media screen and (max-width: 767px) {\n    margin-top: 20px;\n  }\n`;\n\nexport const ExercisesCategoriesLi = styled.li`\n  display: flex;\n  gap: 32px;\n  align-items: baseline;\n\n  @media screen and (min-width: 768px) {\n    gap: 32px;\n  }\n`;\n\nexport const ExercisesCategoriesNavLink = styled(NavLink)`\n  color: rgba(239, 237, 232, 0.4);\n  font-size: 14px;\n  line-height: 1.28;\n  position: relative;\n  transition-duration: var(--transition-duration);\n  transition-timing-function: var(--transition-cubic);\n\n  &:after {\n    content: ' ';\n    display: inline-block;\n    width: 0;\n    height: 4px;\n    background: #ef8964;\n    border-radius: 2px;\n    position: absolute;\n    bottom: -4px;\n    margin: o auto;\n    transition: none;\n  }\n\n  &:hover,\n  &:focus {\n    color: #efede8;\n  }\n\n  &.active {\n    color: #efede8;\n    &:after {\n      content: ' ';\n      display: inline-block;\n      width: 100%;\n      height: 4px;\n      background: #ef8964;\n      border-radius: 2px;\n      position: absolute;\n      bottom: -4px;\n      transition: width 0.3s ease-out;\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\n","import {\n  ExercisesCategoriesUl,\n  ExercisesCategoriesLi,\n  ExercisesCategoriesNavLink,\n} from './ExercisesCategories.styled';\n\nexport const ExercisesCategories = ({ handleClick }) => {\n  return (\n    <ExercisesCategoriesUl>\n      <ExercisesCategoriesLi>\n        <ExercisesCategoriesNavLink to=\"bodyparts\" onClick={handleClick}>\n          <p>Body parts</p>\n        </ExercisesCategoriesNavLink>\n        <ExercisesCategoriesNavLink to=\"muscles\" onClick={handleClick}>\n          <p>Muscles</p>\n        </ExercisesCategoriesNavLink>\n        <ExercisesCategoriesNavLink to=\"equipment\" onClick={handleClick}>\n          <p>Equipment</p>\n        </ExercisesCategoriesNavLink>\n      </ExercisesCategoriesLi>\n    </ExercisesCategoriesUl>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const ExercisesSubcategoryPictureLi = styled.li`\n  max-width: 335px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  width: 100%;\n  height: 100%;\n\n  @media screen and (min-width: 768px) {\n    max-width: 224px;\n  }\n  @media screen and (min-width: 1440px) {\n    max-width: 237px;\n  }\n`;\n\nexport const CardWrapper = styled.div`\n  position: relative;\n  border-radius: 12px;\n  border: 1px solid rgba(239, 237, 232, 0.2);\n  overflow: hidden;\n  transition: transform 0.3s ease-in-out;\n  cursor: pointer;\n\n  &:hover,\n  &:focus-visible {\n    transform: scale(1.05);\n  }\n`;\n\nexport const InfoWrapper = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n\n  background-color: rgba(4, 4, 4, 0.5);\n  background: linear-gradient(\n      0deg,\n      rgba(4, 4, 4, 0.5) 0%,\n      rgba(4, 4, 4, 0.5) 100%\n    ),\n    url(${props => props.img}) center center no-repeat;\n  background-size: cover;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n`;\n\nexport const DescriptionUl = styled.ul`\n  color: white;\n  text-align: center;\n  z-index: 2;\n`;\n\nexport const MainText = styled.p`\n  font-size: 20px;\n  line-height: 1.33;\n  margin-bottom: 2px;\n\n  &::first-letter {\n    text-transform: uppercase;\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 24px;\n  }\n`;\n\nexport const Subtext = styled.p`\n  color: rgba(239, 237, 232, 0.4);\n  font-size: 12px;\n  line-height: 1.5;\n`;\n","import PropTypes from 'prop-types';\nimport {\n  ExercisesSubcategoryPictureLi,\n  DescriptionUl,\n  MainText,\n  Subtext,\n  InfoWrapper,\n  CardWrapper,\n} from './ExercisesSubcategoriesItem.styled';\n\nexport default function ExercisesSubcategoriesItem({ category, handleClick }) {\n  return (\n    <ExercisesSubcategoryPictureLi onClick={() => handleClick(category.name)}>\n      <CardWrapper>\n        <InfoWrapper>\n          <DescriptionUl>\n            <li>\n              <MainText>{category.name}</MainText>\n            </li>\n\n            <li>\n              <Subtext>{category.filter}</Subtext>\n            </li>\n          </DescriptionUl>\n        </InfoWrapper>\n        <img src={category.imgURL} alt={category.name} />\n      </CardWrapper>\n    </ExercisesSubcategoryPictureLi>\n  );\n}\n\nExercisesSubcategoriesItem.propTypes = {\n  category: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    imgURL: PropTypes.string.isRequired,\n    filter: PropTypes.string.isRequired,\n  }),\n};\n","import styled from '@emotion/styled';\n\nexport const SubcategoriesList = styled.div`\n  margin-top: 40px;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 64px;\n  }\n`;\n\nexport const ExercisesListUl = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  justify-content: center;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    flex-wrap: wrap;\n    gap: 32px 16px;\n  }\n`;\n\nexport const PaginationBlock = styled.div`\n  width: fit-content;\n  margin-top: 40px;\n  margin-inline: auto;\n  display: flex;\n  gap: 8px;\n  @media screen and (min-width: 768px) {\n    margin-top: 32px;\n  }\n`;\n\nexport const PaginationButton = styled.button`\n  position: relative;\n  width: 14px;\n  height: 14px;\n  padding: 0px;\n  background-color: rgba(239, 237, 232, 0.1);\n  border: none;\n  border-radius: 50%;\n\n  &:hover:not(.active),\n  &:focus-visible:not(.active) {\n    background-color: rgba(239, 237, 232, 0.3);\n  }\n\n  &.active {\n    background-color: transparent;\n    border: 1px solid #e6533c;\n    cursor: default;\n\n    ::after {\n      position: absolute;\n      top: 50%;\n      left: 50%;\n      transform: translate(-50%, -50%);\n      content: '';\n      display: block;\n      width: 8px;\n      height: 8px;\n      background-color: #e6533c;\n      border-radius: 50%;\n    }\n  }\n`;\n","import ExercisesSubcategoriesItem from 'components/ExercisesSubcategoriesItem/ExercisesSubcategoriesItem';\nimport PropTypes from 'prop-types';\n\nimport {\n  SubcategoriesList,\n  ExercisesListUl,\n  PaginationButton,\n  PaginationBlock,\n} from './ExercisesSubcategoriesList.styled';\nimport { useSelector } from 'react-redux';\nimport { selectFilters } from 'redux/api/apiSelectors';\n\nconst ExercisesSubcategoriesList = ({\n  pageNumber,\n  elementsPerPage,\n  handleSubCategoryClick,\n  handleChangePage,\n}) => {\n  const { result: categories, total_results: totalCategories } =\n    useSelector(selectFilters);\n\n  const numberOfPages = Math.ceil(totalCategories / elementsPerPage);\n  const buttonsAmount = [];\n\n  for (let index = 1; index <= numberOfPages; index++) {\n    buttonsAmount.push(index);\n  }\n\n  return (\n    <SubcategoriesList>\n      <ExercisesListUl>\n        {categories.map(category => (\n          <ExercisesSubcategoriesItem\n            key={category._id}\n            category={category}\n            handleClick={handleSubCategoryClick}\n          />\n        ))}\n      </ExercisesListUl>\n      {numberOfPages > 1 && (\n        <PaginationBlock>\n          {buttonsAmount.map(number => (\n            <PaginationButton\n              type=\"button\"\n              onClick={() => handleChangePage(number)}\n              key={number}\n              className={pageNumber === number ? 'active' : null}\n            ></PaginationButton>\n          ))}\n        </PaginationBlock>\n      )}\n    </SubcategoriesList>\n  );\n};\n\nExercisesSubcategoriesList.propTypes = {\n  pageNumber: PropTypes.number.isRequired,\n  elementsPerPage: PropTypes.number.isRequired,\n  handleSubCategoryClick: PropTypes.func.isRequired,\n  handleChangePage: PropTypes.func.isRequired,\n};\n\nexport default ExercisesSubcategoriesList;\n","import styled from '@emotion/styled';\n\nimport { exercises_background_1x } from 'utils/background';\nimport { exercises_background_2x } from 'utils/background';\n\nexport const ExercisesWrapper = styled.div`\n  padding-top: 62px;\n  padding-bottom: 80px;\n  width: 100%;\n  @media screen and (min-width: 768px) {\n    padding-bottom: 66px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding-top: 85px;\n    padding-bottom: 46px;\n\n    &.exercises-list {\n      background: image-set(\n        url(${exercises_background_1x}) 1x,\n        url(${exercises_background_2x}) 2x\n      );\n      background-repeat: no-repeat;\n      background-position: bottom right;\n    }\n  }\n`;\n\nexport const ContentDiv = styled.div`\n  position: relative;\n  margin-inline: auto;\n  @media screen and (min-width: 1440px) {\n    padding-inline: 63px;\n  }\n`;\n\nexport const WrapperTitleCategoriesDiv = styled.div`\n  margin-bottom: 48px;\n  display: flex;\n  flex-direction: column;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 64px;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: baseline;\n    margin-bottom: ${props => props.margin && '32px'};\n    margin-top: ${props => props.margin && '72px'};\n  }\n\n  @media screen and (min-width: 1440px) {\n    margin-bottom: 64px;\n    margin-bottom: ${props => props.margin && '32px'};\n  }\n`;\n\nexport const BackButton = styled.button`\n  position: absolute;\n  top: 11px;\n  padding: 0px;\n  display: flex;\n  gap: 8px;\n  align-items: flex-start;\n  color: rgba(239, 237, 232, 0.4);\n  font-size: 14px;\n  line-height: calc(18 / 14);\n  background: transparent;\n  border: none;\n\n  @media screen and (min-width: 768px) {\n    top: 32px;\n    align-items: center;\n    font-size: 16px;\n    line-height: calc(24 / 16);\n  }\n\n  & svg {\n    transform: scale(-1, 1);\n    width: 16px;\n    height: 16px;\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const ExercisesCard = styled.li`\n  display: flex;\n  flex-direction: column;\n  width: 333px;\n  height: 163px;\n  padding: 16px;\n  justify-content: center;\n  align-items: flex-start;\n  border-radius: 12px;\n  border: 1px solid rgba(239, 237, 232, 0.2);\n  background: rgba(239, 237, 232, 0.05);\n  box-sizing: border-box;\n\n  @media screen and (min-width: 768px) {   \n    overflow: hidden;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 405px;\n    height: 141px;\n  }\n`;\n\nexport const ExercisesCardStatusWorkout = styled.label`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-bottom: 33px;\n  justify-content: space-between;\n\n    @media screen and (min-width: 768px) {\n    margin-bottom: 25px;\n  }\n\n  @media screen and (min-width: 1440px) {\n     margin-bottom: 27px;\n  }\n`;\n\nexport const ExercisesCardWorkout = styled.span`\n  display: inline-flex;\n  padding: 5px 7.5px;\n  justify-content: center;\n  align-items: center;\n  border-radius: 4px;\n  background: rgba(239, 237, 232, 0.05);\n`;\n\nexport const ExercisesCardWorkoutText = styled.p`\n  color: #efede8;\n  font-size: 12px;\n  font-weight: 700;\n  line-height: normal;\n  text-transform: uppercase;\n`;\n\nexport const ExercisesCardStatus = styled.div`\n  display: flex;\n  align-items: center; \n`;\n\nexport const ExercisesCardAddBtn = styled.button`\n  background: transparent;\n  border: none;\n  color: #e6533c;\n  font-size: 14px;\n  line-height: 18px;\n  padding: 0;\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    color: #efede8;\n  }\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    line-height: 24px;\n  }\n`;\n\nexport const IconStart = styled.svg`\n  display: block;\n  width: 16px;\n  height: 16px;\n  margin-left: 8px;\n  margin-top: -3px;\n  fill: #efa082;\n  &:hover,\n  &:focus {\n    fill: #efede8;\n  }\n`;\n\nexport const IconBeforeTitle = styled.svg`\n  position: absolute;\n  width: 24px;\n  height: 24px;\n  left: 0;\n  top: calc(50% - 12px);\n  fill: #efa082;\n`;\n\nexport const ExercisesCardTitle = styled.h4`\n  position: relative;\n  font-size: 20px;\n  line-height: 1.333;\n  color: #efede8;\n  margin-bottom: 8px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  padding-left: 40px;\n  max-width: 100%;\n  @media screen and (min-width: 768px) {\n    font-size: 24px;\n  }\n  /* &::before {\n    content: url();\n    position: absolute;\n    width: 24px;\n    height: 24px;\n    left: 0;\n    top: calc(50% - 12px);\n  } */\n`;\n\nexport const ExercisesCardInfoList = styled.ul`\n  /* width: 100%; */\n  display: flex;\n  flex-direction: row;\n  gap: 4px 16px;\n  flex-wrap: wrap;\n`;\n\nexport const ExercisesCardInfoItem = styled.li`\n  /* width: 40%; */\n  display: flex;\n  flex-direction: row;\n  gap: 4px;\n  color: rgba(239, 237, 232, 0.4);\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 1.5;\n  /* word-wrap: break-word; */\n  /* flex-wrap: nowrap; */\n`;\n\nexport const ExercisesCardInfoValue = styled.p`\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  color: #efede8;\n  font-size: 12px;\n  line-height: 1.5;\n  white-space: pre-wrap;\n  /* word-wrap: break-word; */\n`;","import styled from 'styled-components';\n\nexport const ExersiceModalList = styled.ul`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-template-rows: 1fr 1fr;\n  gap: 8px;\n  align-items: center;\n  width: 302px;\n\n  @media screen and (min-width: 768px) {\n    width: 345px;\n    align-items: flex-start;\n  }\n`;\n\nexport const ExersiceModalLink = styled.li`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  padding: 12px 18px;\n  width: 147px;\n  justify-content: center;\n\n  gap: 4px;\n  border-radius: 12px;\n  border: 1px solid rgba(239, 237, 232, 0.2);\n  background: rgba(239, 237, 232, 0.05);\n\n  @media screen and (min-width: 768px) {\n    width: 168px;\n    align-items: flex-start;\n  }\n`;\n\nexport const ExersiceModalLinkSub = styled.p`\n  color: rgba(239, 237, 232, 0.4);\n  font-size: 12px;\n  line-height: 18px;\n`;\n\nexport const ExersiceModalLinkTitle = styled.p`\n  color: #efede8;\n  font-size: 16px;\n  font-weight: 600;\n  line-height: calc(24 / 16);\n  text-transform: capitalize;\n`;\n","import {\n  ExersiceModalLink,\n  ExersiceModalLinkSub,\n  ExersiceModalLinkTitle,\n  ExersiceModalList,\n} from './ExersiceModalWindowList.styled';\n\nconst ExersiceModalWindowList = ({ name, bodyPart, target, equipment }) => {\n  return (\n    <ExersiceModalList>\n      <ExersiceModalLink>\n        <ExersiceModalLinkSub>Name</ExersiceModalLinkSub>\n        <ExersiceModalLinkTitle>{name}</ExersiceModalLinkTitle>\n      </ExersiceModalLink>\n      <ExersiceModalLink>\n        <ExersiceModalLinkSub>Target</ExersiceModalLinkSub>\n        <ExersiceModalLinkTitle>{target}</ExersiceModalLinkTitle>\n      </ExersiceModalLink>\n      <ExersiceModalLink>\n        <ExersiceModalLinkSub>Body Part</ExersiceModalLinkSub>\n        <ExersiceModalLinkTitle>{bodyPart}</ExersiceModalLinkTitle>\n      </ExersiceModalLink>\n      <ExersiceModalLink>\n        <ExersiceModalLinkSub>Equipment</ExersiceModalLinkSub>\n        <ExersiceModalLinkTitle>{equipment}</ExersiceModalLinkTitle>\n      </ExersiceModalLink>\n    </ExersiceModalList>\n  );\n};\n\nexport default ExersiceModalWindowList;\n","import x from\"react\";import{useRef as U}from\"react\";import{useState as E,useRef as b,useCallback as q}from\"react\";import{useEffect as M,useLayoutEffect as L}from\"react\";var G=typeof window==\"undefined\"?M:L,I=({isPlaying:o,duration:e,startAt:n=0,updateInterval:t=0,onComplete:s,onUpdate:r})=>{let[i,c]=E(n),m=b(0),p=b(n),f=b(n*-1e3),u=b(null),a=b(null),h=b(null),w=g=>{let l=g/1e3;if(a.current===null){a.current=l,u.current=requestAnimationFrame(w);return}let d=l-a.current,C=m.current+d;a.current=l,m.current=C;let k=p.current+(t===0?C:(C/t|0)*t),R=p.current+C,v=typeof e==\"number\"&&R>=e;c(v?e:k),v||(u.current=requestAnimationFrame(w))},$=()=>{u.current&&cancelAnimationFrame(u.current),h.current&&clearTimeout(h.current),a.current=null},y=q(g=>{$(),m.current=0;let l=typeof g==\"number\"?g:n;p.current=l,c(l),o&&(u.current=requestAnimationFrame(w))},[o,n]);return G(()=>{if(r==null||r(i),e&&i>=e){f.current+=e*1e3;let{shouldRepeat:g=!1,delay:l=0,newStartAt:d}=(s==null?void 0:s(f.current/1e3))||{};g&&(h.current=setTimeout(()=>y(d),l*1e3))}},[i,e]),G(()=>(o&&(u.current=requestAnimationFrame(w)),$),[o,e,t]),{elapsedTime:i,reset:y}};var A=(o,e,n)=>{let t=o/2,s=e/2,r=t-s,i=2*r,c=n===\"clockwise\"?\"1,0\":\"0,1\",m=2*Math.PI*r;return{path:`m ${t},${s} a ${r},${r} 0 ${c} 0,${i} a ${r},${r} 0 ${c} 0,-${i}`,pathLength:m}},T=(o,e)=>o===0||o===e?0:typeof e==\"number\"?o-e:0,B=o=>({position:\"relative\",width:o,height:o}),P={display:\"flex\",justifyContent:\"center\",alignItems:\"center\",position:\"absolute\",left:0,top:0,width:\"100%\",height:\"100%\"};var F=(o,e,n,t,s)=>{if(t===0)return e;let r=(s?t-o:o)/t;return e+n*r},W=o=>{var e,n;return(n=(e=o.replace(/^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i,(t,s,r,i)=>`#${s}${s}${r}${r}${i}${i}`).substring(1).match(/.{2}/g))==null?void 0:e.map(t=>parseInt(t,16)))!=null?n:[]},j=(o,e)=>{var u;let{colors:n,colorsTime:t,isSmoothColorTransition:s=!0}=o;if(typeof n==\"string\")return n;let r=(u=t==null?void 0:t.findIndex((a,h)=>a>=e&&e>=t[h+1]))!=null?u:-1;if(!t||r===-1)return n[0];if(!s)return n[r];let i=t[r]-e,c=t[r]-t[r+1],m=W(n[r]),p=W(n[r+1]),f=!!o.isGrowing;return`rgb(${m.map((a,h)=>F(i,a,p[h]-a,c,f)|0).join(\",\")})`},S=o=>{let{duration:e,initialRemainingTime:n,updateInterval:t,size:s=180,strokeWidth:r=12,trailStrokeWidth:i,isPlaying:c=!1,isGrowing:m=!1,rotation:p=\"clockwise\",onComplete:f,onUpdate:u}=o,a=U(),h=Math.max(r,i!=null?i:0),{path:w,pathLength:$}=A(s,h,p),{elapsedTime:y}=I({isPlaying:c,duration:e,startAt:T(e,n),updateInterval:t,onUpdate:typeof u==\"function\"?l=>{let d=Math.ceil(e-l);d!==a.current&&(a.current=d,u(d))}:void 0,onComplete:typeof f==\"function\"?l=>{var R;let{shouldRepeat:d,delay:C,newInitialRemainingTime:k}=(R=f(l))!=null?R:{};if(d)return{shouldRepeat:d,delay:C,newStartAt:T(e,k)}}:void 0}),g=e-y;return{elapsedTime:y,path:w,pathLength:$,remainingTime:Math.ceil(g),rotation:p,size:s,stroke:j(o,g),strokeDashoffset:F(y,0,$,e,m),strokeWidth:r}};var D=o=>{let{children:e,strokeLinecap:n,trailColor:t,trailStrokeWidth:s}=o,{path:r,pathLength:i,stroke:c,strokeDashoffset:m,remainingTime:p,elapsedTime:f,size:u,strokeWidth:a}=S(o);return x.createElement(\"div\",{style:B(u)},x.createElement(\"svg\",{viewBox:`0 0 ${u} ${u}`,width:u,height:u,xmlns:\"http://www.w3.org/2000/svg\"},x.createElement(\"path\",{d:r,fill:\"none\",stroke:t!=null?t:\"#d9d9d9\",strokeWidth:s!=null?s:a}),x.createElement(\"path\",{d:r,fill:\"none\",stroke:c,strokeLinecap:n!=null?n:\"round\",strokeWidth:a,strokeDasharray:i,strokeDashoffset:m})),typeof e==\"function\"&&x.createElement(\"div\",{style:P},e({remainingTime:p,elapsedTime:f,color:c})))};D.displayName=\"CountdownCircleTimer\";export{D as CountdownCircleTimer,S as useCountdown};\n","import styled from 'styled-components';\n\nexport const TimerWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  position: relative;\n`;\n\nexport const TimerTitle = styled.h1`\n  color: rgba(239, 237, 232, 0.4);\n  font-size: 10px;\n  line-height: 1.4;\n  margin-bottom: 4px;\n`;\n\nexport const FormattedTitle = styled.p`\n  color: rgba(239, 237, 232, 0.4);\n  font-size: 10px;\n  font-weight: 400;\n  line-height: 14px;\n  margin-bottom: 4px;\n  margin-top: 4px;\n`;\n\nexport const TimerBtn = styled.button`\n  background-color: #e6533c;\n  margin-top: 14px;\n  padding: 5px;\n  border: none;\n  border-radius: 5px;\n  display: flex;\n\n  &:hover,\n  &:focus-visible {\n    background-color: #ef8964;\n  }\n`;\n\nexport const PlayIcon = styled.svg`\n  width: 20px;\n  height: 20px;\n`;\n\nexport const TimerText = styled.p`\n  color: rgba(239, 237, 232, 0.3);\n  font-size: 12px;\n  line-height: 1.28;\n  margin-top: 8px;\n`;\n\nexport const TimerSub = styled.span`\n  color: #e6533c;\n  font-size: 14px;\n  line-height: 1.28;\n  display: inline-flex;\n  margin-left: 8px;\n`;\n","import { CountdownCircleTimer } from 'react-countdown-circle-timer';\nimport {\n  PlayIcon,\n  TimerBtn,\n  TimerSub,\n  TimerText,\n  TimerTitle,\n  TimerWrapper,\n} from './Timer.styled';\nimport PropTypes from 'prop-types';\n\nimport symbolDefs from '../../assets/images/sprite.svg';\nimport { useEffect, useRef, useState } from 'react';\n\nconst Timer = ({\n  time,\n  burnedCalories,\n  setDynamicBurnCal,\n  dynamicBurnCal,\n  setDynamicTime,\n}) => {\n  const [isPlaying, setIsPlaying] = useState(false);\n\n  useEffect(() => {\n    const updateDynamicValues = ({ remainingTime }) => {\n      const duration = time * 60;\n\n      setDynamicBurnCal(() => {\n        const timeN = (duration - remainingTime) / duration;\n        const burnCal = (timeN * burnedCalories) / time;\n        return Math.round(burnCal);\n      });\n\n      setDynamicTime(() => Math.round((duration - remainingTime) / 60));\n    };\n\n    const interval = setInterval(() => {\n      // Отримати залишок часу ще раз і викликати функцію оновлення значень\n      updateDynamicValues({ remainingTime: remainingTimeRef.current });\n    }, 1000);\n\n    // При зміні isPlaying встановити або очистити інтервал\n    if (isPlaying) {\n      const remainingTime = time * 60;\n      updateDynamicValues({ remainingTime });\n      remainingTimeRef.current = remainingTime;\n    } else {\n      clearInterval(interval);\n    }\n\n    return () => clearInterval(interval);\n  }, [isPlaying, time, burnedCalories, setDynamicBurnCal, setDynamicTime]);\n\n  const handlePlay = () => {\n    setIsPlaying(!isPlaying);\n  };\n\n  const remainingTimeRef = useRef(time * 60);\n\n  const children = ({ remainingTime }) => {\n    remainingTimeRef.current = remainingTime;\n\n    const minutes = Math.floor(remainingTime / 60);\n    const seconds = remainingTime % 60;\n    return `${String(minutes).padStart(2, '0')}:${String(seconds).padStart(\n      2,\n      '0'\n    )}`;\n  };\n\n  return (\n    <TimerWrapper>\n      <TimerTitle>Time</TimerTitle>\n      <CountdownCircleTimer\n        strokeWidth={4}\n        size={124}\n        isPlaying={isPlaying}\n        duration={time * 60}\n        colors={'#E6533C'}\n        trailColor=\"rgba(239, 237, 232, 0.10)\"\n        remainingTime={time * 60}\n        strokeLinecap=\"round\"\n      >\n        {({ remainingTime }) => (\n          <div style={{ color: '#fff' }} role=\"timer\" aria-live=\"assertive\">\n            {children({ remainingTime })}\n          </div>\n        )}\n      </CountdownCircleTimer>\n      <TimerBtn onClick={handlePlay}>\n        <PlayIcon>\n          <use\n            href={isPlaying ? `${symbolDefs}#pause` : `${symbolDefs}#play`}\n          ></use>\n        </PlayIcon>\n      </TimerBtn>\n      <TimerText>\n        Burned calories:<TimerSub>{dynamicBurnCal}</TimerSub>\n      </TimerText>\n    </TimerWrapper>\n  );\n};\n\nTimer.propTypes = {\n  time: PropTypes.number.isRequired,\n  burnedCalories: PropTypes.number.isRequired,\n  setDynamicBurnCal: PropTypes.func.isRequired,\n  dynamicBurnCal: PropTypes.number.isRequired,\n  setDynamicTime: PropTypes.func.isRequired,\n};\n\nexport default Timer;\n","import styled from 'styled-components';\n\nexport const ExersiceModalContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 40px;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    align-items: start;\n    gap: 16px;\n  }\n`;\n\nexport const ExersiceModalWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 14px;\n\n  @media screen and (min-width: 768px) {\n    justify-content: center;\n  }\n`;\n\nexport const ExersiceModalWrapperTwo = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-self: flex-start;\n  gap: 24px;\n\n  @media screen and (min-width: 768px) {\n    min-height: 454px;\n    align-items: flex-end;\n    justify-content: space-between;\n    gap: 0px;\n  }\n`;\n\nexport const ExersiceModalTimer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n\n  @media screen and (min-width: 768px) {\n    align-items: start;\n    width: 125px;\n    height: 125px;\n    margin-right: none;\n  }\n`;\n\nexport const ExersiceModalImg = styled.img`\n  width: 270px;\n  height: 226px;\n  border-radius: 12px;\n  border: 1px solid rgba(239, 237, 232, 0.2);\n  background: linear-gradient(\n      0deg,\n      rgba(4, 4, 4, 0.2) 0%,\n      rgba(4, 4, 4, 0.2) 100%\n    ),\n    lightgray 0px -17.5px / 100% 119.469% no-repeat;\n`;\n\nexport const ExersiceModalWindowBtn = styled.button`\n  width: 153px;\n  color: #efede8;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.13;\n  padding: 12px;\n  border: none;\n  border-radius: 12px;\n  background: #e6533c;\n\n  @media screen and (min-width: 768px) {\n    line-height: 1.5;\n  }\n\n  &:hover,\n  &:focus-visible {\n    background: #ef8964;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useState } from 'react';\n\nimport { Notify } from 'notiflix';\nimport PropTypes from 'prop-types';\nimport ExersiceModalWindowList from './ExersiceModalWindowList';\nimport Timer from './Timer';\n\nimport {\n  ExersiceModalWrapper,\n  ExersiceModalContainer,\n  ExersiceModalWrapperTwo,\n  ExersiceModalWindowBtn,\n  ExersiceModalImg,\n  ExersiceModalTimer,\n} from './AddExerciseForm.styled';\nimport { addExercise } from 'redux/api/apiOperations';\nimport { selectError, selectIsLoading } from 'redux/api/apiSelectors';\nimport Loader from 'components/Loader';\n\nconst formatDate = date => {\n  const day = String(date.getDate()).padStart(2, '0');\n  const month = String(date.getMonth() + 1).padStart(2, '0');\n  const year = date.getFullYear();\n  return `${day}-${month}-${year}`;\n};\n\nexport const AddExerciseForm = ({\n  id,\n  name,\n  burnedCalories,\n  bodyPart,\n  target,\n  equipment,\n  gifUrl,\n  time,\n  onSuccess,\n  dynamicTime,\n  setDynamicTime,\n}) => {\n  const [dynamicBurnCal, setDynamicBurnCal] = useState(0);\n  const error = useSelector(selectError);\n  const isLoading = useSelector(selectIsLoading);\n  const dispatch = useDispatch();\n\n  const amount = Math.round((burnedCalories / (time * 60)) * 180);\n\n  const savedDate = localStorage.getItem('selectedDate');\n  let date = new Date();\n\n  if (savedDate) {\n    const parsedDate = new Date(savedDate);\n    if (!isNaN(parsedDate.getTime())) {\n      date = parsedDate;\n    }\n  }\n\n  const formattedDate = formatDate(date);\n\n  const handleAddToDiary = async () => {\n    if (!amount) {\n      Notify.failure('Must be greater than 0');\n      return;\n    }\n\n    if (dynamicTime < 1) {\n      Notify.failure(\n        'To log your activity you must work out for at least one minute'\n      );\n      return;\n    }\n\n    await dispatch(\n      addExercise({\n        exerciseId: id,\n        date: formattedDate,\n        workoutTime: dynamicTime,\n        caloriesBurned: dynamicBurnCal,\n      })\n    ).unwrap();\n\n    if (!isLoading && !error) {\n      onSuccess(dynamicTime, dynamicBurnCal);\n    }\n  };\n\n  return (\n    <ExersiceModalContainer>\n      {isLoading && <Loader />}\n      <ExersiceModalWrapper>\n        <ExersiceModalImg src={gifUrl} alt={name} />\n        <ExersiceModalTimer>\n          <Timer\n            burnedCalories={burnedCalories}\n            time={time}\n            setDynamicBurnCal={setDynamicBurnCal}\n            dynamicBurnCal={dynamicBurnCal}\n            setDynamicTime={setDynamicTime}\n          />\n        </ExersiceModalTimer>\n      </ExersiceModalWrapper>\n      <ExersiceModalWrapperTwo>\n        <ExersiceModalWindowList\n          name={name}\n          bodyPart={bodyPart}\n          target={target}\n          equipment={equipment}\n          time={time}\n        />\n        <ExersiceModalWindowBtn type=\"button\" onClick={handleAddToDiary}>\n          Add to diary\n        </ExersiceModalWindowBtn>\n      </ExersiceModalWrapperTwo>\n    </ExersiceModalContainer>\n  );\n};\n\nAddExerciseForm.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  burnedCalories: PropTypes.number.isRequired,\n  bodyPart: PropTypes.string.isRequired,\n  target: PropTypes.string.isRequired,\n  equipment: PropTypes.string.isRequired,\n  gifUrl: PropTypes.string.isRequired,\n  time: PropTypes.number.isRequired,\n  onSuccess: PropTypes.func.isRequired,\n  dynamicTime: PropTypes.number.isRequired,\n  setDynamicTime: PropTypes.func.isRequired,\n};\n\nexport default AddExerciseForm;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nimport avocadoImage from '../../assets/images/hand_1x.png';\n\nexport const DivSuccess = styled.div`\n  display: flex;\n  flex-direction: column;   \n  width: 157px;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const DivImg = styled.div`\n  background: url(${avocadoImage}) no-repeat center center;\n  background-size: cover;\n  display: inline-block;\n  width: 118px;\n  height: 73px;\n  margin-bottom: 16px;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 32px;\n  }\n`;\n\nexport const TitleH2 = styled.h2` \n  color: #EFEDE8;\n  font-size: 24px;\n  font-weight: 700;\n  line-height: 1.33;\n  margin-bottom: 16px;\n`;\n\nexport const DivTime = styled.div`\ndisplay: flex;\n  justify-content: center;  \n  gap: 8px;\n  margin-bottom: 4px;\n`;\n\nexport const TimeP = styled.p`  \n  color: rgba(239, 237, 232, 0.30);\n  font-size: 14px;\n  line-height: 1.3;\n`;\n\nexport const ValueTime = styled.p`\n  color: #E6533C;\n  font-size: 14px;\n  line-height: 1.3;\n`;\n\nexport const DivBurnedCalories = styled.div`\ndisplay: flex;\n  justify-content: center;  \n  gap: 8px;\n  margin-bottom: 24px;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 32px;\n  }\n`;\n\nexport const BurnedCaloriesP = styled.p`  \n  color: rgba(239, 237, 232, 0.30);\n  font-size: 14px;\n  line-height: 1.3;\n`;\n\nexport const ValueBurnedCalories = styled.p`\n  color: #E6533C;\n  font-size: 14px;\n  line-height: 1.3;\n`;\n\nexport const ButtonAdd = styled.button`\n  width: 162px;\n  padding: 12px 32px;\n  margin-bottom: 16px;\n  border: none;\n  color:  white;\n  font-size: 16px;\n  font-weight: 500;\n  border-radius: 12px;\n  background: #E6533C;\n  line-height: 1.13;\n  transition:    \n    background 300ms ease-in-out;\n  :hover {    \n    background:  #EF8964;\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 14px 32px;\n    line-height: 1.5;\n  }\n`;\n\nexport const DivLink = styled(Link)`\n  display: flex;\n  justify-content: center; \n  gap: 8px;\n\n`;\n\nexport const LinkText = styled.p`\n  color: rgba(239, 237, 232, 0.30);\n  font-size: 14px;\n  line-height: 1.29; \n  \n  transition: color 300ms ease-in-out;\n`;","import PropTypes from 'prop-types';\n\nimport {\n  DivSuccess,\n  DivImg,\n  TitleH2,\n  DivTime,\n  TimeP,\n  ValueTime,\n  DivBurnedCalories,\n  BurnedCaloriesP,\n  ValueBurnedCalories,\n  ButtonAdd,\n  DivLink,\n  LinkText,\n} from './AddExerciseSuccess.styled';\n\nimport sprite from '../../assets/images/sprite.svg';\n\nconst AddExerciseSuccess = ({ onClose, totalTime, totalBurnedCalories }) => {\n  return (\n    <DivSuccess>\n      <DivImg></DivImg>\n      <TitleH2>Well Done</TitleH2>\n      <DivTime>\n        <TimeP>Your time: </TimeP>\n        <ValueTime>{totalTime} minutes</ValueTime>\n      </DivTime>\n      <DivBurnedCalories>\n        <BurnedCaloriesP>Burned calories: </BurnedCaloriesP>\n        <ValueBurnedCalories>{totalBurnedCalories}</ValueBurnedCalories>\n      </DivBurnedCalories>\n      <ButtonAdd onClick={onClose}>Next exercise</ButtonAdd>\n      <DivLink to=\"/diary\">\n        <LinkText>To the diary</LinkText>\n        <svg width=\"16\" height=\"16\">\n          <use href={sprite + '#arrow_gray'}></use>\n        </svg>\n      </DivLink>\n    </DivSuccess>\n  );\n};\nexport default AddExerciseSuccess;\n\nAddExerciseSuccess.propTypes = {\n  totalTime: PropTypes.number,\n  totalBurnedCalories: PropTypes.number,\n  onClose: PropTypes.func.isRequired,\n};\n","import sprite from 'assets/images/sprite.svg';\nimport PropTypes from 'prop-types';\n\nimport {\n  ExercisesCard,\n  ExercisesCardStatusWorkout,\n  ExercisesCardWorkout,\n  ExercisesCardWorkoutText,\n  ExercisesCardStatus,\n  ExercisesCardAddBtn,\n  IconStart,\n  ExercisesCardTitle,\n  IconBeforeTitle,\n  ExercisesCardInfoList,\n  ExercisesCardInfoItem,\n  ExercisesCardInfoValue,\n} from './ExercisesItem.styled';\nimport BasicModalWindow from 'components/BasicModalWindow/BasicModalWindow';\nimport AddExerciseForm from 'components/AddExerciseForm/AddExerciseForm';\nimport { useState } from 'react';\nimport AddExerciseSuccess from 'components/AddExerciseSuccess/AddExerciseSuccess';\n\nconst ExerciseCardItem = ({\n  id,\n  name,\n  burnedCalories,\n  bodyPart,\n  target,\n  equipment,\n  gifUrl,\n  time,\n}) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isExercAdded, setIsExercAdded] = useState(true);\n  const [totalCalories, setTotalCalories] = useState(0);\n  const [totalTime, setTotalTime] = useState(0);\n\n  const toggleModal = () => {\n    setIsModalOpen(prev => !prev);\n    setIsExercAdded(false);\n    setTotalCalories(0);\n    setTotalTime(0);\n  };\n\n  const onAddedSuccessfully = (time, calories) => {\n    setTotalCalories(calories);\n    setTotalTime(time);\n    setIsExercAdded(true);\n  };\n\n  return (\n    <ExercisesCard>\n      <ExercisesCardStatusWorkout>\n        <ExercisesCardWorkout>\n          <ExercisesCardWorkoutText>WORKOUT</ExercisesCardWorkoutText>\n        </ExercisesCardWorkout>\n        <ExercisesCardStatus>\n          <ExercisesCardAddBtn type=\"button\" onClick={toggleModal}>\n            Start\n            <IconStart>\n              <use href={`${sprite}#icon-arrow`} />\n            </IconStart>\n          </ExercisesCardAddBtn>\n        </ExercisesCardStatus>\n      </ExercisesCardStatusWorkout>\n\n      <ExercisesCardTitle>\n        <IconBeforeTitle>\n          <use href={`${sprite}#icon-icon`} />\n        </IconBeforeTitle>\n        {name}\n      </ExercisesCardTitle>\n\n      <ExercisesCardInfoList>\n        <ExercisesCardInfoItem>\n          Burned calories:\n          <ExercisesCardInfoValue>{burnedCalories}</ExercisesCardInfoValue>\n        </ExercisesCardInfoItem>\n\n        <ExercisesCardInfoItem>\n          Body part:\n          <ExercisesCardInfoValue>{bodyPart}</ExercisesCardInfoValue>\n        </ExercisesCardInfoItem>\n\n        <ExercisesCardInfoItem>\n          Target:\n          <ExercisesCardInfoValue>{target}</ExercisesCardInfoValue>\n        </ExercisesCardInfoItem>\n      </ExercisesCardInfoList>\n\n      {isModalOpen && (\n        <BasicModalWindow isOpenModalToggle={toggleModal}>\n          {isExercAdded ? (\n            <AddExerciseSuccess\n              key={'exercSuccess'}\n              onClose={toggleModal}\n              totalTime={totalTime}\n              totalBurnedCalories={totalCalories}\n            />\n          ) : (\n            <AddExerciseForm\n              key={'addExerc'}\n              id={id}\n              name={name}\n              burnedCalories={burnedCalories}\n              bodyPart={bodyPart}\n              target={target}\n              gifUrl={gifUrl}\n              equipment={equipment}\n              time={time}\n              onSuccess={onAddedSuccessfully}\n              dynamicTime={totalTime}\n              setDynamicTime={setTotalTime}\n            />\n          )}\n        </BasicModalWindow>\n      )}\n    </ExercisesCard>\n  );\n};\n\nExerciseCardItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  burnedCalories: PropTypes.number.isRequired,\n  bodyPart: PropTypes.string.isRequired,\n  target: PropTypes.string.isRequired,\n  equipment: PropTypes.string.isRequired,\n  gifUrl: PropTypes.string.isRequired,\n  time: PropTypes.number.isRequired,\n};\n\nexport default ExerciseCardItem;\n","import styled from '@emotion/styled';\n\nexport const ExercisesListUl = styled.ul`\n  @media screen and (min-width: 375px) {\n    min-height: 487px;\n    display: flex;\n    flex-wrap: wrap;\n    gap: 20px;\n  }\n\n  @media screen and (min-width: 768px) {\n    overflow-y: scroll;\n    max-height: 660px;\n    gap: 32px 16px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 850px;\n    max-height: 487px;\n  }\n`;\n","import ExerciseCardItem from 'components/ExercisesItem/ExercisesItem';\nimport { useSelector } from 'react-redux';\nimport { selectExercises } from 'redux/api/apiSelectors';\nimport { ExercisesListUl } from './ExercisesList.styled';\n\nconst ExercisesList = () => {\n  const exercises = useSelector(selectExercises);\n  const { result } = exercises;\n\n  return (\n    <ExercisesListUl>\n      {result &&\n        result.length > 0 &&\n        result.map(\n          ({\n            _id,\n            name,\n            burnedCalories,\n            bodyPart,\n            target,\n            equipment,\n            gifUrl,\n            time,\n          }) => (\n            <ExerciseCardItem\n              key={_id}\n              id={_id}\n              name={name}\n              burnedCalories={burnedCalories}\n              bodyPart={bodyPart}\n              target={target}\n              gifUrl={gifUrl}\n              equipment={equipment}\n              time={time}\n            />\n          )\n        )}\n    </ExercisesListUl>\n  );\n};\n\nexport default ExercisesList;\n","import Container from 'components/Container';\nimport TitlePage from 'components/TitlePage';\nimport { ExercisesCategories } from 'components/ExercisesCategories/ExercisesCategories';\nimport ExercisesSubcategoriesList from 'components/ExercisesSubcategoriesList/ExercisesSubcategoriesList';\nimport sprite from '../../assets/images/sprite.svg';\n\nimport {\n  ExercisesWrapper,\n  ContentDiv,\n  WrapperTitleCategoriesDiv,\n  BackButton,\n} from './Exercises.styled';\n\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilters, selectIsLoading } from 'redux/api/apiSelectors';\nimport { useEffect, useState } from 'react';\nimport { fetchExercises, fetchFilters } from 'redux/api/apiOperations';\nimport Loader from 'components/Loader';\nimport ExercisesList from 'components/ExercisesList';\n\nconst exercisesCategories = {\n  bodyparts: 'Body parts',\n  muscles: 'Muscles',\n  equipment: 'Equipment',\n};\n\nconst exercisesFilter = {\n  bodyparts: 'bodypart',\n  muscles: 'muscles',\n  equipment: 'equipment',\n};\n\nconst Exercises = () => {\n  const { pathname } = useLocation();\n  const pageName = pathname.split('/')[2];\n  const categoryName = exercisesCategories[pageName];\n  const [category, setCategory] = useState(\n    localStorage.getItem('category') ?? 'Body parts'\n  );\n  const [toggleList, setToggleList] = useState(false);\n  const [subCategory, setSubcategory] = useState('');\n  const [pageNumber, setPageNumber] = useState(1);\n  const elementsPerPage =\n    window.innerWidth >= 768 && window.innerWidth < 1440 ? 9 : 10;\n  const dispatch = useDispatch();\n  const filterResult = useSelector(selectFilters).result;\n  const isLoading = useSelector(selectIsLoading);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (pathname === '/exercises') {\n      navigate('/exercises/bodyparts');\n    }\n  }, [navigate, pathname]);\n\n  useEffect(() => {\n    localStorage.setItem('category', category);\n    setCategory(categoryName);\n  }, [category, categoryName]);\n\n  useEffect(() => {\n    dispatch(\n      fetchFilters({\n        filter: category,\n        page: pageNumber,\n        limit: elementsPerPage,\n      })\n    );\n  }, [category, dispatch, elementsPerPage, pageNumber]);\n\n  const handleCategoryClick = () => {\n    setPageNumber(1);\n    setToggleList(false);\n    setSubcategory('');\n  };\n\n  const handleSubCategoryClick = name => {\n    setSubcategory(name);\n    dispatch(fetchExercises({ [exercisesFilter[pageName]]: name }));\n    setToggleList(true);\n  };\n\n  const capitalizeString = string => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  };\n\n  return (\n    <ExercisesWrapper className={toggleList ? 'exercises-list' : null}>\n      <Container>\n        {isLoading && <Loader />}\n        <ContentDiv>\n          {toggleList && (\n            <BackButton\n              type=\"button\"\n              onClick={() => setToggleList(prev => !prev)}\n            >\n              <svg>\n                <use href={`${sprite}#arrow_gray`}></use>\n              </svg>\n              Back\n            </BackButton>\n          )}\n          <WrapperTitleCategoriesDiv>\n            <TitlePage\n              title={toggleList ? capitalizeString(subCategory) : 'Exercises'}\n            />\n            <ExercisesCategories handleClick={handleCategoryClick} />\n          </WrapperTitleCategoriesDiv>\n          {filterResult && !toggleList && (\n            <ExercisesSubcategoriesList\n              handleSubCategoryClick={handleSubCategoryClick}\n              handleChangePage={number => setPageNumber(number)}\n              pageNumber={pageNumber}\n              elementsPerPage={elementsPerPage}\n            />\n          )}\n          {toggleList && <ExercisesList />}\n        </ContentDiv>\n      </Container>\n    </ExercisesWrapper>\n  );\n};\n\nexport default Exercises;\n","export const selectCategories = state => state.api.categories; // []\n\nexport const selectExercises = state => state.api.exercises; // { result: [], total_results: number }\n\nexport const selectFilters = state => state.api.filters; // { result: [], total_results: number }\n\nexport const selectProducts = state => state.api.products; // { result: [], total_results: number }\n\nexport const selectIsLoading = state => state.api.isLoading; // boolean\n\nexport const selectError = state => state.api.error; // { message: string }\n\nexport const selectCalculate = state => state.api.calculate; // {}\n\nexport const selectDiary = state => state.api.diary; // {}\n\nexport const selectDiaryUpdated = state => state.api.diaryUpdated; // boolean\n\nexport const selectStatistics = state => state.api.statistics; // {}\n"],"names":["BasicWindow","styled","div","_templateObject","_taggedTemplateLiteral","Modal","_templateObject2","_ref","children","some","child","key","ButtonClouse","button","_templateObject3","SvgClouse","svg","_templateObject4","isOpenModalToggle","useEffect","closeESC","e","code","document","addEventListener","removeEventListener","modal","_jsx","onClick","currentTarget","target","_jsxs","href","sprite","createPortal","querySelector","ContainerWrapper","Title","h1","title","ExercisesCategoriesUl","ul","ExercisesCategoriesLi","li","ExercisesCategoriesNavLink","NavLink","ExercisesCategories","handleClick","to","ExercisesSubcategoryPictureLi","CardWrapper","InfoWrapper","props","img","DescriptionUl","MainText","p","_templateObject5","Subtext","_templateObject6","ExercisesSubcategoriesItem","category","name","filter","src","imgURL","alt","SubcategoriesList","ExercisesListUl","PaginationBlock","PaginationButton","pageNumber","elementsPerPage","handleSubCategoryClick","handleChangePage","_useSelector","useSelector","selectFilters","categories","result","totalCategories","total_results","numberOfPages","Math","ceil","buttonsAmount","index","push","map","_id","number","type","className","ExercisesWrapper","exercises_background_1x","exercises_background_2x","ContentDiv","WrapperTitleCategoriesDiv","margin","BackButton","ExercisesCard","ExercisesCardStatusWorkout","label","ExercisesCardWorkout","span","ExercisesCardWorkoutText","ExercisesCardStatus","ExercisesCardAddBtn","IconStart","_templateObject7","IconBeforeTitle","_templateObject8","ExercisesCardTitle","h4","_templateObject9","ExercisesCardInfoList","_templateObject10","ExercisesCardInfoItem","_templateObject11","ExercisesCardInfoValue","_templateObject12","ExersiceModalList","ExersiceModalLink","ExersiceModalLinkSub","ExersiceModalLinkTitle","bodyPart","equipment","G","window","M","L","T","o","B","position","width","height","P","display","justifyContent","alignItems","left","top","F","n","t","s","W","replace","r","i","concat","substring","match","parseInt","j","u","colors","colorsTime","_o$isSmoothColorTrans","isSmoothColorTransition","findIndex","a","h","c","m","f","isGrowing","join","S","duration","initialRemainingTime","updateInterval","_o$size","size","_o$strokeWidth","strokeWidth","trailStrokeWidth","_o$isPlaying","isPlaying","_o$isGrowing","_o$rotation","rotation","onComplete","onUpdate","U","_A","PI","path","pathLength","A","max","w","$","_I","_ref$startAt","startAt","_ref$updateInterval","_E","E","_E2","_slicedToArray","b","g","l","current","requestAnimationFrame","d","C","k","R","v","cancelAnimationFrame","clearTimeout","y","q","_ref2","_ref2$shouldRepeat","shouldRepeat","_ref2$delay","delay","newStartAt","setTimeout","elapsedTime","reset","I","_ref3","newInitialRemainingTime","remainingTime","stroke","strokeDashoffset","D","strokeLinecap","trailColor","_S","x","style","viewBox","xmlns","fill","strokeDasharray","color","displayName","TimerWrapper","TimerTitle","TimerBtn","PlayIcon","TimerText","TimerSub","time","burnedCalories","setDynamicBurnCal","dynamicBurnCal","setDynamicTime","_useState","useState","_useState2","setIsPlaying","updateDynamicValues","burnCal","round","interval","setInterval","remainingTimeRef","clearInterval","useRef","minutes","floor","seconds","String","padStart","CountdownCircleTimer","_ref4","role","symbolDefs","ExersiceModalContainer","ExersiceModalWrapper","ExersiceModalWrapperTwo","ExersiceModalTimer","ExersiceModalImg","ExersiceModalWindowBtn","id","gifUrl","onSuccess","dynamicTime","error","selectError","isLoading","selectIsLoading","dispatch","useDispatch","amount","savedDate","localStorage","getItem","date","Date","parsedDate","isNaN","getTime","formattedDate","day","getDate","month","getMonth","year","getFullYear","formatDate","handleAddToDiary","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","Notify","failure","abrupt","addExercise","exerciseId","workoutTime","caloriesBurned","unwrap","stop","apply","arguments","Loader","Timer","ExersiceModalWindowList","DivSuccess","DivImg","TitleH2","h2","DivTime","TimeP","ValueTime","DivBurnedCalories","BurnedCaloriesP","ValueBurnedCalories","ButtonAdd","DivLink","Link","LinkText","onClose","totalTime","totalBurnedCalories","isModalOpen","setIsModalOpen","_useState3","_useState4","isExercAdded","setIsExercAdded","_useState5","_useState6","totalCalories","setTotalCalories","_useState7","_useState8","setTotalTime","toggleModal","BasicModalWindow","AddExerciseSuccess","AddExerciseForm","calories","selectExercises","length","ExerciseCardItem","exercisesCategories","bodyparts","muscles","exercisesFilter","_localStorage$getItem","pathname","useLocation","pageName","split","categoryName","setCategory","toggleList","setToggleList","subCategory","setSubcategory","setPageNumber","innerWidth","filterResult","navigate","useNavigate","setItem","fetchFilters","page","limit","string","Container","TitlePage","charAt","toUpperCase","slice","ExercisesSubcategoriesList","fetchExercises","_defineProperty","ExercisesList","selectCategories","state","api","exercises","filters","selectProducts","products","selectCalculate","calculate","selectDiary","diary","selectDiaryUpdated","diaryUpdated","selectStatistics","statistics"],"sourceRoot":""}
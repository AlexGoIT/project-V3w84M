{"version":3,"file":"static/js/534.f4c336fa.chunk.js","mappings":"4IAMA,IAJkB,SAAHA,GAAsB,IAAhBC,EAAQD,EAARC,SACnB,OAAOC,EAAAA,EAAAA,KAACC,EAAAA,EAAgB,CAAAF,SAAEA,GAC5B,C,sECFaE,E,QAAmBC,EAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6W,0JCA7BC,EAAaJ,EAAAA,EAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yDAMvBE,EAAaL,EAAAA,EAAOC,IAAGK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,uKAevBI,GALcP,EAAAA,EAAOQ,IAAI,CACpCC,MAAO,OACPC,OAAQ,SAGmBV,EAAAA,EAAOC,IAAGU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,mN,mBCJvC,EAbe,SAAHP,GAAoB,IAAdgB,EAAMhB,EAANgB,OAChB,OACEC,EAAAA,EAAAA,MAACT,EAAU,CAAAP,SAAA,EACTC,EAAAA,EAAAA,KAACO,EAAU,CAAAR,UACTC,EAAAA,EAAAA,KAAA,OAAKW,MAAM,KAAKC,OAAO,KAAKI,KAAK,UAASjB,UACxCC,EAAAA,EAAAA,KAAA,OAAKiB,KAAI,GAAAC,OAAKC,EAAAA,EAAM,mBAGxBnB,EAAAA,EAAAA,KAACS,EAAa,CAAAV,SAAEe,MAGtB,C,sECfaM,E,QAAQlB,EAAOmB,GAAEjB,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yU,SCK9B,EAJkB,SAAHP,GAAmB,IAAbwB,EAAKxB,EAALwB,MACnB,OAAOtB,EAAAA,EAAAA,KAACoB,EAAK,CAAArB,SAAEuB,GACjB,C,4RCHaC,GAAmBrB,GAAAA,EAAOsB,GAAEpB,IAAAA,GAAAC,EAAAA,GAAAA,GAAA,2eAmD5BoB,GAAgBvB,GAAAA,EAAOwB,GAAElB,IAAAA,GAAAH,EAAAA,GAAAA,GAAA,yXAbZ,SAAAsB,GACxB,OAAQA,EAAMC,aACZ,IAAK,MACH,MAAO,UACT,IAAK,QACH,MAAO,UAGT,QACE,MAAO,2BAEb,IAtBmB,SAAAD,GACjB,MACO,SADCA,EAAME,OAEH,UAIA,2BAEb,IAoCaC,GAAY5B,GAAAA,EAAOC,IAAGU,IAAAA,GAAAR,EAAAA,GAAAA,GAAA,iEAMtB0B,GAAO7B,GAAAA,EAAOQ,IACzB,CACEC,MAAO,OACPC,OAAQ,SAEV,SAAAd,GAAA,IAAAkC,EAAAlC,EAAGmC,UAAAA,OAAS,IAAAD,EAAG,UAASA,EAAA,MAAQ,CAC9BhB,KAAMiB,EACNC,OAAQD,EACT,IAcUb,GAAQlB,GAAAA,EAAOiC,EAACC,IAAAA,GAAA/B,EAAAA,GAAAA,GAAA,kEAXP,SAAAsB,GACpB,MACO,SADCA,EAAME,OAEH,2BAIA,0BAEb,IAQaQ,GAAQnC,GAAAA,EAAOiC,EAACG,IAAAA,GAAAjC,EAAAA,GAAAA,GAAA,gM,qBCT7B,GAzFqB,SAAHP,GAAkB,IAAZyC,EAAIzC,EAAJyC,KAEpBC,EAMED,EANFC,sBACAC,EAKEF,EALFE,QACAC,EAIEH,EAJFG,kBACAC,EAGEJ,EAHFI,oBACAC,EAEEL,EAFFK,kBACAC,EACEN,EADFM,gBAGF,OACE9B,EAAAA,GAAAA,MAACQ,GAAgB,CAAAxB,SAAA,EACfgB,EAAAA,GAAAA,MAACU,GAAa,CAACI,OAAO,OAAM9B,SAAA,EAC1BgB,EAAAA,GAAAA,MAACe,GAAS,CAAA/B,SAAA,EACRC,EAAAA,GAAAA,KAAC+B,GAAI,CAACE,UAAU,UAASlC,UACvBC,EAAAA,GAAAA,KAAA,OAAKiB,KAAI,GAAAC,OAAKC,GAAAA,EAAM,cAEtBnB,EAAAA,GAAAA,KAACoB,GAAK,CAACS,OAAO,OAAM9B,SAAC,4BAEtBwC,GAAqC,IAA7BO,OAAOC,KAAKR,GAAMS,SAAgBhD,EAAAA,GAAAA,KAACqC,GAAK,CAAAtC,SAAE0C,QAErD1B,EAAAA,GAAAA,MAACU,GAAa,CAACI,OAAO,OAAM9B,SAAA,EAC1BgB,EAAAA,GAAAA,MAACe,GAAS,CAAA/B,SAAA,EACRC,EAAAA,GAAAA,KAAC+B,GAAI,CAACE,UAAU,UAASlC,UACvBC,EAAAA,GAAAA,KAAA,OAAKiB,KAAI,GAAAC,OAAKC,GAAAA,EAAM,kBAEtBnB,EAAAA,GAAAA,KAACoB,GAAK,CAACS,OAAO,OAAM9B,SAAC,+BAEtBwC,GAAqC,IAA7BO,OAAOC,KAAKR,GAAMS,SACzBjC,EAAAA,GAAAA,MAACsB,GAAK,CAAAtC,SAAA,CAAEyC,EAAsB,cAGlCzB,EAAAA,GAAAA,MAACU,GAAa,CAACI,OAAO,QAAO9B,SAAA,EAC3BgB,EAAAA,GAAAA,MAACe,GAAS,CAAA/B,SAAA,EACRC,EAAAA,GAAAA,KAAC+B,GAAI,CAACE,UAAU,UAASlC,UACvBC,EAAAA,GAAAA,KAAA,OAAKiB,KAAI,GAAAC,OAAKC,GAAAA,EAAM,eAEtBnB,EAAAA,GAAAA,KAACoB,GAAK,CAACS,OAAO,QAAO9B,SAAC,yBAEvBwC,GAAqC,IAA7BO,OAAOC,KAAKR,GAAMS,SACzBhD,EAAAA,GAAAA,KAACqC,GAAK,CAAAtC,SAAE4C,QAGZ5B,EAAAA,GAAAA,MAACU,GAAa,CAACI,OAAO,QAAO9B,SAAA,EAC3BgB,EAAAA,GAAAA,MAACe,GAAS,CAAA/B,SAAA,EACRC,EAAAA,GAAAA,KAAC+B,GAAI,CAACE,UAAU,UAASlC,UACvBC,EAAAA,GAAAA,KAAA,OAAKiB,KAAI,GAAAC,OAAKC,GAAAA,EAAM,cAEtBnB,EAAAA,GAAAA,KAACoB,GAAK,CAACS,OAAO,QAAO9B,SAAC,uBAEvBwC,GAAqC,IAA7BO,OAAOC,KAAKR,GAAMS,SACzBhD,EAAAA,GAAAA,KAACqC,GAAK,CAAAtC,SAAE2C,QAGZ3B,EAAAA,GAAAA,MAACU,GAAa,CACZI,OAAO,QACPD,YAAagB,GAAqB,EAAI,UAAY,MAAM7C,SAAA,EAExDgB,EAAAA,GAAAA,MAACe,GAAS,CAAA/B,SAAA,EACRC,EAAAA,GAAAA,KAAC+B,GAAI,CAACE,UAAU,UAASlC,UACvBC,EAAAA,GAAAA,KAAA,OAAKiB,KAAI,GAAAC,OAAKC,GAAAA,EAAM,gBAEtBnB,EAAAA,GAAAA,KAACoB,GAAK,CAACS,OAAO,QAAO9B,SAAC,0BAEvBwC,GAAqC,IAA7BO,OAAOC,KAAKR,GAAMS,SACzBhD,EAAAA,GAAAA,KAACqC,GAAK,CAAAtC,SAAE6C,QAGZ7B,EAAAA,GAAAA,MAACU,GAAa,CACZI,OAAO,QACPD,YAAaiB,GAAmB,EAAI,UAAY,QAAQ9C,SAAA,EAExDgB,EAAAA,GAAAA,MAACe,GAAS,CAAA/B,SAAA,EACRC,EAAAA,GAAAA,KAAC+B,GAAI,CAACE,UAAU,UAASlC,UACvBC,EAAAA,GAAAA,KAAA,OAAKiB,KAAI,GAAAC,OAAKC,GAAAA,EAAM,gBAEtBnB,EAAAA,GAAAA,KAACoB,GAAK,CAACS,OAAO,QAAO9B,SAAC,wBAEvBwC,GAAqC,IAA7BO,OAAOC,KAAKR,GAAMS,SACzBjC,EAAAA,GAAAA,MAACsB,GAAK,CAAAtC,SAAA,CACH8C,GAAmB,GAAI7C,EAAAA,GAAAA,KAAA,YAAgBA,EAAAA,GAAAA,KAAA,QAAAD,SAAM,MAC7CkD,KAAKC,IAAIL,GAAiB,eAMvC,E,sBCpFaM,GAAmBjD,GAAAA,EAAOC,IAAGC,IAAAA,GAAAC,EAAAA,GAAAA,GAAA,wVAXxB,SAAAsB,GAChB,MACO,SADCA,EAAMyB,UAEH,SAIA,OAEb,IAoBatB,GAAY5B,GAAAA,EAAOC,IAAGK,IAAAA,GAAAH,EAAAA,GAAAA,GAAA,qNAatBe,GAAQlB,GAAAA,EAAOmD,GAAExC,IAAAA,GAAAR,EAAAA,GAAAA,GAAA,uFAMjBiD,GAASpD,GAAAA,EAAOqD,OAAMnB,IAAAA,GAAA/B,EAAAA,GAAAA,GAAA,gHAQtBmD,GAAMtD,GAAAA,EAAOiC,EAACG,IAAAA,GAAAjC,EAAAA,GAAAA,GAAA,gMAadoD,GAAYvD,GAAAA,EAAOQ,IAC9B,CACEC,MAAO,OACPC,OAAQ,SAEV,SAAAd,GAAA,IAAAkC,EAAAlC,EAAGmC,UAAAA,OAAS,IAAAD,EAAG,UAASA,EAAA,MAAQ,CAC9BhB,KAAMiB,EACNC,OAAQD,EACT,IAGUyB,GAAUxD,GAAAA,EAAOiC,EAACwB,IAAAA,GAAAtD,EAAAA,GAAAA,GAAA,wSAiBlBuD,GAAY1D,GAAAA,EAAOC,IAAG0D,IAAAA,GAAAxD,EAAAA,GAAAA,GAAA,mFAMtByD,GAAc5D,GAAAA,EAAOC,IAAG4D,IAAAA,GAAA1D,EAAAA,GAAAA,GAAA,+hBAsBxB2D,GAAQ9D,GAAAA,EAAOC,IAAG8D,IAAAA,GAAA5D,EAAAA,GAAAA,GAAA,+BAGlB6D,GAAQhE,GAAAA,EAAOC,IAAGgE,IAAAA,GAAA9D,EAAAA,GAAAA,GAAA,+BAGlB+D,GAAQlE,GAAAA,EAAOC,IAAGkE,IAAAA,GAAAhE,EAAAA,GAAAA,GAAA,+BAGlBiE,GAAQpE,GAAAA,EAAOC,IAAGoE,IAAAA,GAAAlE,EAAAA,GAAAA,GAAA,+BAGlBmE,GAAQtE,GAAAA,EAAOC,IAAGsE,IAAAA,GAAApE,EAAAA,GAAAA,GAAA,+BAGlBqE,GAAQxE,GAAAA,EAAOC,IAAGwE,IAAAA,GAAAtE,EAAAA,GAAAA,GAAA,+BAGlBuE,GAAQ1E,GAAAA,EAAOC,IAAG0E,IAAAA,GAAAxE,EAAAA,GAAAA,GAAA,+BAIlByE,GAAe5E,GAAAA,EAAOC,IAAG4E,IAAAA,GAAA1E,EAAAA,GAAAA,GAAA,mFAMzB2E,GAAO9E,GAAAA,EAAOC,IAAG8E,IAAAA,GAAA5E,EAAAA,GAAAA,GAAA,wmB,uDCzJjB6E,GAAchF,GAAAA,EAAOC,IAAGC,IAAAA,GAAAC,EAAAA,GAAAA,GAAA,gxBA6BxB2D,GAAQ9D,GAAAA,EAAOC,IAAGK,IAAAA,GAAAH,EAAAA,GAAAA,GAAA,+BAGlB6D,GAAQhE,GAAAA,EAAOC,IAAGU,IAAAA,GAAAR,EAAAA,GAAAA,GAAA,+BAGlB+D,GAAQlE,GAAAA,EAAOC,IAAGiC,IAAAA,GAAA/B,EAAAA,GAAAA,GAAA,+BAGlBiE,GAAQpE,GAAAA,EAAOC,IAAGmC,IAAAA,GAAAjC,EAAAA,GAAAA,GAAA,+BAGlBmE,GAAQtE,GAAAA,EAAOC,IAAGwD,IAAAA,GAAAtD,EAAAA,GAAAA,GAAA,+BAGlBqE,GAAQxE,GAAAA,EAAOC,IAAG0D,IAAAA,GAAAxD,EAAAA,GAAAA,GAAA,+BAGlBuE,GAAQ1E,GAAAA,EAAOC,IAAG4D,IAAAA,GAAA1D,EAAAA,GAAAA,GAAA,+BAIlBe,GAAQlB,GAAAA,EAAOiC,EAAC8B,IAAAA,GAAA5D,EAAAA,GAAAA,GAAA,4PAehB8E,GAASjF,GAAAA,EAAOC,IAAGgE,IAAAA,GAAA9D,EAAAA,GAAAA,GAAA,4SAgBnB+E,GAAWlF,GAAAA,EAAOqD,OAAMc,IAAAA,GAAAhE,EAAAA,GAAAA,GAAA,uHAQxBgF,GAAanF,GAAAA,EAAOQ,IAC/B,CACEC,MAAO,OACPC,OAAQ,SAEV,SAAAd,GAAA,IAAAkC,EAAAlC,EAAGmC,UAAAA,OAAS,IAAAD,EAAG,UAASA,EAAA,MAAQ,CAC9BhB,KAAMiB,EACNC,OAAQD,EACT,I,SCnBH,GA9DqB,SAAHnC,GAMX,IALLwF,EAAExF,EAAFwF,GACAC,EAAQzF,EAARyF,SACAC,EAAc1F,EAAd0F,eACAC,EAAI3F,EAAJ2F,KACAC,EAAa5F,EAAb4F,cAEMC,GAAWC,EAAAA,GAAAA,MAMjB,OACE7E,EAAAA,GAAAA,MAACmE,GAAW,CAAAnF,SAAA,EACVgB,EAAAA,GAAAA,MAACiD,GAAK,CAAAjE,SAAA,EACJC,EAAAA,GAAAA,KAACoB,GAAK,CAAArB,SAAC,eACPC,EAAAA,GAAAA,KAACmF,GAAM,CAAApF,SAAEwF,EAASM,eAEpB9E,EAAAA,GAAAA,MAACmD,GAAK,CAAAnE,SAAA,EACJC,EAAAA,GAAAA,KAACoB,GAAK,CAAArB,SAAC,eACPC,EAAAA,GAAAA,KAACmF,GAAM,CAAApF,SAAEwF,EAASO,gBAEpB/E,EAAAA,GAAAA,MAACqD,GAAK,CAAArE,SAAA,EACJC,EAAAA,GAAAA,KAACoB,GAAK,CAAArB,SAAC,UACPC,EAAAA,GAAAA,KAACmF,GAAM,CAAApF,SAAEwF,EAASQ,WAEpBhF,EAAAA,GAAAA,MAACuD,GAAK,CAAAvE,SAAA,EACJC,EAAAA,GAAAA,KAACoB,GAAK,CAAArB,SAAC,YACPC,EAAAA,GAAAA,KAACmF,GAAM,CAAApF,SAAEwF,EAASS,aAEpBjF,EAAAA,GAAAA,MAACyD,GAAK,CAAAzE,SAAA,EACJC,EAAAA,GAAAA,KAACoB,GAAK,CAAArB,SAAC,oBACPC,EAAAA,GAAAA,KAACmF,GAAM,CAAApF,SAAEyF,QAEXzE,EAAAA,GAAAA,MAAC2D,GAAK,CAAA3E,SAAA,EACJC,EAAAA,GAAAA,KAACoB,GAAK,CAAArB,SAAC,UACPC,EAAAA,GAAAA,KAACmF,GAAM,CAAApF,SAAE0F,QAEX1E,EAAAA,GAAAA,MAAC6D,GAAK,CAAA7E,SAAA,EACJC,EAAAA,GAAAA,KAACoB,GAAK,KACNpB,EAAAA,GAAAA,KAACoF,GAAQ,CAACa,QAAS,kBAhCL,SAACX,EAAII,GACvBC,GAASO,EAAAA,GAAAA,IAAe,CAAEC,WAAYb,EAAIc,KAAMV,IAClD,CA8B+BW,CAAYf,EAAII,EAAc,EAAC3F,UACtDC,EAAAA,GAAAA,KAACqF,GAAU,CAACpD,UAAU,UAASlC,UAC7BC,EAAAA,GAAAA,KAAA,OAAKiB,KAAI,GAAAC,OAAKC,GAAAA,EAAM,qBA7BVmE,EAmCtB,E,sBCgCA,GAvEqB,SAAHxF,GAA0C,IAApCwG,EAAaxG,EAAbwG,cAAeZ,EAAa5F,EAAb4F,cAC/Ba,GAAYC,EAAAA,GAAAA,IAAYC,GAAAA,IACxBC,GAAQF,EAAAA,GAAAA,IAAYG,GAAAA,IACpBC,GAAWC,EAAAA,GAAAA,MAEXC,EAAU,eAAAC,GAAAC,EAAAA,GAAAA,IAAAC,EAAAA,GAAAA,KAAAC,MAAG,SAAAC,EAAMC,GAAK,IAAApE,EAAA,OAAAiE,EAAAA,GAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAELJ,EAAMpE,OAAO,KAAD,EAArB,OAANA,EAAMsE,EAAAG,KAAAH,EAAAI,OAAA,SACL1E,GAAM,cAAAsE,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAAAA,EAAAI,OAAA,SAAAJ,EAAAK,IAAA,yBAAAL,EAAAM,OAAA,GAAAT,EAAA,kBAIhB,gBAPeU,GAAA,OAAAd,EAAAe,MAAA,KAAAC,UAAA,KAQVC,EAAclB,EAAWR,GAE/B2B,GAAoDC,EAAAA,GAAAA,WAAS,GAAKC,GAAAC,EAAAA,GAAAA,GAAAH,EAAA,GAA3DI,EAAkBF,EAAA,GAAEG,EAAqBH,EAAA,GAKhD,OAJoB,IAAhBH,GACFM,GAAsB,IAItBvH,EAAAA,GAAAA,MAACoC,GAAgB,CAACC,UAAWiF,EAAmBtI,SAAA,EAC9CgB,EAAAA,GAAAA,MAACe,GAAS,CAAA/B,SAAA,EACRC,EAAAA,GAAAA,KAACoB,GAAK,CAAArB,SAAC,gBACPC,EAAAA,GAAAA,KAACuI,GAAAA,GAAI,CAACC,GAAE,aAAgBC,MAAO,CAAEC,KAAM9B,GAAW7G,UAChDgB,EAAAA,GAAAA,MAACuC,GAAM,CAAAvD,SAAA,EACLC,EAAAA,GAAAA,KAACwD,GAAG,CAAAzD,SAAC,kBACLC,EAAAA,GAAAA,KAACyD,GAAS,CAACxB,UAAU,UAASlC,UAC5BC,EAAAA,GAAAA,KAAA,OAAKiB,KAAI,GAAAC,OAAKC,GAAAA,EAAM,uBAM5BJ,EAAAA,GAAAA,MAAC6C,GAAS,CAAA7D,SAAA,CACPwG,IAAavG,EAAAA,GAAAA,KAAC2I,GAAAA,EAAM,IACpBrC,GAAiBA,EAActD,OAAS,GACvCjC,EAAAA,GAAAA,MAAA6H,GAAAA,SAAA,CAAA7I,SAAA,EACEgB,EAAAA,GAAAA,MAAC+C,GAAW,CAAA/D,SAAA,EACVC,EAAAA,GAAAA,KAACgE,GAAK,CAAAjE,SAAC,eACPC,EAAAA,GAAAA,KAACkE,GAAK,CAAAnE,SAAC,eACPC,EAAAA,GAAAA,KAACoE,GAAK,CAAArE,SAAC,UACPC,EAAAA,GAAAA,KAACsE,GAAK,CAAAvE,SAAC,YACPC,EAAAA,GAAAA,KAACwE,GAAK,CAAAzE,UACJC,EAAAA,GAAAA,KAAC8E,GAAY,CAAA/E,SAAC,uBAEhBC,EAAAA,GAAAA,KAAC0E,GAAK,CAAA3E,SAAC,UACPC,EAAAA,GAAAA,KAAC4E,GAAK,QAER5E,EAAAA,GAAAA,KAACgF,GAAI,CAAAjF,SACFuG,EAAcuC,KAAI,SAAAC,GAAA,IAAGC,EAAGD,EAAHC,IAAKxD,EAAQuD,EAARvD,SAAUC,EAAcsD,EAAdtD,eAAgBC,EAAIqD,EAAJrD,KAAI,OACvDzF,EAAAA,GAAAA,KAACgJ,GAAY,CAEX1D,GAAIyD,EACJxD,SAAUA,EACVC,eAAgBA,EAChBC,KAAMA,EACNC,cAAeA,GALVqD,EAML,UAKR/I,EAAAA,GAAAA,KAAC0D,GAAO,CAAA3D,SAAC,wBAEV2G,GAASuC,GAAAA,OAAOC,QAAQxC,EAAMyC,cAIvC,ECrFaC,GAAkBlJ,GAAAA,EAAOC,IAAGC,IAAAA,GAAAC,EAAAA,GAAAA,GAAA,0VAXvB,SAAAsB,GAChB,MACO,SADCA,EAAMyB,UAEH,QAIA,OAEb,IAoBatB,GAAY5B,GAAAA,EAAOC,IAAGK,IAAAA,GAAAH,EAAAA,GAAAA,GAAA,qNAatBe,GAAQlB,GAAAA,EAAOmD,GAAExC,IAAAA,GAAAR,EAAAA,GAAAA,GAAA,uFAMjBiD,GAASpD,GAAAA,EAAOqD,OAAMnB,IAAAA,GAAA/B,EAAAA,GAAAA,GAAA,gHAQtBmD,GAAMtD,GAAAA,EAAOiC,EAACG,IAAAA,GAAAjC,EAAAA,GAAAA,GAAA,gMAadoD,GAAYvD,GAAAA,EAAOQ,IAC9B,CACEC,MAAO,OACPC,OAAQ,SAEV,SAAAd,GAAA,IAAAkC,EAAAlC,EAAGmC,UAAAA,OAAS,IAAAD,EAAG,UAASA,EAAA,MAAQ,CAC9BhB,KAAMiB,EACNC,OAAQD,EACT,IAGUyB,GAAUxD,GAAAA,EAAOiC,EAACwB,IAAAA,GAAAtD,EAAAA,GAAAA,GAAA,wSAgBlBuD,GAAY1D,GAAAA,EAAOC,IAAG0D,IAAAA,GAAAxD,EAAAA,GAAAA,GAAA,mFAMtByD,GAAc5D,GAAAA,EAAOC,IAAG4D,IAAAA,GAAA1D,EAAAA,GAAAA,GAAA,ghBAsBxB2D,GAAQ9D,GAAAA,EAAOC,IAAG8D,IAAAA,GAAA5D,EAAAA,GAAAA,GAAA,+BAGlB6D,GAAQhE,GAAAA,EAAOC,IAAGgE,IAAAA,GAAA9D,EAAAA,GAAAA,GAAA,+BAGlB+D,GAAQlE,GAAAA,EAAOC,IAAGkE,IAAAA,GAAAhE,EAAAA,GAAAA,GAAA,+BAGlBiE,GAAQpE,GAAAA,EAAOC,IAAGoE,IAAAA,GAAAlE,EAAAA,GAAAA,GAAA,+BAGlBmE,GAAQtE,GAAAA,EAAOC,IAAGsE,IAAAA,GAAApE,EAAAA,GAAAA,GAAA,+BAGlBqE,GAAQxE,GAAAA,EAAOC,IAAGwE,IAAAA,GAAAtE,EAAAA,GAAAA,GAAA,+BAUlB2E,IANe9E,GAAAA,EAAOC,IAAG0E,IAAAA,GAAAxE,EAAAA,GAAAA,GAAA,mFAMlBH,GAAAA,EAAOC,IAAG4E,IAAAA,GAAA1E,EAAAA,GAAAA,GAAA,ynBCrJjBgJ,GAAanJ,GAAAA,EAAOC,IAAGC,IAAAA,GAAAC,EAAAA,GAAAA,GAAA,svBA6BvB2D,GAAQ9D,GAAAA,EAAOC,IAAGK,IAAAA,GAAAH,EAAAA,GAAAA,GAAA,+BAGlB6D,GAAQhE,GAAAA,EAAOC,IAAGU,KAAAA,IAAAR,EAAAA,GAAAA,GAAA,+BAGlB+D,GAAQlE,GAAAA,EAAOC,IAAGiC,KAAAA,IAAA/B,EAAAA,GAAAA,GAAA,+BAGlBiE,GAAQpE,GAAAA,EAAOC,IAAGmC,KAAAA,IAAAjC,EAAAA,GAAAA,GAAA,+BAGlBmE,GAAQtE,GAAAA,EAAOC,IAAGwD,KAAAA,IAAAtD,EAAAA,GAAAA,GAAA,+BAGlBqE,GAAQxE,GAAAA,EAAOC,IAAG0D,KAAAA,IAAAxD,EAAAA,GAAAA,GAAA,+BAIlBe,GAAQlB,GAAAA,EAAOiC,EAAC4B,KAAAA,IAAA1D,EAAAA,GAAAA,GAAA,4PAehB8E,GAASjF,GAAAA,EAAOC,IAAG8D,KAAAA,IAAA5D,EAAAA,GAAAA,GAAA,4SAgBnB+E,GAAWlF,GAAAA,EAAOqD,OAAMY,KAAAA,IAAA9D,EAAAA,GAAAA,GAAA,uHAQxBgF,GAAanF,GAAAA,EAAOQ,IAC/B,CACEC,MAAO,OACPC,OAAQ,SAEV,SAAAd,GAAA,IAAAkC,EAAAlC,EAAGmC,UAAAA,OAAS,IAAAD,EAAG,UAASA,EAAA,MAAQ,CAC9BhB,KAAMiB,EACNC,OAAQD,EACT,IAGUqH,GAAYpJ,GAAAA,EAAOqJ,KAAIlF,KAAAA,IAAAhE,EAAAA,GAAAA,GAAA,iHAKpB,SAAAsB,GAAK,OAAIA,EAAM6H,KAAK,IAGvBC,GAAgBvJ,GAAAA,EAAOqJ,KAAIhF,KAAAA,IAAAlE,EAAAA,GAAAA,GAAA,+BChBxC,GAxEoB,SAAHP,GAOV,IANLwF,EAAExF,EAAFwF,GACAoE,EAAO5J,EAAP4J,QACAC,EAAgB7J,EAAhB6J,iBACAC,EAAc9J,EAAd8J,eACAC,EAAuB/J,EAAvB+J,wBACAnE,EAAa5F,EAAb4F,cAEMC,GAAWC,EAAAA,GAAAA,MAEXkE,EAAgBD,EAMtB,OACE9I,EAAAA,GAAAA,MAACsI,GAAU,CAAAtJ,SAAA,EACTgB,EAAAA,GAAAA,MAACiD,GAAK,CAAAjE,SAAA,EACJC,EAAAA,GAAAA,KAACoB,GAAK,CAAArB,SAAC,WACPC,EAAAA,GAAAA,KAACmF,GAAM,CAAApF,SAAE2J,EAAQpI,YAEnBP,EAAAA,GAAAA,MAACmD,GAAK,CAAAnE,SAAA,EACJC,EAAAA,GAAAA,KAACoB,GAAK,CAAArB,SAAC,cACPC,EAAAA,GAAAA,KAACmF,GAAM,CAAApF,SAAE2J,EAAQK,eAEnBhJ,EAAAA,GAAAA,MAACqD,GAAK,CAAArE,SAAA,EACJC,EAAAA,GAAAA,KAACoB,GAAK,CAAArB,SAAC,cACPC,EAAAA,GAAAA,KAACmF,GAAM,CAAApF,SAAE4J,QAEX5I,EAAAA,GAAAA,MAACuD,GAAK,CAAAvE,SAAA,EACJC,EAAAA,GAAAA,KAACoB,GAAK,CAAArB,SAAC,YACPC,EAAAA,GAAAA,KAACmF,GAAM,CAAApF,SAAE6J,QAEX7I,EAAAA,GAAAA,MAACyD,GAAK,CAAAzE,SAAA,EACJC,EAAAA,GAAAA,KAACoB,GAAK,CAAArB,SAAC,eACPC,EAAAA,GAAAA,KAACmF,GAAM,CAAApF,SACJ+J,GACC/I,EAAAA,GAAAA,MAAA6H,GAAAA,SAAA,CAAA7I,SAAA,EACEC,EAAAA,GAAAA,KAACsJ,GAAS,CAACE,MAAM,aACjBxJ,EAAAA,GAAAA,KAACyJ,GAAa,CAAA1J,SAAC,YAGjBgB,EAAAA,GAAAA,MAAA6H,GAAAA,SAAA,CAAA7I,SAAA,EACEC,EAAAA,GAAAA,KAACsJ,GAAS,CAACE,MAAM,aACjBxJ,EAAAA,GAAAA,KAACyJ,GAAa,CAAA1J,SAAC,gBAKvBgB,EAAAA,GAAAA,MAAC2D,GAAK,CAAA3E,SAAA,EACJC,EAAAA,GAAAA,KAACoB,GAAK,KACNpB,EAAAA,GAAAA,KAACoF,GAAQ,CAACa,QAAS,kBAxCL,SAACX,EAAII,GACvBC,GAASqE,EAAAA,GAAAA,IAAc,CAAEC,UAAW3E,EAAIc,KAAMV,IAChD,CAsC+BW,CAAYf,EAAII,EAAc,EAAC3F,UACtDC,EAAAA,GAAAA,KAACqF,GAAU,CAACpD,UAAU,UAASlC,UAC7BC,EAAAA,GAAAA,KAAA,OAAKiB,KAAI,GAAAC,OAAKC,GAAAA,EAAM,qBArCXmE,EA2CrB,ECYA,GAlEoB,SAAHxF,GAA6C,IAAvCoK,EAAgBpK,EAAhBoK,iBAAkBxE,EAAa5F,EAAb4F,cACjCa,GAAYC,EAAAA,GAAAA,IAAYC,GAAAA,IACxBC,GAAQF,EAAAA,GAAAA,IAAYG,GAAAA,IACpBC,GAAWC,EAAAA,GAAAA,MAOjB,OACE9F,EAAAA,GAAAA,MAACqI,GAAe,CAAArJ,SAAA,EACdgB,EAAAA,GAAAA,MAACe,GAAS,CAAA/B,SAAA,EACRC,EAAAA,GAAAA,KAACoB,GAAK,CAAArB,SAAC,cACPC,EAAAA,GAAAA,KAACuI,GAAAA,GAAI,CAACC,GAAE,YAAeC,MAAO,CAAEC,KAAM9B,GAAW7G,UAC/CgB,EAAAA,GAAAA,MAACuC,GAAM,CAAAvD,SAAA,EACLC,EAAAA,GAAAA,KAACwD,GAAG,CAAAzD,SAAC,iBACLC,EAAAA,GAAAA,KAACyD,GAAS,CAACxB,UAAU,UAASlC,UAC5BC,EAAAA,GAAAA,KAAA,OAAKiB,KAAI,GAAAC,OAAKC,GAAAA,EAAM,uBAK5BJ,EAAAA,GAAAA,MAAC6C,GAAS,CAAA7D,SAAA,CACPwG,IAAavG,EAAAA,GAAAA,KAAC2I,GAAAA,EAAM,IACpBuB,GAAoBA,EAAiBlH,OAAS,GAC7CjC,EAAAA,GAAAA,MAAA6H,GAAAA,SAAA,CAAA7I,SAAA,EACEgB,EAAAA,GAAAA,MAAC+C,GAAW,CAAA/D,SAAA,EACVC,EAAAA,GAAAA,KAACgE,GAAK,CAAAjE,SAAC,WACPC,EAAAA,GAAAA,KAACkE,GAAK,CAAAnE,SAAC,cACPC,EAAAA,GAAAA,KAACoE,GAAK,CAAArE,SAAC,cACPC,EAAAA,GAAAA,KAACsE,GAAK,CAAAvE,SAAC,YACPC,EAAAA,GAAAA,KAACwE,GAAK,CAAAzE,SAAC,eACPC,EAAAA,GAAAA,KAAC0E,GAAK,QAER1E,EAAAA,GAAAA,KAACgF,GAAI,CAAAjF,SACFmK,EAAiBrB,KAChB,SAAA9B,GAAA,IACEgC,EAAGhC,EAAHgC,IACAW,EAAO3C,EAAP2C,QACAC,EAAgB5C,EAAhB4C,iBACAC,EAAc7C,EAAd6C,eACAC,EAAuB9C,EAAvB8C,wBAAuB,OAEvB7J,EAAAA,GAAAA,KAACmK,GAAW,CAEV7E,GAAIyD,EACJW,QAASA,EACTC,iBAAkBA,EAClBC,eAAgBA,EAChBC,wBAAyBA,EACzBnE,cAAeA,GANVqD,EAOL,UAMV/I,EAAAA,GAAAA,KAAC0D,GAAO,CAAA3D,SAAC,wBAEV2G,GAASuC,GAAAA,OAAOC,QAAQxC,EAAMyC,cAIvC,ECxFaiB,GAAgBlK,GAAAA,EAAOC,IAAGC,KAAAA,IAAAC,EAAAA,GAAAA,GAAA,8VAkC1BoD,GAAYvD,GAAAA,EAAOQ,IAAGF,KAAAA,IAAAH,EAAAA,GAAAA,GAAA,2CAKtBiD,GAASpD,GAAAA,EAAOqD,OAAM1C,KAAAA,IAAAR,EAAAA,GAAAA,GAAA,+KAWtBgK,GAAYnK,GAAAA,EAAOC,IAAGiC,KAAAA,IAAA/B,EAAAA,GAAAA,GAAA,yC,4CCjDtBiK,IAAuBC,EAAAA,GAAAA,IAAGnK,KAAAA,IAAAC,EAAAA,GAAAA,GAAA,s/GA0J1BmK,GAAetK,GAAAA,EAAOqD,OAAM/C,KAAAA,IAAAH,EAAAA,GAAAA,GAAA,uPAc5BoK,GAAevK,GAAAA,EAAOQ,IAAGG,KAAAA,IAAAR,EAAAA,GAAAA,GAAA,iFCrHtC,I,QA1CyB,SAAHP,GAKf,IAJL4K,EAAY5K,EAAZ4K,aACAC,EAAe7K,EAAf6K,gBACAC,EAAI9K,EAAJ8K,KACAC,EAAY/K,EAAZ+K,aAEMC,EAAcC,KAAKC,MAAMJ,EAAKK,WAO9BC,GAAcC,EAAAA,GAAAA,aAAW,SAAApE,EAAqBqE,GAAbrE,EAALsE,MAA2B,IAApBpF,EAAOc,EAAPd,QACvC,OACElF,EAAAA,GAAAA,MAACyJ,GAAY,CAACvE,QAASA,EAASmF,IAAKA,EAAIrL,SAAA,EACtCuL,EAAAA,GAAAA,SAAOZ,EAAc,eACtB1K,EAAAA,GAAAA,KAACyK,GAAY,CAACxI,UAAU,UAASlC,UAC/BC,EAAAA,GAAAA,KAAA,OAAKiB,KAAI,GAAAC,OAAKC,GAAAA,EAAM,mBAI5B,IAEA,OACEJ,EAAAA,GAAAA,MAAA6H,GAAAA,SAAA,CAAA7I,SAAA,EACEC,EAAAA,GAAAA,KAACuL,GAAAA,GAAM,CAACC,OAAQlB,MAChBtK,EAAAA,GAAAA,KAACyL,KAAU,CACTC,SAAUhB,EACViB,SAAU,SAAAvF,IArBW,SAAAA,GACzBuE,EAAgBvE,GAChByE,EAAazE,EACf,CAmBQwF,CAAmBxF,EACrB,EACAyF,aAAa7L,EAAAA,GAAAA,KAACkL,EAAW,IACzBY,WAAY,aACZC,iBAAkB,EAClBC,QAASpB,EAAKK,UAAYH,EAAcC,KAAKkB,MAC7CC,QAASnB,KAAKkB,UAItB,GCwBA,GAjEkB,SAAHnM,GAAiD,IAA3C4K,EAAY5K,EAAZ4K,aAAcC,EAAe7K,EAAf6K,gBAAiBC,EAAI9K,EAAJ8K,KAClD3C,GAAwCC,EAAAA,GAAAA,WAAS,GAAMC,GAAAC,EAAAA,GAAAA,GAAAH,EAAA,GAAhDkE,EAAYhE,EAAA,GAAEiE,EAAejE,EAAA,GACpCkE,GAA0CnE,EAAAA,GAAAA,WAAS,GAAKoE,GAAAlE,EAAAA,GAAAA,GAAAiE,EAAA,GAAjDE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GAChCxB,EAAcC,KAAKC,MAAMJ,EAAKK,WA8B9BwB,EAAoB,CACxBzL,KAAMmL,EAAe,wBAA0B,WAG3CO,EAAqB,CACzB1L,KAAMmL,EAAe,wBAA0B,WAGjD,OACEpL,EAAAA,GAAAA,MAACqJ,GAAa,CAAArK,SAAA,EACZC,EAAAA,GAAAA,KAAC2M,GAAgB,CACfjC,aAAcA,EACdC,gBAAiBA,EACjBC,KAAMA,EACNC,aA1CmB,SAAAzE,GACvBuE,EAAgBvE,EAClB,KA0CIrF,EAAAA,GAAAA,MAACsJ,GAAS,CAAAtK,SAAA,EACRC,EAAAA,GAAAA,KAACsD,GAAM,CAACsJ,KAAK,SAAS3G,QAzCN,WACpB,IAAM4G,EAAU,IAAI9B,KAAKL,GACzBmC,EAAQC,QAAQpC,EAAaqC,UAAY,GACzCpC,EAAgBkC,IAEMvB,EAAAA,GAAAA,SAAOuB,EAAS,iBACXvB,EAAAA,GAAAA,SAAOR,EAAa,eAE7CsB,GAAgB,EAEpB,EA+BoDY,SAAUb,EAAapM,UACnEC,EAAAA,GAAAA,KAACyD,GAAS,CAACwJ,MAAOR,EAAkB1M,UAClCC,EAAAA,GAAAA,KAAA,OAAKiB,KAAI,GAAAC,OAAKC,GAAAA,EAAM,6BAGxBnB,EAAAA,GAAAA,KAACsD,GAAM,CAACsJ,KAAK,SAAS3G,QAlCN,WACpB,IAAM4G,EAAU,IAAI9B,KAAKL,GACzBmC,EAAQC,QAAQpC,EAAaqC,UAAY,GACzCpC,EAAgBkC,IAEMvB,EAAAA,GAAAA,SAAOuB,EAAS,iBACdvB,EAAAA,GAAAA,SAAO,IAAIP,KAAQ,eAEzCyB,GAAiB,EAErB,EAwBoDQ,SAAUT,EAAcxM,UACpEC,EAAAA,GAAAA,KAACyD,GAAS,CAACwJ,MAAOP,EAAmB3M,UACnCC,EAAAA,GAAAA,KAAA,OAAKiB,KAAI,GAAAC,OAAKC,GAAAA,EAAM,kCAMhC,E,WCxEa+L,GAAehN,GAAAA,EAAOC,IAAGC,KAAAA,IAAAC,EAAAA,GAAAA,GAAA,0QAezB8M,GAAcjN,GAAAA,EAAOC,IAAGK,KAAAA,IAAAH,EAAAA,GAAAA,GAAA,uMAYxB+M,GAAiBlN,GAAAA,EAAOC,IAAGU,KAAAA,IAAAR,EAAAA,GAAAA,GAAA,qUAoB3BgN,GAAOnN,GAAAA,EAAOC,IAAGiC,KAAAA,IAAA/B,EAAAA,GAAAA,GAAA,oSAmBjBiN,GAAQpN,GAAAA,EAAOC,IAAGmC,KAAAA,IAAAjC,EAAAA,GAAAA,GAAA,qN,iCCO/B,GAhDc,WACZ,IAAMsF,GAAWC,EAAAA,GAAAA,MACjBqC,GAAwCC,EAAAA,GAAAA,UAAS,IAAI6C,KAAKA,KAAKkB,QAAO9D,GAAAC,EAAAA,GAAAA,GAAAH,EAAA,GAA/DyC,EAAYvC,EAAA,GAAEwC,EAAexC,EAAA,GAC9B5F,GAAOiE,EAAAA,GAAAA,IAAY+G,GAAAA,IAEjBrD,EAAoC3H,EAApC2H,iBAAkB5D,EAAkB/D,EAAlB+D,cACpBsE,GAAOpE,EAAAA,GAAAA,IAAYgH,GAAAA,IACnBX,GAAUvB,EAAAA,GAAAA,SAAOZ,EAAc,cAC/B+C,GAAejH,EAAAA,GAAAA,IAAYkH,GAAAA,IAcjC,OAZAC,EAAAA,GAAAA,YAAU,WACRhI,GAASiI,EAAAA,GAAAA,IAAW,CAAExH,KAAMyG,IAC9B,GAAG,CAAClH,EAAUkH,KAEdc,EAAAA,GAAAA,YAAU,WACJF,GACF9H,GAASiI,EAAAA,GAAAA,IAAW,CAAExH,KAAMyG,KAE9BlH,GAASkI,EAAAA,GAAAA,OACTlI,GAASmI,EAAAA,GAAAA,MACX,GAAG,CAACnI,EAAU8H,EAAcZ,KAG1B7M,EAAAA,GAAAA,KAACkN,GAAY,CAAAnN,UACXC,EAAAA,GAAAA,KAAC+N,GAAAA,EAAS,CAAAhO,UACRgB,EAAAA,GAAAA,MAACoM,GAAW,CAAApN,SAAA,EACVC,EAAAA,GAAAA,KAACgO,GAAAA,EAAS,CAAC1M,MAAM,WACjBtB,EAAAA,GAAAA,KAACiO,GAAS,CACRvD,aAAcA,EACdC,gBAAiBA,EACjBC,KAAMA,KAER7J,EAAAA,GAAAA,MAACqM,GAAc,CAAArN,SAAA,EACbgB,EAAAA,GAAAA,MAACsM,GAAI,CAAAtN,SAAA,EACHC,EAAAA,GAAAA,KAACkO,GAAW,CAAChE,iBAAkBA,KAC/BlK,EAAAA,GAAAA,KAACmO,GAAY,CAAC7H,cAAeA,QAE/BvF,EAAAA,GAAAA,MAACuM,GAAK,CAAAvN,SAAA,EACJC,EAAAA,GAAAA,KAACoO,GAAY,CAAC7L,KAAMA,KACpBvC,EAAAA,GAAAA,KAACqO,GAAAA,EAAM,CAACvN,OAAO,+IAO7B,C,wMCzEO,IAAMwN,EAAmB,SAAA7F,GAAK,OAAIA,EAAM8F,IAAIC,UAAW,EAMjDC,EAAiB,SAAAhG,GAAK,OAAIA,EAAM8F,IAAIG,QAAS,EAE7CjI,EAAkB,SAAAgC,GAAK,OAAIA,EAAM8F,IAAIhI,SAAU,EAE/CI,EAAc,SAAA8B,GAAK,OAAIA,EAAM8F,IAAI7H,KAAM,EAEvCiI,EAAkB,SAAAlG,GAAK,OAAIA,EAAM8F,IAAIK,SAAU,EAE/CrB,EAAc,SAAA9E,GAAK,OAAIA,EAAM8F,IAAIM,KAAM,EAEvCnB,EAAqB,SAAAjF,GAAK,OAAIA,EAAM8F,IAAIO,YAAa,C","sources":["components/Container/Container.jsx","components/Container/Container.styled.js","components/Notice/Notice.styled.js","components/Notice/Notice.jsx","components/TitlePage/TitlePage.styled.js","components/TitlePage/TitlePage.jsx","components/DayDashboard/DayDashboard.styled.js","components/DayDashboard/DayDashboard.jsx","components/DayExercises/DayExercises.styled.js","components/DayExercises/ExerciseItem/ExerciseItem.styled.js","components/DayExercises/ExerciseItem/ExerciseItem.jsx","components/DayExercises/DayExercises.jsx","components/DayProducts/DayProducts.styled.js","components/DayProducts/ProductItem/ProductItem.styled.js","components/DayProducts/ProductItem/ProductItem.jsx","components/DayProducts/DayProducts.jsx","components/DaySwitch/DaySwitch.styled.js","components/DaySwitch/Datepicker/Datepicker.styled.jsx","components/DaySwitch/Datepicker/Datepicker.jsx","components/DaySwitch/DaySwitch.jsx","pages/Diary/Diary.styled.js","pages/Diary/Diary.jsx","redux/api/apiSelectors.js"],"sourcesContent":["import { ContainerWrapper } from './Container.styled';\n\nconst Container = ({ children }) => {\n  return <ContainerWrapper>{children}</ContainerWrapper>;\n};\n\nexport default Container;\n","import styled from '@emotion/styled';\n\nexport const ContainerWrapper = styled.div`\n  width: 100%;\n  margin-inline: auto;\n  padding-inline: 20px;\n  /* padding-top: 61px; */\n\n  @media screen and (min-width: 375px) {\n    width: 375px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 768px;\n    padding-inline: 32px;\n    /* padding-top: 84px; */\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 1440px;\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const NoticeArea = styled.div`\n  display: flex;\n  gap: 8px;\n  width: 100%;\n`;\n\nexport const NoticeIcon = styled.div`\n  width: 24px;\n  height: 24px;\n  border-radius: 12px;\n  background-color: #efa082;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const WarningIcon = styled.svg({\n  width: '16px',\n  height: '16px',\n});\n\nexport const NoticeMessage = styled.div`\n  width: 100%;\n  height: auto;\n  color: rgba(239, 237, 232, 0.3);\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 1.5;\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\n","import PropTypes from 'prop-types';\n\nimport { NoticeMessage, NoticeArea, NoticeIcon } from './Notice.styled';\n\nimport sprite from 'assets/images/sprite.svg';\n\nconst Notice = ({ notice }) => {\n  return (\n    <NoticeArea>\n      <NoticeIcon>\n        <svg width=\"18\" height=\"18\" fill=\"#efede8\">\n          <use href={`${sprite}#warning`} />\n        </svg>\n      </NoticeIcon>\n      <NoticeMessage>{notice}</NoticeMessage>\n    </NoticeArea>\n  );\n};\n\nexport default Notice;\n\nNotice.propTypes = {\n  notice: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Title = styled.h1`\n  margin-top: 40px;\n  font-family: Roboto;\n  color: #efede8;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 1.375;\n\n  @media screen and (min-width: 375px) {\n    margin-top: 40px;\n    font-size: 24px;\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-top: 72px;\n    font-size: 32px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Title } from './TitlePage.styled';\n\nconst TitlePage = ({ title }) => {\n  return <Title>{title}</Title>;\n};\n\nexport default TitlePage;\n\nTitlePage.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const DayDashboardArea = styled.ul`\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n\n  @media screen and (min-width: 375px) {\n    height: 328px;\n    margin-bottom: 20px;\n    row-gap: 20px;\n    column-gap: 13px;\n  }\n\n  @media screen and (min-width: 768px) {\n    height: 248px;\n    margin-bottom: 32px;\n    row-gap: 16px;\n    column-gap: 16px;\n    flex-direction: column;\n  }\n\n  @media screen and (min-width: 1440px) {\n    height: 380px;\n    margin-bottom: 48px;\n    flex-direction: row;\n  }\n`;\n\nconst setBgColor = props => {\n  switch (props.accent) {\n    case 'true':\n      return '#e6533c';\n    case 'false':\n      return 'rgba(239, 237, 232, 0.05)';\n    default:\n      return 'rgba(239, 237, 232, 0.05)';\n  }\n};\n\nconst setRedBorderColor = props => {\n  switch (props.borderColor) {\n    case 'red':\n      return '#E9101D';\n    case 'green':\n      return '#3CBF61';\n    case 'default':\n      return 'rgba(239, 237, 232, 0.2)';\n    default:\n      return 'rgba(239, 237, 232, 0.2)';\n  }\n};\n\nexport const DashboardItem = styled.li`\n  border: 1px solid;\n  border-color: ${setRedBorderColor};\n  border-radius: 12px;\n  background-color: ${setBgColor};\n  padding: 18px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  @media screen and (min-width: 375px) {\n    width: 161px;\n    height: 96px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 187px;\n    height: 116px;\n  }\n`;\n\nexport const TitleArea = styled.div`\n  display: flex;\n  gap: 8px;\n  align-items: center;\n`;\n\nexport const Icon = styled.svg(\n  {\n    width: '20px',\n    height: '20px',\n  },\n  ({ iconColor = '#EF8964' }) => ({\n    fill: iconColor,\n    stroke: iconColor,\n  })\n);\n\nconst setTitleColor = props => {\n  switch (props.accent) {\n    case 'true':\n      return 'rgba(239, 237, 232, 0.8)';\n    case 'false':\n      return 'rgba(239, 237, 232, 0.4)';\n    default:\n      return 'rgba(239, 237, 232, 0.4)';\n  }\n};\n\nexport const Title = styled.p`\n  font-size: 12px;\n  font-weight: 400;\n  color: ${setTitleColor};\n`;\n\nexport const Value = styled.p`\n  font-weight: 700;\n  color: #efede8;\n\n  @media screen and (min-width: 375px) {\n    font-size: 18px;\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 24px;\n  }\n`;\n","import {\n  DayDashboardArea,\n  DashboardItem,\n  TitleArea,\n  Title,\n  Value,\n  Icon,\n} from './DayDashboard.styled';\nimport sprite from 'assets/images/sprite.svg';\n\nconst DayDashboard = ({ data }) => {\n  const {\n    dailyPhysicalActivity,\n    userBMR,\n    caloriesBurnedSum,\n    caloriesConsumedSum,\n    caloriesRemaining,\n    sportsRemaining,\n  } = data;\n\n  return (\n    <DayDashboardArea>\n      <DashboardItem accent=\"true\">\n        <TitleArea>\n          <Icon iconColor=\"#EF8964\">\n            <use href={`${sprite}#food`} />\n          </Icon>\n          <Title accent=\"true\">Daily calorie intake</Title>\n        </TitleArea>\n        {data && Object.keys(data).length !== 0 && <Value>{userBMR}</Value>}\n      </DashboardItem>\n      <DashboardItem accent=\"true\">\n        <TitleArea>\n          <Icon iconColor=\"#EF8964\">\n            <use href={`${sprite}#dumbbell`} />\n          </Icon>\n          <Title accent=\"true\">Daily physical activity</Title>\n        </TitleArea>\n        {data && Object.keys(data).length !== 0 && (\n          <Value>{dailyPhysicalActivity} min</Value>\n        )}\n      </DashboardItem>\n      <DashboardItem accent=\"false\">\n        <TitleArea>\n          <Icon iconColor=\"#EF8964\">\n            <use href={`${sprite}#apple`} />\n          </Icon>\n          <Title accent=\"false\">Calories consumed</Title>\n        </TitleArea>\n        {data && Object.keys(data).length !== 0 && (\n          <Value>{caloriesConsumedSum}</Value>\n        )}\n      </DashboardItem>\n      <DashboardItem accent=\"false\">\n        <TitleArea>\n          <Icon iconColor=\"#EF8964\">\n            <use href={`${sprite}#fire`} />\n          </Icon>\n          <Title accent=\"false\">Calories burned</Title>\n        </TitleArea>\n        {data && Object.keys(data).length !== 0 && (\n          <Value>{caloriesBurnedSum}</Value>\n        )}\n      </DashboardItem>\n      <DashboardItem\n        accent=\"false\"\n        borderColor={caloriesRemaining >= 0 ? 'default' : 'red'}\n      >\n        <TitleArea>\n          <Icon iconColor=\"#EF8964\">\n            <use href={`${sprite}#bubble`} />\n          </Icon>\n          <Title accent=\"false\">Calories remaining</Title>\n        </TitleArea>\n        {data && Object.keys(data).length !== 0 && (\n          <Value>{caloriesRemaining}</Value>\n        )}\n      </DashboardItem>\n      <DashboardItem\n        accent=\"false\"\n        borderColor={sportsRemaining >= 0 ? 'default' : 'green'}\n      >\n        <TitleArea>\n          <Icon iconColor=\"#EF8964\">\n            <use href={`${sprite}#figure`} />\n          </Icon>\n          <Title accent=\"false\">Sports remaining</Title>\n        </TitleArea>\n        {data && Object.keys(data).length !== 0 && (\n          <Value>\n            {sportsRemaining >= 0 ? <span></span> : <span>+</span>}\n            {Math.abs(sportsRemaining)} min\n          </Value>\n        )}\n      </DashboardItem>\n    </DayDashboardArea>\n  );\n};\n\nexport default DayDashboard;\n","import styled from '@emotion/styled';\n\nconst setHeight = props => {\n  switch (props.dimention) {\n    case 'true':\n      return '1064px';\n    case 'false':\n      return '335px';\n    default:\n      return '335px';\n  }\n};\n\nexport const DayExercisesArea = styled.div`\n  position: relative;\n  width: 100%;\n  border: 1px solid;\n  border-color: rgba(239, 237, 232, 0.2);\n  border-radius: 12px;\n  background-color: rgba(239, 237, 232, 0.05);\n  padding: 16px;\n\n  @media screen and (min-width: 375px) {\n    max-height: ${setHeight};\n  }\n\n  @media screen and (min-width: 768px) {\n    height: 234px;\n  }\n`;\n\nexport const TitleArea = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  @media screen and (min-width: 375px) {\n    margin-bottom: 22px;\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 16px;\n  }\n`;\n\nexport const Title = styled.h3`\n  font-size: 14px;\n  font-weight: 400;\n  color: rgba(239, 237, 232, 0.5);\n`;\n\nexport const Button = styled.button`\n  background-color: inherit;\n  border: none;\n  display: flex;\n  gap: 8px;\n  align-items: center;\n`;\n\nexport const Add = styled.p`\n  font-weight: 500;\n  color: #e6533c;\n\n  @media screen and (min-width: 375px) {\n    font-size: 14px;\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\n\nexport const ArrowIcon = styled.svg(\n  {\n    width: '16px',\n    height: '16px',\n  },\n  ({ iconColor = '#e6533c' }) => ({\n    fill: iconColor,\n    stroke: iconColor,\n  })\n);\n\nexport const Message = styled.p`\n  font-weight: 400;\n  color: rgba(239, 237, 232, 0.3);\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n\n  @media screen and (min-width: 375px) {\n    font-size: 14px;\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\n\nexport const TableArea = styled.div`\n  @media screen and (min-width: 1440px) {\n    padding-left: 16px;\n  }\n`;\n\nexport const TableHeader = styled.div`\n  @media screen and (min-width: 375px) {\n    display: none;\n  }\n\n  @media screen and (min-width: 768px) {\n    display: grid;\n    grid-gap: 8px;\n    grid-template-columns: 90px 132px 128px 84px 78px 72px 20px;\n    grid-template-rows: auto;\n    grid-template-areas: 'grid1 grid2 grid3 grid4 grid5 grid6 grid7';\n    color: #ef8964;\n    font-size: 12px;\n    font-weight: 400;\n    margin-bottom: 8px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    grid-template-columns: 115px 157px 131px 106px 91px 82px 20px;\n  }\n`;\n\nexport const Grid1 = styled.div`\n  grid-area: grid1;\n`;\nexport const Grid2 = styled.div`\n  grid-area: grid2;\n`;\nexport const Grid3 = styled.div`\n  grid-area: grid3;\n`;\nexport const Grid4 = styled.div`\n  grid-area: grid4;\n`;\nexport const Grid5 = styled.div`\n  grid-area: grid5;\n`;\nexport const Grid6 = styled.div`\n  grid-area: grid6;\n`;\nexport const Grid7 = styled.div`\n  grid-area: grid7;\n`;\n\nexport const ShorterTitle = styled.div`\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nexport const List = styled.div`\n  @media screen and (min-width: 375px) {\n    display: flex;\n    flex-direction: column;\n    gap: 38px;\n    height: 900px;\n    overflow-y: scroll;\n    overflow-x: hidden;\n\n    &::-webkit-scrollbar-track {\n      background: rgba(239, 237, 232, 0.1);\n      border-radius: 12px;\n      height: 15px;\n    }\n\n    &::-webkit-scrollbar-thumb {\n      background-color: #ef8964;\n      border-radius: 12px;\n      height: 15px;\n    }\n\n    &::-webkit-scrollbar {\n      width: 8px;\n      height: 15px;\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    gap: 8px;\n    height: 136px;\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const ExerciseDiv = styled.div`\n  @media screen and (min-width: 375px) {\n    align-items: center;\n    font-size: 13px;\n    font-weight: 400;\n    color: #efede8;\n    display: grid;\n    grid-gap: 14px;\n    grid-template-columns: 81px 80px 76px 20px;\n    grid-template-rows: auto;\n    grid-template-areas:\n      'grid1 grid1 grid1 grid1'\n      'grid2 grid2 grid2 grid2'\n      'grid3 grid3 grid3 grid3'\n      'grid4 grid5 grid6 grid7';\n  }\n\n  @media screen and (min-width: 768px) {\n    grid-gap: 8px;\n    grid-template-columns: 90px 132px 128px 84px 78px 72px 20px;\n    grid-template-rows: 40px;\n    grid-template-areas: 'grid1 grid2 grid3 grid4 grid5 grid6 grid7';\n  }\n\n  @media screen and (min-width: 1440px) {\n    grid-template-columns: 115px 157px 131px 106px 91px 82px 20px;\n  }\n`;\n\nexport const Grid1 = styled.div`\n  grid-area: grid1;\n`;\nexport const Grid2 = styled.div`\n  grid-area: grid2;\n`;\nexport const Grid3 = styled.div`\n  grid-area: grid3;\n`;\nexport const Grid4 = styled.div`\n  grid-area: grid4;\n`;\nexport const Grid5 = styled.div`\n  grid-area: grid5;\n`;\nexport const Grid6 = styled.div`\n  grid-area: grid6;\n`;\nexport const Grid7 = styled.div`\n  grid-area: grid7;\n`;\n\nexport const Title = styled.p`\n  color: #ef8964;\n  height: 12px;\n  font-size: 12px;\n  font-weight: 400;\n  margin-bottom: 8px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  @media screen and (min-width: 768px) {\n    display: none;\n  }\n`;\n\nexport const Column = styled.div`\n  border: 1px solid rgba(239, 237, 232, 0.3);\n  border-radius: 12px;\n  display: flex;\n  align-items: center;\n  padding-inline: 14px;\n  @media screen and (min-width: 375px) {\n    width: 100%;\n    height: 38px;\n  }\n\n  @media screen and (min-width: 768px) {\n    height: 40px;\n  }\n`;\n\nexport const ButtonEl = styled.button`\n  width: auto;\n  background-color: inherit;\n  border-radius: 12px;\n  border: none;\n  padding-inline: 0;\n`;\n\nexport const DeleteIcon = styled.svg(\n  {\n    width: '20px',\n    height: '20px',\n  },\n  ({ iconColor = '#EF8964' }) => ({\n    fill: iconColor,\n    stroke: iconColor,\n  })\n);\n","import {\n  ExerciseDiv,\n  Column,\n  ButtonEl,\n  DeleteIcon,\n  Grid1,\n  Grid2,\n  Grid3,\n  Grid4,\n  Grid5,\n  Grid6,\n  Grid7,\n  Title,\n} from './ExerciseItem.styled';\nimport sprite from 'assets/images/sprite.svg';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteExercise } from 'redux/api/apiOperations';\n\nconst ExerciseItem = ({\n  id,\n  exercise,\n  burnedCalories,\n  time,\n  dateForDelete,\n}) => {\n  const dispatch = useDispatch();\n\n  const handleClick = (id, dateForDelete) => {\n    dispatch(deleteExercise({ exerciseId: id, date: dateForDelete }));\n  };\n\n  return (\n    <ExerciseDiv key={id}>\n      <Grid1>\n        <Title>Body Part</Title>\n        <Column>{exercise.bodyPart}</Column>\n      </Grid1>\n      <Grid2>\n        <Title>Equipment</Title>\n        <Column>{exercise.equipment}</Column>\n      </Grid2>\n      <Grid3>\n        <Title>Name</Title>\n        <Column>{exercise.name}</Column>\n      </Grid3>\n      <Grid4>\n        <Title>Target</Title>\n        <Column>{exercise.target}</Column>\n      </Grid4>\n      <Grid5>\n        <Title>Burned Calorie</Title>\n        <Column>{burnedCalories}</Column>\n      </Grid5>\n      <Grid6>\n        <Title>Time</Title>\n        <Column>{time}</Column>\n      </Grid6>\n      <Grid7>\n        <Title></Title>\n        <ButtonEl onClick={() => handleClick(id, dateForDelete)}>\n          <DeleteIcon iconColor=\"#EF8964\">\n            <use href={`${sprite}#trash`} />\n          </DeleteIcon>\n        </ButtonEl>\n      </Grid7>\n    </ExerciseDiv>\n  );\n};\n\nExerciseItem.propTypes = {\n  id: PropTypes.string,\n  bodyPart: PropTypes.string,\n  equipment: PropTypes.string,\n  name: PropTypes.string,\n  target: PropTypes.string,\n  burnedCalories: PropTypes.number,\n  time: PropTypes.number,\n  date: PropTypes.string.isRequired,\n};\n\nexport default ExerciseItem;\n","import {\n  DayExercisesArea,\n  TitleArea,\n  Title,\n  Button,\n  Add,\n  ArrowIcon,\n  Message,\n  TableArea,\n  TableHeader,\n  List,\n  Grid1,\n  Grid2,\n  Grid3,\n  Grid4,\n  Grid5,\n  Grid6,\n  Grid7,\n  ShorterTitle,\n} from './DayExercises.styled';\nimport sprite from 'assets/images/sprite.svg';\nimport { useSelector } from 'react-redux';\nimport { useState } from 'react';\nimport { selectError, selectIsLoading } from 'redux/api/apiSelectors';\nimport Loader from 'components/Loader';\nimport { Notify } from 'notiflix';\nimport ExerciseItem from './ExerciseItem';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst DayExercises = ({ doneExercises, dateForDelete }) => {\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const location = useLocation();\n\n  const findLength = async array => {\n    try {\n      const length = await array.length;\n      return length;\n    } catch (err) {\n      return err;\n    }\n  };\n  const arrayLength = findLength(doneExercises);\n\n  const [heightExerciseArea, setHeightExerciseArea] = useState(true);\n  if (arrayLength === 0) {\n    setHeightExerciseArea(false);\n  }\n\n  return (\n    <DayExercisesArea dimention={heightExerciseArea}>\n      <TitleArea>\n        <Title>Execrcises</Title>\n        <Link to={`/exercises`} state={{ from: location }}>\n          <Button>\n            <Add>Add exercise</Add>\n            <ArrowIcon iconColor=\"#E6533C\">\n              <use href={`${sprite}#arrow`} />\n            </ArrowIcon>\n          </Button>\n        </Link>\n      </TitleArea>\n\n      <TableArea>\n        {isLoading && <Loader />}\n        {doneExercises && doneExercises.length > 0 ? (\n          <>\n            <TableHeader>\n              <Grid1>Body Part</Grid1>\n              <Grid2>Equipment</Grid2>\n              <Grid3>Name</Grid3>\n              <Grid4>Target</Grid4>\n              <Grid5>\n                <ShorterTitle>Burned Calories</ShorterTitle>\n              </Grid5>\n              <Grid6>Time</Grid6>\n              <Grid7 />\n            </TableHeader>\n            <List>\n              {doneExercises.map(({ _id, exercise, burnedCalories, time }) => (\n                <ExerciseItem\n                  key={_id}\n                  id={_id}\n                  exercise={exercise}\n                  burnedCalories={burnedCalories}\n                  time={time}\n                  dateForDelete={dateForDelete}\n                />\n              ))}\n            </List>\n          </>\n        ) : (\n          <Message>Not found exercises</Message>\n        )}\n        {error && Notify.failure(error.message)}\n      </TableArea>\n    </DayExercisesArea>\n  );\n};\n\nexport default DayExercises;\n","import styled from '@emotion/styled';\n\nconst setHeight = props => {\n  switch (props.dimention) {\n    case 'true':\n      return '824px';\n    case 'false':\n      return '335px';\n    default:\n      return '335px';\n  }\n};\n\nexport const DayProductsArea = styled.div`\n  position: relative;\n  width: 100%;\n  border: 1px solid;\n  border-color: rgba(239, 237, 232, 0.2);\n  border-radius: 12px;\n  background-color: rgba(239, 237, 232, 0.05);\n  padding: 16px;\n\n  @media screen and (min-width: 375px) {\n    /* height: ${setHeight}; */\n  }\n\n  @media screen and (min-width: 768px) {\n    height: 234px;\n  }\n`;\n\nexport const TitleArea = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  @media screen and (min-width: 375px) {\n    margin-bottom: 22px;\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 16px;\n  }\n`;\n\nexport const Title = styled.h3`\n  font-size: 14px;\n  font-weight: 400;\n  color: rgba(239, 237, 232, 0.5);\n`;\n\nexport const Button = styled.button`\n  background-color: inherit;\n  border: none;\n  display: flex;\n  gap: 8px;\n  align-items: center;\n`;\n\nexport const Add = styled.p`\n  font-weight: 500;\n  color: #e6533c;\n\n  @media screen and (min-width: 375px) {\n    font-size: 14px;\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\n\nexport const ArrowIcon = styled.svg(\n  {\n    width: '16px',\n    height: '16px',\n  },\n  ({ iconColor = '#e6533c' }) => ({\n    fill: iconColor,\n    stroke: iconColor,\n  })\n);\n\nexport const Message = styled.p`\n  font-weight: 400;\n  color: rgba(239, 237, 232, 0.3);\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n\n  @media screen and (min-width: 375px) {\n    font-size: 14px;\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\nexport const TableArea = styled.div`\n  @media screen and (min-width: 1440px) {\n    padding-left: 16px;\n  }\n`;\n\nexport const TableHeader = styled.div`\n  @media screen and (min-width: 375px) {\n    display: none;\n  }\n\n  @media screen and (min-width: 768px) {\n    display: grid;\n    grid-gap: 8px;\n    grid-template-columns: 204px 128px 90px 90px 80px 20px;\n    grid-template-rows: auto;\n    grid-template-areas: 'grid1 grid2 grid3 grid4 grid5 grid6';\n    color: #ef8964;\n    font-size: 12px;\n    font-weight: 400;\n    margin-bottom: 8px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    grid-template-columns: 212px 166px 105px 105px 110px 20px;\n  }\n`;\n\nexport const Grid1 = styled.div`\n  grid-area: grid1;\n`;\nexport const Grid2 = styled.div`\n  grid-area: grid2;\n`;\nexport const Grid3 = styled.div`\n  grid-area: grid3;\n`;\nexport const Grid4 = styled.div`\n  grid-area: grid4;\n`;\nexport const Grid5 = styled.div`\n  grid-area: grid5;\n`;\nexport const Grid6 = styled.div`\n  grid-area: grid6;\n`;\n\nexport const ShorterTitle = styled.div`\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nexport const List = styled.div`\n  @media screen and (min-width: 375px) {\n    display: flex;\n    flex-direction: column;\n    gap: 38px;\n    /* height: 786px; */\n    /* min-height: 335px; */\n\n  }\n\n  @media screen and (min-width: 768px) {\n    gap: 8px;\n    height: 136px;\n    overflow-y: scroll;\n    overflow-x: hidden;\n\n    &::-webkit-scrollbar-track {\n      background-color: transparent;\n    }\n\n    &::-webkit-scrollbar-thumb {\n      border-radius: 12px;\n      background: rgba(239, 237, 232, 0.10);\n      width: 6px;\n      height: 90px;   \n    }\n\n    &::-webkit-scrollbar {\n      width: 8px;\n      height: 15px;\n    }\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const ProductDiv = styled.div`\n  @media screen and (min-width: 375px) {\n    align-items: center;\n    font-size: 14px;\n    font-weight: 400;\n    color: #efede8;\n    display: grid;\n    grid-gap: 14px;\n    grid-template-columns: 81px 80px 76px 20px;\n    grid-template-rows: auto;\n    grid-template-areas:\n      'grid1 grid1 grid1 grid1'\n      'grid2 grid2 grid2 grid2'\n      'grid3 grid4 grid5 grid6';\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    grid-gap: 8px;\n    grid-template-columns: 204px 128px 90px 90px 80px 20px;\n    grid-template-rows: 40px;\n    grid-template-areas: 'grid1 grid2 grid3 grid4 grid5 grid6';\n  }\n\n  @media screen and (min-width: 1440px) {\n    grid-template-columns: 212px 166px 105px 105px 110px 20px;\n  }\n`;\n\nexport const Grid1 = styled.div`\n  grid-area: grid1;\n`;\nexport const Grid2 = styled.div`\n  grid-area: grid2;\n`;\nexport const Grid3 = styled.div`\n  grid-area: grid3;\n`;\nexport const Grid4 = styled.div`\n  grid-area: grid4;\n`;\nexport const Grid5 = styled.div`\n  grid-area: grid5;\n`;\nexport const Grid6 = styled.div`\n  grid-area: grid6;\n`;\n\nexport const Title = styled.p`\n  color: #ef8964;\n  height: 12px;\n  font-size: 12px;\n  font-weight: 400;\n  margin-bottom: 8px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  @media screen and (min-width: 768px) {\n    display: none;\n  }\n`;\n\nexport const Column = styled.div`\n  border: 1px solid rgba(239, 237, 232, 0.3);\n  border-radius: 12px;\n  display: flex;\n  align-items: center;\n  padding-inline: 14px;\n  @media screen and (min-width: 375px) {\n    width: 100%;\n    height: 38px;\n  }\n\n  @media screen and (min-width: 768px) {\n    height: 40px;\n  }\n`;\n\nexport const ButtonEl = styled.button`\n  width: auto;\n  background-color: inherit;\n  border-radius: 12px;\n  border: none;\n  padding-inline: 0;\n`;\n\nexport const DeleteIcon = styled.svg(\n  {\n    width: '20px',\n    height: '20px',\n  },\n  ({ iconColor = '#EF8964' }) => ({\n    fill: iconColor,\n    stroke: iconColor,\n  })\n);\n\nexport const Indicator = styled.span`\n  display: inline-block;\n  width: 14px;\n  height: 14px;\n  border-radius: 10px;\n  background: ${props => props.color};\n`;\n\nexport const RecommendText = styled.span`\n  margin-left: 8px;\n`;\n","import {\n  ProductDiv,\n  Column,\n  ButtonEl,\n  DeleteIcon,\n  Grid1,\n  Grid2,\n  Grid3,\n  Grid4,\n  Grid5,\n  Grid6,\n  Title,\n  Indicator,\n  RecommendText\n} from './ProductItem.styled';\nimport sprite from 'assets/images/sprite.svg';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteProduct } from 'redux/api/apiOperations';\n\nconst ProductItem = ({\n  id,\n  product,\n  caloriesConsumed,\n  weightConsumed,\n  recommendedByGroupBlood,\n  dateForDelete,\n}) => {\n  const dispatch = useDispatch();\n  \n  const isRecommended = recommendedByGroupBlood; \n\n  const handleClick = (id, dateForDelete) => {\n    dispatch(deleteProduct({ productId: id, date: dateForDelete }));\n  };\n\n  return (\n    <ProductDiv key={id}>\n      <Grid1>\n        <Title>Title</Title>\n        <Column>{product.title}</Column>\n      </Grid1>\n      <Grid2>\n        <Title>Category</Title>\n        <Column>{product.category}</Column>\n      </Grid2>\n      <Grid3>\n        <Title>Calories</Title>\n        <Column>{caloriesConsumed}</Column>\n      </Grid3>\n      <Grid4>\n        <Title>Weight</Title>\n        <Column>{weightConsumed}</Column>\n      </Grid4>\n      <Grid5>\n        <Title>Recommend</Title>\n        <Column>\n          {isRecommended ? (\n            <>\n              <Indicator color=\"#419B09\" />\n              <RecommendText>Yes</RecommendText>\n            </>\n          ) : (\n            <>\n              <Indicator color=\"#E9101D\" />\n              <RecommendText>No</RecommendText>\n            </>\n          )}\n        </Column>\n      </Grid5>\n      <Grid6>\n        <Title></Title>\n        <ButtonEl onClick={() => handleClick(id, dateForDelete)}>\n          <DeleteIcon iconColor=\"#EF8964\">\n            <use href={`${sprite}#trash`} />\n          </DeleteIcon>\n        </ButtonEl>\n      </Grid6>\n    </ProductDiv>\n  );\n};\n\nProductItem.propTypes = {\n  id: PropTypes.string,\n  title: PropTypes.string,\n  category: PropTypes.string,\n  caloriesConsumed: PropTypes.number,\n  weightConsumed: PropTypes.number,\n  recommendedByGroupBlood: PropTypes.bool,\n  date: PropTypes.string,\n};\n\nexport default ProductItem;\n","import {\n  DayProductsArea,\n  TitleArea,\n  Title,\n  Button,\n  Add,\n  ArrowIcon,\n  TableArea,\n  Message,\n  TableHeader,\n  List,\n  Grid1,\n  Grid2,\n  Grid3,\n  Grid4,\n  Grid5,\n  Grid6,\n} from './DayProducts.styled';\nimport sprite from 'assets/images/sprite.svg';\nimport { useSelector } from 'react-redux';\nimport { selectError, selectIsLoading } from 'redux/api/apiSelectors';\nimport Loader from 'components/Loader';\nimport { Notify } from 'notiflix';\nimport ProductItem from './ProductItem';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst DayProducts = ({ consumedProducts, dateForDelete }) => {\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const location = useLocation();\n\n  // const [heightProductArea, setHeightProductArea] = useState(true);\n  // if (arrayLength === 0) {\n  //   setHeightProductArea(false);\n  // }\n\n  return (\n    <DayProductsArea>\n      <TitleArea>\n        <Title>Products</Title>\n        <Link to={`/products`} state={{ from: location }}>\n          <Button>\n            <Add>Add product</Add>\n            <ArrowIcon iconColor=\"#E6533C\">\n              <use href={`${sprite}#arrow`} />\n            </ArrowIcon>\n          </Button>\n        </Link>\n      </TitleArea>\n      <TableArea>\n        {isLoading && <Loader />}\n        {consumedProducts && consumedProducts.length > 0 ? (\n          <>\n            <TableHeader>\n              <Grid1>Title</Grid1>\n              <Grid2>Category</Grid2>\n              <Grid3>Calories</Grid3>\n              <Grid4>Weight</Grid4>\n              <Grid5>Recommend</Grid5>\n              <Grid6></Grid6>\n            </TableHeader>\n            <List>\n              {consumedProducts.map(\n                ({\n                  _id,\n                  product,\n                  caloriesConsumed,\n                  weightConsumed,\n                  recommendedByGroupBlood,\n                }) => (\n                  <ProductItem\n                    key={_id}\n                    id={_id}\n                    product={product}\n                    caloriesConsumed={caloriesConsumed}\n                    weightConsumed={weightConsumed}\n                    recommendedByGroupBlood={recommendedByGroupBlood}\n                    dateForDelete={dateForDelete}\n                  />\n                )\n              )}\n            </List>\n          </>\n        ) : (\n          <Message>Not found exercises</Message>\n        )}\n        {error && Notify.failure(error.message)}\n      </TableArea>\n    </DayProductsArea>\n  );\n};\n\nexport default DayProducts;\n","import styled from '@emotion/styled';\n\nexport const DaySwitchArea = styled.div`\n  position: absolute;\n  display: flex;\n\n  justify-content: center;\n  align-items: center;\n\n  @media screen and (min-width: 375px) {\n    right: 0;\n    top: 42px;\n    gap: 20px;\n  }\n\n  @media screen and (min-width: 768px) {\n    top: 52px;\n    gap: 40px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    right: 64px;\n  }\n`;\n\n// const setColor = props => {\n//   switch (props.disabled) {\n//     case 'true':\n//       return 'rgba(239,237,232,0.2)';\n//     case 'false':\n//       return '#efede8';\n//     default:\n//       return '#efede8';\n//   }\n// };\n\nexport const ArrowIcon = styled.svg`\n  width: 16px;\n  height: 16px;\n`;\n\nexport const Button = styled.button`\n  border: none;\n  background-color: inherit;\n  width: 20px;\n  height: 20px;\n  padding: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const ArrowArea = styled.div`\n  display: flex;\n  gap: 6px;\n`;\n","import { css } from '@emotion/react';\nimport styled from '@emotion/styled';\n\nexport const calendarGlobalStyles = css`\n  .react-datepicker__wrapper {\n    position: relative;\n  }\n  .react-datepicker {\n    position: absolute;\n    left: 0;\n    top: 50%;\n    transform: translate(-1%, 0%);\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: auto;\n    height: auto;\n    padding: 14px 14px;\n    background-color: #ef8964;\n    font-family: Inter;\n    border-radius: 16px;\n    border: none;\n  }\n  .react-datepicker__month-container {\n    float: inherit;\n    box-sizing: border-box;\n  }\n  .react-datepicker__header {\n    position: relative;\n    background-color: #ef8964;\n  }\n  .react-datepicker__day-names {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 8px 8px;\n    border-top: 1px solid rgba(239, 237, 232, 0.2);\n  }\n  .react-datepicker__header:not(.react-datepicker__header--has-time-select) {\n    border-bottom: 0px;\n    padding: 0;\n  }\n  .react-datepicker__day\n    react-datepicker__day--018.react-datepicker__day--selected\n    react-datepicker__day--today {\n    outline: none;\n    border: none;\n  }\n  .react-datepicker__current-month {\n    font-family: Inter;\n    font-size: 18px;\n    font-style: normal;\n    font-weight: 600;\n    text-align: center;\n    color: #efede8;\n    margin-bottom: 8px;\n  }\n  .react-datepicker__day-name {\n    margin: 0;\n    padding: 8px 8px;\n    font-family: Inter;\n    font-size: 14px;\n    font-style: normal;\n    font-weight: 600;\n    line-height: 18px;\n    text-align: center;\n    color: rgba(239, 237, 232, 0.5);\n  }\n  .react-datepicker__navigation {\n    margin-top: 4px;\n    color: #efe8eb;\n  }\n  .react-datepicker__navigation--previous {\n    left: 7px;\n    top: 14px;\n    width: 18px;\n    height: 18px;\n  }\n  .react-datepicker__navigation--next {\n    right: 7px;\n    top: 14px;\n    width: 18px;\n    height: 18px;\n  }\n  .react-datepicker__navigation-icon::before:hover:focus {\n    border-color: #efede8;\n  }\n  .react-datepicker__week {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    color: #efede8;\n  }\n  .react-datepicker__day {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 8px;\n    flex-shrink: 0;\n    margin: 0;\n    width: 32px;\n    height: 32px;\n    border-radius: 50%;\n    color: #efede8;\n    font-family: Inter;\n    font-size: 14px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: 18px;\n    text-align: center;\n  }\n  .react-datepicker__month {\n    display: flex;\n    gap: 7px;\n    flex-direction: column;\n    justify-content: space-between;\n    padding-top: 14px;\n    margin: 0;\n  }\n  .react-datepicker__day--selected {\n    background-color: #040404;\n    color: #efe8e8;\n    font-size: 14px;\n  }\n  .react-datepicker__day--selected:hover {\n    border-radius: 50%;\n    background-color: #040404;\n  }\n  .react-datepicker__day:hover {\n    border-radius: 50%;\n    background-color: #040404;\n    color: #efede8;\n  }\n  .react-datepicker__day--keyboard-selected {\n    border-radius: 50%;\n    background-color: #040404;\n    color: #efede8;\n  }\n  .react-datepicker__day--weekend {\n  }\n  .react-datepicker__day--disabled {\n    opacity: 50%;\n  }\n  .react-datepicker__day--outside-month {\n    background-color: transparent;\n    pointer-events: none;\n    opacity: 0;\n  }\n  .react-datepicker__view-calendar-icon input {\n    padding: 6px 10px 5px 13px;\n  }\n  .react-datepicker__triangle {\n    visibility: hidden;\n  }\n`;\n\nexport const TitleWrapper = styled.button`\n  color: #efede8;\n  background: inherit;\n  border: none;\n  font-weight: 700;\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 24px;\n  display: flex;\n  gap: 8px;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const CalendarIcon = styled.svg`\n  width: 24px;\n  height: 24px;\n  fill: #ef8964;\n  stroke: #ef8964;\n`;\n","import { forwardRef } from 'react';\nimport { format } from 'date-fns';\nimport DatePicker from 'react-datepicker';\nimport {\n  calendarGlobalStyles,\n  TitleWrapper,\n  CalendarIcon,\n} from './Datepicker.styled';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport sprite from 'assets/images/sprite.svg';\nimport { Global } from '@emotion/react';\n\nconst StyledDatepicker = ({\n  selectedDate,\n  setSelectedDate,\n  user,\n  onDateChange,\n}) => {\n  const createdDate = Date.parse(user.createdAt);\n\n  const submitSelectedDate = date => {\n    setSelectedDate(date);\n    onDateChange(date);\n  };\n\n  const CustomInput = forwardRef(({ value, onClick }, ref) => {\n    return (\n      <TitleWrapper onClick={onClick} ref={ref}>\n        {format(selectedDate, 'dd/MM/yyyy')}\n        <CalendarIcon iconColor=\"#EF8964\">\n          <use href={`${sprite}#calendar`} />\n        </CalendarIcon>\n      </TitleWrapper>\n    );\n  });\n\n  return (\n    <>\n      <Global styles={calendarGlobalStyles} />\n      <DatePicker\n        selected={selectedDate}\n        onChange={date => {\n          submitSelectedDate(date);\n        }}\n        customInput={<CustomInput />}\n        dateFormat={'dd MM yyyy'}\n        calendarStartDay={1}\n        minDate={user.createdAt ? createdDate : Date.now()}\n        maxDate={Date.now()}\n      />\n    </>\n  );\n};\n\nexport default StyledDatepicker;\n","import {\n  DaySwitchArea,\n  ArrowIcon,\n  Button,\n  ArrowArea,\n} from './DaySwitch.styled';\nimport StyledDatepicker from './Datepicker';\nimport sprite from 'assets/images/sprite.svg';\nimport { useState } from 'react';\nimport { format } from 'date-fns';\n\nconst DaySwitch = ({ selectedDate, setSelectedDate, user }) => {\n  const [disabledLeft, setDisabledLeft] = useState(false);\n  const [disabledRight, setDisabledRight] = useState(true);\n  const createdDate = Date.parse(user.createdAt);\n\n  const handleDateChange = date => {\n    setSelectedDate(date);\n  };\n\n  const handlePrevDay = () => {\n    const newDate = new Date(selectedDate);\n    newDate.setDate(selectedDate.getDate() - 1);\n    setSelectedDate(newDate);\n\n    const formatNewDate = format(newDate, 'dd-MM-yyyy');\n    const formatRegisterDate = format(createdDate, 'dd-MM-yyyy');\n    if (formatNewDate === formatRegisterDate) {\n      setDisabledLeft(true);\n    }\n  };\n\n  const handleNextDay = () => {\n    const newDate = new Date(selectedDate);\n    newDate.setDate(selectedDate.getDate() + 1);\n    setSelectedDate(newDate);\n\n    const formatNewDate = format(newDate, 'dd-MM-yyyy');\n    const formatTodayDate = format(new Date(), 'dd-MM-yyyy');\n    if (formatNewDate !== formatTodayDate) {\n      setDisabledRight(false);\n    }\n  };\n\n  const disabledLeftStyle = {\n    fill: disabledLeft ? 'rgba(239,237,232,0.2)' : '#efede8',\n  };\n\n  const disabledRightStyle = {\n    fill: disabledLeft ? 'rgba(239,237,232,0.2)' : '#efede8',\n  };\n\n  return (\n    <DaySwitchArea>\n      <StyledDatepicker\n        selectedDate={selectedDate}\n        setSelectedDate={setSelectedDate}\n        user={user}\n        onDateChange={handleDateChange}\n      />\n      <ArrowArea>\n        <Button type=\"button\" onClick={handlePrevDay} disabled={disabledLeft}>\n          <ArrowIcon style={disabledLeftStyle}>\n            <use href={`${sprite}#icon-chevron-left`} />\n          </ArrowIcon>\n        </Button>\n        <Button type=\"button\" onClick={handleNextDay} disabled={disabledRight}>\n          <ArrowIcon style={disabledRightStyle}>\n            <use href={`${sprite}#icon-chevron-right`} />\n          </ArrowIcon>\n        </Button>\n      </ArrowArea>\n    </DaySwitchArea>\n  );\n};\n\nexport default DaySwitch;\n","import styled from '@emotion/styled';\n\nexport const DiaryWrapper = styled.div`\n  padding-top: 62px;\n  padding-bottom: 80px;  \n  width: 100%;\n\n    @media screen and (min-width: 768px) {   \n      padding-bottom: 64px;  \n  }\n\n  @media screen and (min-width: 1440px) {\n      padding-top: 85px;\n      padding-bottom: 68px; \n  }\n`;\n\nexport const ForPosition = styled.div`\n  width: 100%;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n\n  @media screen and (min-width: 1440px) {\n    padding-inline: 64px;\n  }\n`;\n\nexport const DiaryContainer = styled.div`\n  display: flex;\n\n  @media screen and (min-width: 375px) {\n    flex-direction: column;\n    gap: 40px;\n    margin-top: 40px;\n  }\n\n  @media screen and (min-width: 768px) {\n    gap: 64px;\n    margin-top: 32px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    flex-direction: row;\n    gap: 32px;\n  }\n`;\n\nexport const Left = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  @media screen and (min-width: 375px) {\n    width: 335px;\n    gap: 40px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 704px;\n    gap: 32px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 826px;\n  }\n`;\n\nexport const Right = styled.div`\n  @media screen and (min-width: 375px) {\n    width: 335px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 593px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 390px;\n  }\n`;\n","import Container from 'components/Container';\nimport DayDashboard from 'components/DayDashboard';\nimport DayExercises from 'components/DayExercises';\nimport DayProducts from 'components/DayProducts';\nimport DaySwitch from 'components/DaySwitch';\nimport TitlePage from 'components/TitlePage';\nimport {\n  DiaryWrapper,\n  DiaryContainer,\n  Left,\n  Right,\n  ForPosition,\n} from './Diary.styled';\nimport Notice from 'components/Notice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport { selectDiary } from 'redux/api/apiSelectors';\nimport { currentUser } from 'redux/auth/authOperations';\nimport { selectUser } from 'redux/auth/authSelectors';\nimport { format } from 'date-fns';\nimport { selectDiaryUpdated } from 'redux/api/apiSelectors';\nimport {\n  //deleteProduct,\n  diaryUpdateReset,\n  fetchDiary,\n} from 'redux/api/apiOperations';\n\nconst Diary = () => {\n  const dispatch = useDispatch();\n  const [selectedDate, setSelectedDate] = useState(new Date(Date.now()));\n  const data = useSelector(selectDiary);\n\n  const { consumedProducts, doneExercises } = data;\n  const user = useSelector(selectUser);\n  const newDate = format(selectedDate, 'dd-MM-yyyy');\n  const dairyUpdated = useSelector(selectDiaryUpdated);\n\n  useEffect(() => {\n    dispatch(fetchDiary({ date: newDate }));\n  }, [dispatch, newDate]);\n\n  useEffect(() => {\n    if (dairyUpdated) {\n      dispatch(fetchDiary({ date: newDate }));\n    }\n    dispatch(currentUser());\n    dispatch(diaryUpdateReset());\n  }, [dispatch, dairyUpdated, newDate]);\n\n  return (\n    <DiaryWrapper>\n      <Container>\n        <ForPosition>\n          <TitlePage title=\"Diary\" />\n          <DaySwitch\n            selectedDate={selectedDate}\n            setSelectedDate={setSelectedDate}\n            user={user}\n          />\n          <DiaryContainer>\n            <Left>\n              <DayProducts consumedProducts={consumedProducts} />\n              <DayExercises doneExercises={doneExercises} />\n            </Left>\n            <Right>\n              <DayDashboard data={data} />\n              <Notice notice=\"Record all your meals in the calorie diary every day. This will help you be aware of your nutrition and make informed choices.\" />\n            </Right>\n          </DiaryContainer>\n        </ForPosition>\n      </Container>\n    </DiaryWrapper>\n  );\n};\n\nexport default Diary;\n","export const selectCategories = state => state.api.categories; // []\n\nexport const selectExercises = state => state.api.exercises; // { result: [], total_results: number }\n\nexport const selectFilters = state => state.api.filters; // { result: [], total_results: number }\n\nexport const selectProducts = state => state.api.products; // { result: [], total_results: number }\n\nexport const selectIsLoading = state => state.api.isLoading; // boolean\n\nexport const selectError = state => state.api.error; // { message: string }\n\nexport const selectCalculate = state => state.api.calculate; // {}\n\nexport const selectDiary = state => state.api.diary; // {}\n\nexport const selectDiaryUpdated = state => state.api.diaryUpdated; // boolean\n"],"names":["_ref","children","_jsx","ContainerWrapper","styled","div","_templateObject","_taggedTemplateLiteral","NoticeArea","NoticeIcon","_templateObject2","NoticeMessage","svg","width","height","_templateObject3","notice","_jsxs","fill","href","concat","sprite","Title","h1","title","DayDashboardArea","ul","DashboardItem","li","props","borderColor","accent","TitleArea","Icon","_ref$iconColor","iconColor","stroke","p","_templateObject4","Value","_templateObject5","data","dailyPhysicalActivity","userBMR","caloriesBurnedSum","caloriesConsumedSum","caloriesRemaining","sportsRemaining","Object","keys","length","Math","abs","DayExercisesArea","dimention","h3","Button","button","Add","ArrowIcon","Message","_templateObject6","TableArea","_templateObject7","TableHeader","_templateObject8","Grid1","_templateObject9","Grid2","_templateObject10","Grid3","_templateObject11","Grid4","_templateObject12","Grid5","_templateObject13","Grid6","_templateObject14","Grid7","_templateObject15","ShorterTitle","_templateObject16","List","_templateObject17","ExerciseDiv","Column","ButtonEl","DeleteIcon","id","exercise","burnedCalories","time","dateForDelete","dispatch","useDispatch","bodyPart","equipment","name","target","onClick","deleteExercise","exerciseId","date","handleClick","doneExercises","isLoading","useSelector","selectIsLoading","error","selectError","location","useLocation","findLength","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","array","wrap","_context","prev","next","sent","abrupt","t0","stop","_x","apply","arguments","arrayLength","_useState","useState","_useState2","_slicedToArray","heightExerciseArea","setHeightExerciseArea","Link","to","state","from","Loader","_Fragment","map","_ref3","_id","ExerciseItem","Notify","failure","message","DayProductsArea","ProductDiv","Indicator","span","color","RecommendText","product","caloriesConsumed","weightConsumed","recommendedByGroupBlood","isRecommended","category","deleteProduct","productId","consumedProducts","ProductItem","DaySwitchArea","ArrowArea","calendarGlobalStyles","css","TitleWrapper","CalendarIcon","selectedDate","setSelectedDate","user","onDateChange","createdDate","Date","parse","createdAt","CustomInput","forwardRef","ref","value","format","Global","styles","DatePicker","selected","onChange","submitSelectedDate","customInput","dateFormat","calendarStartDay","minDate","now","maxDate","disabledLeft","setDisabledLeft","_useState3","_useState4","disabledRight","setDisabledRight","disabledLeftStyle","disabledRightStyle","StyledDatepicker","type","newDate","setDate","getDate","disabled","style","DiaryWrapper","ForPosition","DiaryContainer","Left","Right","selectDiary","selectUser","dairyUpdated","selectDiaryUpdated","useEffect","fetchDiary","currentUser","diaryUpdateReset","Container","TitlePage","DaySwitch","DayProducts","DayExercises","DayDashboard","Notice","selectCategories","api","categories","selectProducts","products","selectCalculate","calculate","diary","diaryUpdated"],"sourceRoot":""}
{"version":3,"file":"static/js/966.bcfd7283.chunk.js","mappings":"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","sources":["components/Container/Container.styled.js","components/CustomInput/CustomInput.styled.js","components/CustomInput/CustomInput.jsx","helpers/schemas/authValidationSchema.js","components/SignUpForm/SignUpForm.styled.js","components/SignUpForm/SignUpForm.jsx","pages/SignUp/SignUp.styled.js","pages/SignUp/SignUp.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ContainerWrapper = styled.div`\n  width: 100%;\n  margin-inline: auto;\n  padding-inline: 20px;\n\n  @media screen and (min-width: 375px) {\n    width: 375px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 768px;\n    padding-inline: 32px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 1440px;\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const AuthInputWrapper = styled.div`\n  width: 100%;\n  position: relative;\n`;\n\nexport const AuthLabel = styled.label`\n  position: absolute;\n  top: 50%;\n  left: 14px;\n  transform: translateY(-50%);\n  text-transform: capitalize;\n  color: rgba(239, 237, 232, 0.6);\n  font-size: 14px;\n  line-height: calc(18 / 14);\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    line-height: calc(24 / 16);\n  }\n\n  input:focus + &,\n  input:not(:placeholder-shown) + & {\n    top: -18px;\n    transform: translateY(0%);\n    left: 0px;\n    font-size: 12px;\n    line-height: 140%;\n\n    @media screen and (min-width: 768px) {\n      font-size: 14px;\n    }\n  }\n`;\n\nexport const AuthInput = styled.input`\n  width: 100%;\n  max-height: 46px;\n  padding: 14px;\n  background-color: transparent;\n  color: #efede8;\n  caret-color: #efede8;\n  font-size: 14px;\n  line-height: calc(18 / 14);\n  border-radius: 12px;\n  border: 1px solid rgba(239, 237, 232, 0.3);\n\n  @media screen and (min-width: 768px) {\n    max-height: 52px;\n    font-size: 16px;\n    line-height: calc(24 / 16);\n  }\n\n  &:focus-visible {\n    border-color: #e6533c;\n  }\n\n  &.validation-failed {\n    border-color: #d80027;\n  }\n\n  &.validation-success {\n    border-color: #3cbf61;\n  }\n\n  &::placeholder {\n    color: transparent;\n  }\n\n  &::-ms-reveal {\n    display: none;\n  }\n\n  &:-webkit-autofill {\n    -webkit-box-shadow: 0 0 0 1000px rgb(4, 4, 4) inset;\n    -webkit-text-fill-color: #efede8;\n    caret-color: #efede8;\n  }\n`;\n\nexport const PasswordToggler = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: absolute;\n  top: 50%;\n  right: 14px;\n  transform: translateY(-50%);\n  background-color: transparent;\n  border: none;\n`;\n\nexport const PasswordTogglerIcon = styled.svg`\n  fill: #efede8;\n`;\n\nexport const AuthErrorMessage = styled.span`\n  position: absolute;\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  bottom: -18px;\n  left: 0px;\n  font-feature-settings: 'clig' off, 'liga' off;\n  font-size: 10px;\n  line-height: calc(15 / 10);\n  letter-spacing: 0.12px;\n  color: #d80027;\n\n  @media screen and (min-width: 768px) {\n    font-size: 12px;\n    line-height: calc(18 / 12);\n  }\n`;\n\nexport const AuthSuccessIcon = styled.svg`\n  width: 12px;\n  height: 12px;\n\n  @media screen and (min-width: 768px) {\n    width: 14px;\n    height: 14px;\n  }\n`;\n\nexport const AuthErrorIcon = styled(AuthSuccessIcon)`\n  fill: #d80027;\n`;\n\nexport const AuthSuccessMessage = styled(AuthErrorMessage)`\n  color: #3cbf61;\n`;\n","import { useField } from 'formik';\nimport { useState } from 'react';\nimport {\n  AuthErrorIcon,\n  AuthErrorMessage,\n  AuthInput,\n  AuthInputWrapper,\n  AuthLabel,\n  AuthSuccessIcon,\n  AuthSuccessMessage,\n  PasswordToggler,\n  PasswordTogglerIcon,\n} from './CustomInput.styled';\nimport sprite from '../../assets/images/sprite.svg';\n\nconst CustomInput = props => {\n  const [field, meta] = useField(props);\n  const [showPassword, setShowPassword] = useState(false);\n  const showError = meta.touched && meta.error;\n  const showSuccess = meta.touched && !meta.error;\n\n  const changeInputType = () => {\n    if (props.name === 'name' || (props.name === 'password' && showPassword))\n      return 'text';\n    else return props.name;\n  };\n\n  const validationStatus = () => {\n    if (showError) {\n      return 'validation-failed';\n    }\n    if (showSuccess) {\n      return 'validation-success';\n    }\n    return;\n  };\n\n  const successMessages = {\n    name: 'Nice to meet you!',\n    email: 'Your email looks good and is ready for action.',\n    password: 'Password is okay.',\n  };\n\n  return (\n    <AuthInputWrapper>\n      <AuthInput\n        type={changeInputType()}\n        {...field}\n        {...props}\n        className={validationStatus()}\n      />\n      <AuthLabel htmlFor={props.id || props.name}>{props.name}</AuthLabel>\n      {props.name === 'password' && (\n        <PasswordToggler\n          type=\"button\"\n          onClick={() => setShowPassword(prev => !prev)}\n        >\n          <PasswordTogglerIcon width=\"20\" height=\"20\">\n            <use href={`${sprite}#${showPassword ? 'eye' : 'eye-off'}`}></use>\n          </PasswordTogglerIcon>\n        </PasswordToggler>\n      )}\n\n      {showError && (\n        <AuthErrorMessage>\n          <AuthErrorIcon>\n            <use href={`${sprite}#error`}></use>\n          </AuthErrorIcon>\n          {meta.error}\n        </AuthErrorMessage>\n      )}\n      {showSuccess && (\n        <AuthSuccessMessage>\n          <AuthSuccessIcon>\n            <use href={`${sprite}#success`}></use>\n          </AuthSuccessIcon>\n          {successMessages[props.name]}\n        </AuthSuccessMessage>\n      )}\n    </AuthInputWrapper>\n  );\n};\n\nexport default CustomInput;\n","import * as Yup from 'yup';\n\nexport const signUpSchema = Yup.object({\n  name: Yup.string().required('Please enter your name'),\n  email: Yup.string()\n    .matches(\n      /^[a-zA-Z0-9_.-]+@[a-zA-Z_]+?.[a-zA-Z]{2,3}$/,\n      \"Doesn't look like a valid email.\"\n    )\n    .required('Please enter your email address'),\n  password: Yup.string()\n    .min(6, 'Password must be at least 6 characters long')\n    .required('Please enter your password'),\n});\n\nexport const signInSchema = Yup.object({\n  email: Yup.string()\n    .matches(\n      /^[a-zA-Z0-9_.-]+@[a-zA-Z_]+?.[a-zA-Z]{2,3}$/,\n      \"Doesn't look like a valid email.\"\n    )\n    .required('Please enter your email address'),\n  password: Yup.string()\n    .min(6, 'Password must be minimum 6 characters long')\n    .required('Please enter your password'),\n});\n","import styled from '@emotion/styled';\nimport { Form } from 'formik';\nimport { Link } from 'react-router-dom';\n\nexport const AuthWrapper = styled.div`\n  width: 335px;\n  padding-top: 66px;\n\n  @media screen and (min-width: 768px) {\n    width: 496px;\n    padding-top: 105px;\n  }\n`;\n\nexport const AuthHeader = styled.h1`\n  color: #efede8;\n  font-size: 24px;\n  line-height: calc(28 / 24);\n  margin-bottom: 14px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 32px;\n    line-height: calc(44 / 32);\n    margin-bottom: 16px;\n  }\n`;\n\nexport const AuthParagraph = styled.p`\n  color: rgba(239, 237, 232, 0.3);\n  font-size: 14px;\n  line-height: calc(18 / 14);\n  margin-bottom: 28px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    line-height: calc(24 / 16);\n    margin-bottom: 32px;\n  }\n`;\n\nexport const AuthStyledForm = styled(Form)`\n  width: 335px;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 38px;\n  margin-bottom: 12px;\n\n  @media screen and (min-width: 768px) {\n    width: 364px;\n    gap: 40px;\n  }\n`;\n\nexport const AuthSubmitButton = styled.button`\n  margin-top: 10px;\n  display: flex;\n  padding: 12px 40px;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n  color: #efede8;\n  font-family: inherit;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 18px;\n  border: none;\n  border-radius: 12px;\n  background: #e6533c;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 20px;\n    padding: 16px 60px;\n    font-size: 20px;\n    line-height: calc(24 / 20);\n  }\n\n  &:hover:not([disabled]),\n  &:focus-visible:not([disabled]) {\n    background: #ef8964;\n  }\n\n  &:disabled {\n    color: rgba(239, 237, 232, 0.6);\n    cursor: not-allowed;\n  }\n`;\n\nexport const AuthBottomText = styled.span`\n  color: rgba(239, 237, 232, 0.6);\n  font-feature-settings: 'clig' off, 'liga' off;\n  font-size: 12px;\n  line-height: calc(18 / 12);\n`;\n\nexport const AuthStyledLink = styled(Link)`\n  color: #efede8;\n  font-feature-settings: 'clig' off, 'liga' off;\n  font-size: 12px;\n  line-height: 18px;\n  text-decoration-line: underline;\n`;\n","import { Formik } from 'formik';\nimport { signUpSchema } from 'helpers/schemas';\nimport CustomInput from 'components/CustomInput';\nimport {\n  AuthBottomText,\n  AuthHeader,\n  AuthParagraph,\n  AuthStyledForm,\n  AuthStyledLink,\n  AuthSubmitButton,\n  AuthWrapper,\n} from './SignUpForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectIsAuthorized,\n  selectIsRefreshed,\n} from 'redux/auth/authSelectors';\nimport { register } from 'redux/auth/authOperations';\nimport Loader from 'components/Loader';\nimport { useNavigate } from 'react-router-dom';\n\nconst SignUpForm = () => {\n  const initialValues = { name: '', email: '', password: '' };\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const isRefreshing = useSelector(selectIsRefreshed);\n  const isAuthorized = useSelector(selectIsAuthorized);\n\n  const handleSubmit = (credentials, actions) => {\n    console.log(credentials);\n\n    actions.resetForm();\n\n    dispatch(register(credentials));\n\n    if (isAuthorized) {\n      navigate('/profile');\n    }\n  };\n\n  return (\n    <AuthWrapper>\n      <AuthHeader>Sign Up</AuthHeader>\n\n      <AuthParagraph>\n        Thank you for your interest in our platform. To complete the\n        registration process, please provide us with the following information.\n      </AuthParagraph>\n\n      <Formik\n        initialValues={initialValues}\n        validationSchema={signUpSchema}\n        onSubmit={handleSubmit}\n      >\n        {({ isValid, dirty, values }) => (\n          <AuthStyledForm>\n            {Object.keys(values).map(value => {\n              return (\n                <CustomInput\n                  key={value}\n                  name={value}\n                  id={value}\n                  required\n                  placeholder=\".\"\n                />\n              );\n            })}\n\n            <AuthSubmitButton type=\"submit\" disabled={!(isValid && dirty)}>\n              Sign Up\n            </AuthSubmitButton>\n          </AuthStyledForm>\n        )}\n      </Formik>\n\n      <AuthBottomText>\n        Already have an account?{' '}\n        <AuthStyledLink to=\"/signin\">Sign In</AuthStyledLink>\n      </AuthBottomText>\n\n      {isRefreshing && <Loader />}\n    </AuthWrapper>\n  );\n};\n\nexport default SignUpForm;\n","import styled from '@emotion/styled';\nimport auth_background_1x_mob from '../../assets/images/auth_background_1x_mob.jpg';\nimport auth_background_2x_mob from '../../assets/images/auth_background_2x_mob.jpg';\nimport welcome_background_1x_tab from '../../assets/images/welcome_background_1x_tab.jpg';\nimport welcome_background_2x_tab from '../../assets/images/welcome_background_2x_tab.jpg';\nimport welcome_background_1x_desk from '../../assets/images/welcome_background_1x_desk.jpg';\nimport welcome_background_2x_desk from '../../assets/images/welcome_background_2x_desk.jpg';\nimport { ContainerWrapper } from 'components/Container/Container.styled';\n\nexport const SignUpSection = styled.section`\n  min-height: 100dvh;\n  padding-top: 24px;\n  background-image: image-set(\n    url(${auth_background_1x_mob}) 1x,\n    url(${auth_background_2x_mob}) 2x\n  );\n  background-repeat: no-repeat;\n  background-position: bottom right;\n\n  /* overflow: hidden; */\n\n  @media screen and (min-width: 768px) {\n    padding-top: 32px;\n    background-image: image-set(\n      url(${welcome_background_1x_tab}) 1x,\n      url(${welcome_background_2x_tab}) 2x\n    );\n  }\n\n  @media screen and (min-width: 1440px) {\n    background-image: image-set(\n      url(${welcome_background_1x_desk}) 1x,\n      url(${welcome_background_2x_desk}) 2x\n    );\n    background-size: contain;\n  }\n`;\n\nexport const AuthContainer = styled(ContainerWrapper)`\n  display: flex;\n  flex-direction: column;\n  gap: 90px;\n\n  @media screen and (min-width: 768px) {\n    gap: 140px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    gap: 151px;\n    padding-inline: 96px;\n  }\n`;\n","import SignUpForm from 'components/SignUpForm';\nimport { AuthContainer, SignUpSection } from './SignUp.styled';\n\nconst SignUp = () => {\n  return (\n    <>\n      <SignUpSection>\n        <AuthContainer>\n          <SignUpForm />\n        </AuthContainer>\n      </SignUpSection>\n    </>\n  );\n};\n\nexport default SignUp;\n"],"names":["ContainerWrapper","styled","div","_templateObject","_taggedTemplateLiteral","AuthInputWrapper","AuthLabel","label","_templateObject2","AuthInput","input","_templateObject3","PasswordToggler","button","_templateObject4","PasswordTogglerIcon","svg","_templateObject5","AuthErrorMessage","span","_templateObject6","AuthSuccessIcon","_templateObject7","AuthErrorIcon","_templateObject8","AuthSuccessMessage","_templateObject9","props","_useField","useField","_useField2","_slicedToArray","field","meta","_useState","useState","_useState2","showPassword","setShowPassword","showError","touched","error","showSuccess","_jsxs","children","_jsx","_objectSpread","type","name","className","htmlFor","id","onClick","prev","width","height","href","concat","sprite","email","password","signUpSchema","Yup","required","matches","min","signInSchema","AuthWrapper","AuthHeader","h1","AuthParagraph","p","AuthStyledForm","Form","AuthSubmitButton","AuthBottomText","AuthStyledLink","Link","dispatch","useDispatch","navigate","useNavigate","isRefreshing","useSelector","selectIsRefreshed","isAuthorized","selectIsAuthorized","Formik","initialValues","validationSchema","onSubmit","credentials","actions","console","log","resetForm","register","_ref","isValid","dirty","values","Object","keys","map","value","CustomInput","placeholder","disabled","to","Loader","SignUpSection","section","auth_background_1x_mob","auth_background_2x_mob","welcome_background_1x_tab","welcome_background_2x_tab","welcome_background_1x_desk","welcome_background_2x_desk","AuthContainer","_Fragment","SignUpForm"],"sourceRoot":""}
{"version":3,"file":"static/js/545.01639a10.chunk.js","mappings":"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","sources":["components/BasicModalWindow/BasicModalWindow.styled.js","components/BasicModalWindow/BasicModalWindow.jsx","components/Container/Container.jsx","components/Container/Container.styled.js","components/TitlePage/TitlePage.styled.js","components/TitlePage/TitlePage.jsx","components/products/ProductsFilter/ProductsFilter.styled.js","components/products/ProductsFilter/ProductsFilter.jsx","../node_modules/src/observe.ts","../node_modules/src/InView.tsx","components/products/ProductsItem/ProductsItem.styled.js","helpers/schemas/addProductSchema.js","components/AddProductForm/AddProductForm.styled.js","components/AddProductForm/AddProductForm.jsx","components/products/AddProductSuccess/AddProductSuccess.styled.js","components/products/AddProductSuccess/AddProductSuccess.jsx","components/products/ProductsItem/ProductsItem.jsx","components/products/ProductsList/ProductsList.styled.js","components/products/SearchNotResult/SearchNotResult.styled.js","components/products/SearchNotResult/SearchNotResult.jsx","components/products/ProductsList/ProductsList.jsx","../node_modules/src/useInView.tsx","pages/Products/Products.styled.js","pages/Products/Products.jsx","redux/api/apiSelectors.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const BasicWindow = styled.div`\n  width: 100%;\n  height: 100%;\n  background: rgba(04, 04, 04, 0.4);\n  position: absolute;\n  top: 0;\n  left: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 200;\n\n  @media screen and (min-width: 768px) {\n    position: fixed;\n  }\n`;\n\nexport const Modal = styled.div`\n  border-radius: 12px;\n  border: 1px solid rgba(239, 237, 232, 0.2);\n  background: #10100f;\n  position: absolute;\n  top: 5dvh;\n  ${({ children }) => {\n    if (children.some(child => child.key === 'prodSuccess')) {\n      return 'padding: 48px 89px;   @media screen and (min-width: 768px) {padding: 64px 136px;}';\n    }\n    if (children.some(child => child.key === 'addProd')) {\n      return `padding: 48px 24px;   @media screen and (min-width: 768px) {padding: 48px 32px;}`;\n    }\n    if (children.some(child => child.key === 'exercSuccess')) {\n      return `padding: 48px 89px;   @media screen and (min-width: 768px) {padding: 64px 134px;}`;\n    }\n    if (children.some(child => child.key === 'addExerc')) {\n      return `padding: 48px 16px;   @media screen and (min-width: 768px) {padding: 48px 32px;}`;\n    }\n  }};\n\n  @media screen and (min-width: 768px) {\n    position: relative;\n    top: 0;\n  }\n`;\n\nexport const ButtonClouse = styled.button`\n  width: 22px;\n  height: 22px;\n\n  border: none;\n  background: inherit;\n  position: absolute;\n  top: 14px;\n  right: 14px;\n  @media screen and (min-width: 768px) {\n    width: 26px;\n    height: 26px;\n  }\n`;\n\nexport const SvgClouse = styled.svg`\n  width: 20px;\n  height: 20px;\n\n  stroke: var(--white-color);\n`;\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\n\nimport {\n  BasicWindow,\n  Modal,\n  ButtonClouse,\n  SvgClouse,\n} from './BasicModalWindow.styled';\n\nimport sprite from '../../assets/images/sprite.svg';\n\nconst BasicModalWindow = ({ children, isOpenModalToggle }) => {\n  useEffect(() => {\n    const closeESC = e => {\n      if (e.code === 'Escape') {\n        isOpenModalToggle();\n      }\n    };\n    document.addEventListener('keydown', closeESC);\n    return () => {\n      document.removeEventListener('keydown', closeESC);\n    };\n  }, [isOpenModalToggle]);\n\n  const handleClickBackground = e => {\n    if (e.currentTarget === e.target) {\n      isOpenModalToggle();\n    }\n  };\n\n  const modal = (\n    <BasicWindow onClick={handleClickBackground}>\n      <Modal>\n        <ButtonClouse onClick={() => isOpenModalToggle()}>\n          <SvgClouse>\n            <use href={sprite + '#x'}></use>\n          </SvgClouse>\n        </ButtonClouse>\n\n        {children}\n      </Modal>\n    </BasicWindow>\n  );\n\n  return createPortal(modal, document.querySelector('#root_modal'));\n};\n\nexport default BasicModalWindow;\n\nBasicModalWindow.propTypes = {\n  children: PropTypes.any,\n  isOpenModalToggle: PropTypes.func,\n};\n","import { ContainerWrapper } from './Container.styled';\n\nconst Container = ({ children }) => {\n  return <ContainerWrapper>{children}</ContainerWrapper>;\n};\n\nexport default Container;\n","import styled from '@emotion/styled';\n\nexport const ContainerWrapper = styled.div`\n  width: 100%;\n  margin-inline: auto;\n  padding-inline: 20px;\n  /* padding-top: 61px; */\n\n  @media screen and (min-width: 375px) {\n    width: 375px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 768px;\n    padding-inline: 32px;\n    /* padding-top: 84px; */\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 1440px;\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const Title = styled.h1`\n  margin-top: 40px;\n  font-family: Roboto;\n  color: #efede8;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 1.375;\n\n  @media screen and (min-width: 375px) {\n    margin-top: 40px;\n    font-size: 24px;\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-top: 72px;\n    font-size: 32px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Title } from './TitlePage.styled';\n\nconst TitlePage = ({ title }) => {\n  return <Title>{title}</Title>;\n};\n\nexport default TitlePage;\n\nTitlePage.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const ProdFilterWrapper = styled.div`\n  @media screen and (min-width: 1440px) {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n    align-items: end;\n  }\n`;\n\nexport const ProdFilterForm = styled.form`\n  width: 335px;\n  margin-block: 40px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 16px;\n\n  @media screen and (min-width: 768px) {\n    width: 664px;\n    margin-block: 32px;\n    flex-direction: row;\n  }\n\n  @media screen and (min-width: 1440px) {\n    margin-block: 0px;\n    margin-left: auto;\n  }\n`;\n\nexport const ProdFilterTitle = styled.p`\n  display: none;\n\n  @media screen and (min-width: 1440px) {\n    color: rgba(239, 237, 232, 0.5);\n    display: inline-block;\n    font-size: 14px;\n    line-height: calc(18 / 14);\n  }\n`;\n\nexport const ProdFilterSearchBox = styled.div`\n  position: relative;\n  width: 100%;\n\n  @media screen and (min-width: 768px) {\n    width: 236px;\n    flex-shrink: 0;\n  }\n`;\n\nexport const ProdFilterSearchField = styled.input`\n  width: 100%;\n  padding: 14px;\n  background: transparent;\n  color: #efede8;\n  font-size: 14px;\n  line-height: calc(18 / 14);\n  border-radius: 12px;\n  border: 1px solid rgba(239, 237, 232, 0.3);\n\n  @media screen and (min-width: 768px) {\n    height: 52px;\n    font-size: 16px;\n    line-height: calc(24 / 16);\n  }\n\n  &:focus-visible {\n    border-color: #e6533c;\n  }\n\n  &::-webkit-search-cancel-button {\n    display: none;\n  }\n\n  &:-webkit-autofill {\n    -webkit-box-shadow: 0 0 0 1000px rgb(4, 4, 4) inset;\n    -webkit-text-fill-color: #efede8;\n    caret-color: #efede8;\n  }\n`;\n\nexport const ProdSearchCancelBtn = styled.button`\n  position: absolute;\n  top: 50%;\n  right: 40px;\n  transform: translateY(-50%);\n  padding: 0px;\n  border: none;\n  background: transparent;\n`;\n\nexport const ProdSearchIcon = styled.svg`\n  width: 18px;\n  height: 18px;\n`;\n\nexport const ProdSearchSubmitBtn = styled(ProdSearchCancelBtn)`\n  right: 14px;\n`;\n\nexport const ProdFilterSelectsWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 16px;\n`;\n\nexport const ProdFilterCategorySlct = styled.select`\n  width: 146px;\n  padding: 14px;\n  text-transform: capitalize;\n  text-overflow: ellipsis;\n  color: #efede8;\n  font-size: 14px;\n  line-height: calc(18 / 14);\n  background: transparent;\n  border-radius: 12px;\n  border: 1px solid rgba(239, 237, 232, 0.3);\n\n  @media screen and (min-width: 768px) {\n    width: 192px;\n    height: 52px;\n    font-size: 16px;\n    line-height: calc(24 / 16);\n  }\n\n  & option {\n    width: 146px;\n    text-transform: capitalize;\n    font-size: 14px;\n    line-height: calc(18 / 14);\n    background: #1c1c1c;\n\n    @media screen and (min-width: 768px) {\n      width: 192px;\n      font-size: 16px;\n      line-height: calc(24 / 16);\n    }\n    /* \n    &:hover {\n      background: #e6533c;\n    } */\n  }\n`;\n\nexport const ProdFilterRecSlct = styled(ProdFilterCategorySlct)`\n  width: 173px;\n\n  @media screen and (min-width: 768px) {\n    width: 204px;\n  }\n\n  & option {\n    width: 173px;\n\n    @media screen and (min-width: 768px) {\n      width: 204px;\n    }\n  }\n`;\n","import sprite from '../../../assets/images/sprite.svg';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchCategories } from 'redux/api/apiOperations';\nimport { selectCategories } from 'redux/api/apiSelectors';\nimport {\n  ProdFilterCategorySlct,\n  ProdFilterForm,\n  ProdFilterRecSlct,\n  ProdFilterSearchBox,\n  ProdFilterSearchField,\n  ProdFilterSelectsWrapper,\n  ProdFilterTitle,\n  ProdFilterWrapper,\n  ProdSearchCancelBtn,\n  ProdSearchIcon,\n  ProdSearchSubmitBtn,\n} from './ProductsFilter.styled';\nimport { useFormik } from 'formik';\n\nconst ProductsFilter = ({ handleSetFilters }) => {\n  const dispatch = useDispatch();\n  const productCategories = useSelector(selectCategories);\n  const formik = useFormik({\n    initialValues: { title: '', category: '', recommended: '' },\n    onSubmit: values => handleSubmit(values),\n  });\n\n  useEffect(() => {\n    dispatch(fetchCategories());\n  }, [dispatch]);\n\n  const handleSubmit = (values = formik.values) => {\n    const { initialValues } = formik;\n    const filledValues = Object.entries(values).filter(\n      ([key, value]) => value !== initialValues[key]\n    );\n    const payload = Object.fromEntries(filledValues);\n\n    handleSetFilters(payload);\n  };\n\n  const handleChange = e => {\n    formik.handleChange(e);\n    const { initialValues, values } = formik;\n    if (e.target.value !== initialValues[e.target.value]) {\n      const prePayload = { ...values, [e.target.name]: e.target.value };\n      handleSubmit(prePayload);\n    }\n  };\n\n  return (\n    <>\n      <ProdFilterWrapper>\n        <ProdFilterTitle>Filters</ProdFilterTitle>\n        <ProdFilterForm onSubmit={formik.handleSubmit}>\n          <ProdFilterSearchBox>\n            <ProdFilterSearchField\n              type=\"search\"\n              name=\"title\"\n              placeholder=\"Search\"\n              value={formik.values.title}\n              onChange={formik.handleChange}\n            />\n            {formik.initialValues.title !== formik.values.title && (\n              <ProdSearchCancelBtn\n                type=\"button\"\n                onClick={() => {\n                  formik.setFieldValue('title', '');\n                  formik.handleSubmit();\n                }}\n              >\n                <ProdSearchIcon>\n                  <use href={`${sprite}#x2`}></use>\n                </ProdSearchIcon>\n              </ProdSearchCancelBtn>\n            )}\n            <ProdSearchSubmitBtn type=\"submit\">\n              <ProdSearchIcon>\n                <use href={`${sprite}#search`}></use>\n              </ProdSearchIcon>\n            </ProdSearchSubmitBtn>\n          </ProdFilterSearchBox>\n\n          <ProdFilterSelectsWrapper>\n            <ProdFilterCategorySlct\n              name=\"category\"\n              value={formik.values.category}\n              onChange={handleChange}\n            >\n              <option value=\"\">Categories</option>\n              {productCategories.map(category => (\n                <option key={category} value={category}>\n                  {category}\n                </option>\n              ))}\n            </ProdFilterCategorySlct>\n\n            <ProdFilterRecSlct\n              name=\"recommended\"\n              value={formik.values.recommended}\n              onChange={handleChange}\n            >\n              <option value=\"\">All</option>\n              <option value={false}>Recommended</option>\n              <option value={true}>Not recommended</option>\n            </ProdFilterRecSlct>\n          </ProdFilterSelectsWrapper>\n        </ProdFilterForm>\n      </ProdFilterWrapper>\n    </>\n  );\n};\n\nexport default ProductsFilter;\n","import type { ObserverInstanceCallback } from './index';\n\nconst observerMap = new Map<\n  string,\n  {\n    id: string;\n    observer: IntersectionObserver;\n    elements: Map<Element, Array<ObserverInstanceCallback>>;\n  }\n>();\n\nconst RootIds: WeakMap<Element | Document, string> = new WeakMap();\nlet rootId = 0;\n\nlet unsupportedValue: boolean | undefined = undefined;\n\n/**\n * What should be the default behavior if the IntersectionObserver is unsupported?\n * Ideally the polyfill has been loaded, you can have the following happen:\n * - `undefined`: Throw an error\n * - `true` or `false`: Set the `inView` value to this regardless of intersection state\n * **/\nexport function defaultFallbackInView(inView: boolean | undefined) {\n  unsupportedValue = inView;\n}\n\n/**\n * Generate a unique ID for the root element\n * @param root\n */\nfunction getRootId(root: IntersectionObserverInit['root']) {\n  if (!root) return '0';\n  if (RootIds.has(root)) return RootIds.get(root);\n  rootId += 1;\n  RootIds.set(root, rootId.toString());\n  return RootIds.get(root);\n}\n\n/**\n * Convert the options to a string Id, based on the values.\n * Ensures we can reuse the same observer when observing elements with the same options.\n * @param options\n */\nexport function optionsToId(options: IntersectionObserverInit) {\n  return Object.keys(options)\n    .sort()\n    .filter(\n      (key) => options[key as keyof IntersectionObserverInit] !== undefined,\n    )\n    .map((key) => {\n      return `${key}_${\n        key === 'root'\n          ? getRootId(options.root)\n          : options[key as keyof IntersectionObserverInit]\n      }`;\n    })\n    .toString();\n}\n\nfunction createObserver(options: IntersectionObserverInit) {\n  // Create a unique ID for this observer instance, based on the root, root margin and threshold.\n  let id = optionsToId(options);\n  let instance = observerMap.get(id);\n\n  if (!instance) {\n    // Create a map of elements this observer is going to observe. Each element has a list of callbacks that should be triggered, once it comes into view.\n    const elements = new Map<Element, Array<ObserverInstanceCallback>>();\n    let thresholds: number[] | readonly number[];\n\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        // While it would be nice if you could just look at isIntersecting to determine if the component is inside the viewport, browsers can't agree on how to use it.\n        // -Firefox ignores `threshold` when considering `isIntersecting`, so it will never be false again if `threshold` is > 0\n        const inView =\n          entry.isIntersecting &&\n          thresholds.some((threshold) => entry.intersectionRatio >= threshold);\n\n        // @ts-ignore support IntersectionObserver v2\n        if (options.trackVisibility && typeof entry.isVisible === 'undefined') {\n          // The browser doesn't support Intersection Observer v2, falling back to v1 behavior.\n          // @ts-ignore\n          entry.isVisible = inView;\n        }\n\n        elements.get(entry.target)?.forEach((callback) => {\n          callback(inView, entry);\n        });\n      });\n    }, options);\n\n    // Ensure we have a valid thresholds array. If not, use the threshold from the options\n    thresholds =\n      observer.thresholds ||\n      (Array.isArray(options.threshold)\n        ? options.threshold\n        : [options.threshold || 0]);\n\n    instance = {\n      id,\n      observer,\n      elements,\n    };\n\n    observerMap.set(id, instance);\n  }\n\n  return instance;\n}\n\n/**\n * @param element - DOM Element to observe\n * @param callback - Callback function to trigger when intersection status changes\n * @param options - Intersection Observer options\n * @param fallbackInView - Fallback inView value.\n * @return Function - Cleanup function that should be triggered to unregister the observer\n */\nexport function observe(\n  element: Element,\n  callback: ObserverInstanceCallback,\n  options: IntersectionObserverInit = {},\n  fallbackInView = unsupportedValue,\n) {\n  if (\n    typeof window.IntersectionObserver === 'undefined' &&\n    fallbackInView !== undefined\n  ) {\n    const bounds = element.getBoundingClientRect();\n    callback(fallbackInView, {\n      isIntersecting: fallbackInView,\n      target: element,\n      intersectionRatio:\n        typeof options.threshold === 'number' ? options.threshold : 0,\n      time: 0,\n      boundingClientRect: bounds,\n      intersectionRect: bounds,\n      rootBounds: bounds,\n    });\n    return () => {\n      // Nothing to cleanup\n    };\n  }\n  // An observer with the same options can be reused, so lets use this fact\n  const { id, observer, elements } = createObserver(options);\n\n  // Register the callback listener for this element\n  let callbacks = elements.get(element) || [];\n  if (!elements.has(element)) {\n    elements.set(element, callbacks);\n  }\n\n  callbacks.push(callback);\n  observer.observe(element);\n\n  return function unobserve() {\n    // Remove the callback from the callback list\n    callbacks.splice(callbacks.indexOf(callback), 1);\n\n    if (callbacks.length === 0) {\n      // No more callback exists for element, so destroy it\n      elements.delete(element);\n      observer.unobserve(element);\n    }\n\n    if (elements.size === 0) {\n      // No more elements are being observer by this instance, so destroy it\n      observer.disconnect();\n      observerMap.delete(id);\n    }\n  };\n}\n","import * as React from 'react';\nimport type { IntersectionObserverProps, PlainChildrenProps } from './index';\nimport { observe } from './observe';\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\nfunction isPlainChildren(\n  props: IntersectionObserverProps | PlainChildrenProps,\n): props is PlainChildrenProps {\n  return typeof props.children !== 'function';\n}\n\n/**\n ## Render props\n\n To use the `<InView>` component, you pass it a function. It will be called\n whenever the state changes, with the new value of `inView`. In addition to the\n `inView` prop, children also receive a `ref` that should be set on the\n containing DOM element. This is the element that the IntersectionObserver will\n monitor.\n\n If you need it, you can also access the\n [`IntersectionObserverEntry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry)\n on `entry`, giving you access to all the details about the current intersection\n state.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView>\n {({ inView, ref, entry }) => (\n      <div ref={ref}>\n        <h2>{`Header inside viewport ${inView}.`}</h2>\n      </div>\n    )}\n </InView>\n );\n\n export default Component;\n ```\n\n ## Plain children\n\n You can pass any element to the `<InView />`, and it will handle creating the\n wrapping DOM element. Add a handler to the `onChange` method, and control the\n state in your own component. Any extra props you add to `<InView>` will be\n passed to the HTML element, allowing you set the `className`, `style`, etc.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView as=\"div\" onChange={(inView, entry) => console.log('Inview:', inView)}>\n <h2>Plain children are always rendered. Use onChange to monitor state.</h2>\n </InView>\n );\n\n export default Component;\n ```\n */\nexport class InView extends React.Component<\n  IntersectionObserverProps | PlainChildrenProps,\n  State\n> {\n  constructor(props: IntersectionObserverProps | PlainChildrenProps) {\n    super(props);\n    this.state = {\n      inView: !!props.initialInView,\n      entry: undefined,\n    };\n  }\n\n  componentDidMount() {\n    this.unobserve();\n    this.observeNode();\n  }\n\n  componentDidUpdate(prevProps: IntersectionObserverProps) {\n    // If a IntersectionObserver option changed, reinit the observer\n    if (\n      prevProps.rootMargin !== this.props.rootMargin ||\n      prevProps.root !== this.props.root ||\n      prevProps.threshold !== this.props.threshold ||\n      prevProps.skip !== this.props.skip ||\n      prevProps.trackVisibility !== this.props.trackVisibility ||\n      prevProps.delay !== this.props.delay\n    ) {\n      this.unobserve();\n      this.observeNode();\n    }\n  }\n\n  componentWillUnmount() {\n    this.unobserve();\n  }\n\n  node: Element | null = null;\n  _unobserveCb: (() => void) | null = null;\n\n  observeNode() {\n    if (!this.node || this.props.skip) return;\n    const {\n      threshold,\n      root,\n      rootMargin,\n      trackVisibility,\n      delay,\n      fallbackInView,\n    } = this.props;\n\n    this._unobserveCb = observe(\n      this.node,\n      this.handleChange,\n      {\n        threshold,\n        root,\n        rootMargin,\n        // @ts-ignore\n        trackVisibility,\n        // @ts-ignore\n        delay,\n      },\n      fallbackInView,\n    );\n  }\n\n  unobserve() {\n    if (this._unobserveCb) {\n      this._unobserveCb();\n      this._unobserveCb = null;\n    }\n  }\n\n  handleNode = (node?: Element | null) => {\n    if (this.node) {\n      // Clear the old observer, before we start observing a new element\n      this.unobserve();\n\n      if (!node && !this.props.triggerOnce && !this.props.skip) {\n        // Reset the state if we get a new node, and we aren't ignoring updates\n        this.setState({ inView: !!this.props.initialInView, entry: undefined });\n      }\n    }\n\n    this.node = node ? node : null;\n    this.observeNode();\n  };\n\n  handleChange = (inView: boolean, entry: IntersectionObserverEntry) => {\n    if (inView && this.props.triggerOnce) {\n      // If `triggerOnce` is true, we should stop observing the element.\n      this.unobserve();\n    }\n    if (!isPlainChildren(this.props)) {\n      // Store the current State, so we can pass it to the children in the next render update\n      // There's no reason to update the state for plain children, since it's not used in the rendering.\n      this.setState({ inView, entry });\n    }\n    if (this.props.onChange) {\n      // If the user is actively listening for onChange, always trigger it\n      this.props.onChange(inView, entry);\n    }\n  };\n\n  render() {\n    const { children } = this.props;\n    if (typeof children === 'function') {\n      const { inView, entry } = this.state;\n      return children({ inView, entry, ref: this.handleNode });\n    }\n\n    const {\n      as,\n      triggerOnce,\n      threshold,\n      root,\n      rootMargin,\n      onChange,\n      skip,\n      trackVisibility,\n      delay,\n      initialInView,\n      fallbackInView,\n      ...props\n    } = this.props as PlainChildrenProps;\n\n    return React.createElement(\n      as || 'div',\n      { ref: this.handleNode, ...props },\n      children,\n    );\n  }\n}\n","import styled from '@emotion/styled';\n\nexport const ProductsCard = styled.li`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 141px;\n  padding: 16px;\n  justify-content: center;\n  align-items: flex-start;\n  border-radius: 12px;\n  border: 1px solid rgba(239, 237, 232, 0.2);\n  background: rgba(239, 237, 232, 0.05);\n  box-sizing: border-box;\n\n  @media screen and (min-width: 768px) {\n    width: calc((100% - 16px) / 2);\n    overflow: hidden;\n  }\n\n  @media screen and (min-width: 1440px) {\n    max-width: 405px;\n  }\n`;\nexport const ProductsCardStatus = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-bottom: 35px;\n  justify-content: space-between;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 27px;\n  }\n`;\nexport const ProductsCardDiet = styled.span`\n  display: inline-flex;\n  padding: 5px 7.5px;\n  justify-content: center;\n  align-items: center;\n  border-radius: 4px;\n  background: rgba(239, 237, 232, 0.05);\n`;\nexport const ProductsCardDietText = styled.p`\n  color: #efede8;\n  font-size: 12px;\n  font-weight: 700;\n  line-height: normal;\n  text-transform: uppercase;\n`;\n\nexport const ProductsCardStatusCount = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const ProductsCardStatusCountTrue = styled.p`\n  color: #efede8;\n  font-size: 12px;\n  line-height: 18px;\n  display: flex;\n  margin-right: 16px;\n  align-items: center;\n\n  &::before {\n    content: '';\n    display: block;\n    width: 14px;\n    height: 14px;\n    border-radius: 10px;\n    background: ${props => (props.isRecommended ? '#e6533c' : '#419b09')};\n    margin-right: 8px;\n  }\n`;\n\nexport const ProductsCardStatusAdd = styled.button`\n  width: 49px;\n  height: 14px;\n  background: transparent;\n  border: none;\n  color: #e6533c;\n\n  font-size: 14px;\n  line-height: 18px;\n  padding: 0;\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    color: #efede8;\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    line-height: 24px;\n    width: 53px;\n    height: 24px;\n  }\n`;\n\nexport const IconAfterAdd = styled.svg`\n  display: block;\n  width: 16px;\n  height: 16px;\n  margin-left: 8px;\n  margin-top: -3px;\n  fill: #e6533c;\n`;\n\nexport const IconBeforeTitle = styled.svg`\n  position: absolute;\n  width: 24px;\n  height: 24px;\n  left: 0;\n  top: calc(50% - 12px);\n  fill: #efa082;\n`;\n\nexport const ProductsCardTitle = styled.h4`\n  position: relative;\n  font-size: 20px;\n  line-height: 24px;\n  color: #efede8;\n  font-weight: 400;\n  margin-bottom: 8px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  padding-left: 40px;\n  max-width: 100%;\n\n  @media screen and (min-width: 768px) {\n    font-size: 24px;\n    line-height: 32px;\n  }\n`;\n\nexport const ProductsCardInfoList = styled.ul`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  gap: 16px;\n`;\n\nexport const ProductsCardInfoItem = styled.li`\n  width: 40%;\n  display: flex;\n  flex-direction: row;\n  gap: 4px;\n  color: rgba(239, 237, 232, 0.4);\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 14px;\n`;\n\nexport const ProductsCardInfoValue = styled.p`\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  color: #efede8;\n  font-size: 12px;\n  line-height: 14px;\n`;\n","import * as Yup from 'yup';\n\nexport const addProductSchema = Yup.object({\n  amount: Yup.number()\n    .moreThan(0, \"Amount can't be 0 or less\")\n    .required('Please enter consumed amount'),\n});\n","import styled from '@emotion/styled';\n\nexport const ProductStyledForm = styled.form`\n  width: 287px;\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n\n  @media screen and (min-width: 768px) {\n    width: 415px;\n  }\n`;\n\nexport const ProductFormFieldsWrapper = styled.div`\n  position: relative;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n  }\n`;\n\nexport const ProductNameField = styled.input`\n  padding: 8px 14px;\n  background-color: transparent;\n  border-radius: 12px;\n  border: 1px solid #e6533c;\n  text-overflow: ellipsis;\n  color: rgba(239, 237, 232, 0.3);\n  font-size: 14px;\n  line-height: calc(18 / 14);\n\n  @media screen and (min-width: 768px) {\n    width: 244px;\n    font-size: 16px;\n    line-height: calc(24 / 16);\n  }\n`;\n\nexport const ProductCaloriesFieldWrapper = styled.div`\n  position: relative;\n`;\n\nexport const ProductCaloriesField = styled(ProductNameField)`\n  width: 100%;\n  color: #efede8;\n  font-size: 14px;\n  line-height: calc(18 / 14);\n\n  -moz-appearance: textfield;\n\n  &::-webkit-outer-spin-button,\n  &::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 155px;\n  }\n`;\n\nexport const ProductCaloriesLabel = styled.label`\n  position: absolute;\n  top: 50%;\n  right: 14px;\n  transform: translateY(-50%);\n  color: rgba(239, 237, 232, 0.4);\n  font-feature-settings: 'clig' off, 'liga' off;\n  font-size: 12px;\n  line-height: calc(18 / 12);\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n    line-height: calc(24 / 14);\n  }\n`;\n\nexport const ProductCaloriesError = styled.span`\n  position: absolute;\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  bottom: -18px;\n  left: 0px;\n  font-feature-settings: 'clig' off, 'liga' off;\n  font-size: 10px;\n  line-height: calc(15 / 10);\n  letter-spacing: 0.12px;\n  color: #d80027;\n\n  @media screen and (min-width: 768px) {\n    font-size: 12px;\n    line-height: calc(18 / 12);\n  }\n`;\n\nexport const ProductCaloriesErrorIcon = styled.svg`\n  width: 12px;\n  height: 12px;\n  fill: #d80027;\n\n  @media screen and (min-width: 768px) {\n    width: 14px;\n    height: 14px;\n  }\n`;\n\nexport const ProductCaloriesText = styled.span`\n  color: rgba(239, 237, 232, 0.4);\n  font-feature-settings: 'clig' off, 'liga' off;\n  font-size: 12px;\n  line-height: calc(18 / 12);\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n    line-height: calc(24 / 14);\n  }\n\n  & span {\n    color: #efede8;\n  }\n`;\n\nexport const ProductCaloriesButtonsWrapper = styled.div`\n  width: 100%;\n  margin-top: 8px;\n  display: flex;\n  justify-content: space-between;\n  gap: 14px;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 40px;\n    justify-content: flex-start;\n    gap: 16px;\n  }\n`;\n\nexport const ProductCaloriesAddButton = styled.button`\n  display: flex;\n  padding: 12px 32px;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n  border: none;\n  border-radius: 12px;\n  background: #e6533c;\n  color: #efede8;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: calc(18 / 16);\n\n  @media screen and (min-width: 768px) {\n    padding-block: 14px;\n    font-size: 20px;\n    line-height: calc(24 / 20);\n  }\n\n  &:hover:not([disabled]),\n  &:focus-visible:not([disabled]) {\n    background: #ef8964;\n  }\n\n  &:disabled {\n    color: rgba(239, 237, 232, 0.6);\n    cursor: not-allowed;\n  }\n`;\n\nexport const ProductCaloriesCancelButton = styled(ProductCaloriesAddButton)`\n  padding-inline: 36px;\n  border-radius: 12px;\n  background: transparent;\n  border: 1px solid rgba(239, 237, 232, 0.3);\n\n  @media screen and (min-width: 768px) {\n    padding-inline: 40px;\n  }\n\n  &:hover:not([disabled]),\n  &:focus-visible:not([disabled]) {\n    border-color: #e6533c;\n    background: transparent;\n  }\n`;\n","import { useFormik } from 'formik';\nimport format from 'date-fns/format';\nimport { addProductSchema } from 'helpers/schemas/addProductSchema';\nimport {\n  ProductCaloriesAddButton,\n  ProductCaloriesButtonsWrapper,\n  ProductCaloriesCancelButton,\n  ProductCaloriesError,\n  ProductCaloriesErrorIcon,\n  ProductCaloriesField,\n  ProductCaloriesFieldWrapper,\n  ProductCaloriesLabel,\n  ProductCaloriesText,\n  ProductFormFieldsWrapper,\n  ProductNameField,\n  ProductStyledForm,\n} from './AddProductForm.styled';\nimport sprite from '../../assets/images/sprite.svg';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectError,\n  selectIsLoading,\n  selectProducts,\n} from 'redux/api/apiSelectors';\nimport { addProduct } from 'redux/api/apiOperations';\nimport Loader from 'components/Loader';\n\nconst AddProductForm = ({ productId, closeModal, onSuccess }) => {\n  const products = useSelector(selectProducts);\n  const product = products.result.find(product => product._id === productId);\n  const error = useSelector(selectError);\n  const isLoading = useSelector(selectIsLoading);\n  const dispatch = useDispatch();\n\n  const formik = useFormik({\n    initialValues: { amount: '' },\n    validationSchema: addProductSchema,\n    onSubmit: ({ amount }) => handleSubmit(amount),\n  });\n\n  const calculateCalories = () => {\n    const calories = (formik.values.amount * product.calories) / 100;\n    return Math.round(calories);\n  };\n\n  const handleSubmit = async amount => {\n    const data = {\n      productId: productId,\n      date: format(Date.now(), 'dd-MM-yyyy'),\n      weightConsumed: amount,\n      caloriesConsumed: calculateCalories(),\n    };\n\n    await dispatch(addProduct(data)).unwrap();\n\n    if (!isLoading && !error) {\n      onSuccess(calculateCalories());\n    }\n  };\n\n  return (\n    <>\n      <ProductStyledForm onSubmit={formik.handleSubmit}>\n        {isLoading && <Loader />}\n        <ProductFormFieldsWrapper>\n          <ProductNameField type=\"text\" defaultValue={product.title} disabled />\n          <ProductCaloriesFieldWrapper>\n            <ProductCaloriesLabel htmlFor=\"amount\">grams</ProductCaloriesLabel>\n            <ProductCaloriesField\n              type=\"number\"\n              id=\"amount\"\n              name=\"amount\"\n              placeholder=\"0\"\n              required\n              autoFocus\n              value={formik.values.amount}\n              onBlur={formik.handleBlur}\n              onChange={formik.handleChange}\n            />\n          </ProductCaloriesFieldWrapper>\n          {formik.touched.amount && formik.errors.amount && (\n            <ProductCaloriesError>\n              <ProductCaloriesErrorIcon>\n                <use href={`${sprite}#error`}></use>\n              </ProductCaloriesErrorIcon>\n              {formik.errors.amount}\n            </ProductCaloriesError>\n          )}\n        </ProductFormFieldsWrapper>\n        <ProductCaloriesText>\n          Calories: <span>{calculateCalories()}</span>\n        </ProductCaloriesText>\n        <ProductCaloriesButtonsWrapper>\n          <ProductCaloriesAddButton\n            type=\"submit\"\n            disabled={!(formik.isValid && formik.dirty)}\n          >\n            Add to diary\n          </ProductCaloriesAddButton>\n          <ProductCaloriesCancelButton type=\"button\" onClick={closeModal}>\n            Cancel\n          </ProductCaloriesCancelButton>\n        </ProductCaloriesButtonsWrapper>\n      </ProductStyledForm>\n    </>\n  );\n};\n\nexport default AddProductForm;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nimport avocadoImage from '../../../assets/images/avocado_1x.png';\n\nexport const DivSuccess = styled.div`\n  display: flex;\n  flex-direction: column;   \n  width: 157px;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const DivImg = styled.div`\n  background: url(${avocadoImage}) no-repeat center center;\n  background-size: cover;\n  display: inline-block;\n  width: 123px;\n  height: 84px;\n  margin-bottom: 16px;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 32px;\n  }\n`;\n\nexport const TitleH2 = styled.h2` \n  color: #EFEDE8;\n  font-size: 24px;\n  font-weight: 700;\n  line-height: 1.33;\n  margin-bottom: 16px;\n`;\n\nexport const DivCalories = styled.div`\ndisplay: flex;\n  justify-content: center;  \n  gap: 8px;\n  margin-bottom: 24px;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 32px;\n  }\n`;\n\nexport const CaloriesP = styled.p`  \n  color: rgba(239, 237, 232, 0.30);\n  font-size: 14px;\n  line-height: 1.3;\n`;\n\nexport const ValueCalories = styled.p`\n  color: #E6533C;\n  font-size: 14px;\n  line-height: 1.3;\n`;\n\nexport const ButtonAdd = styled.button`\n  width: 157px;\n  padding: 12px 32px;\n  margin-bottom: 16px;\n  border: none;\n  color:  white;\n  font-size: 16px;\n  font-weight: 500;\n  border-radius: 12px;\n  background: #E6533C;\n  line-height: 1.13;\n  transition:    \n    background 300ms ease-in-out;\n  :hover {    \n    background:  #EF8964;\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 14px 32px;\n    line-height: 1.5;\n  }\n`;\n\nexport const DivLink = styled(Link)`\n  display: flex;\n  justify-content: center; \n  gap: 8px;\n\n`;\n\nexport const LinkText = styled.p`\n  color: rgba(239, 237, 232, 0.30);\n  font-size: 14px;\n  line-height: 1.29; \n  \n  transition: color 300ms ease-in-out;\n`;","import PropTypes from 'prop-types';\n\nimport {\n  DivSuccess,\n  DivImg,\n  TitleH2,\n  DivCalories,\n  CaloriesP,\n  ValueCalories,\n  ButtonAdd,\n  DivLink,\n  LinkText,\n} from './AddProductSuccess.styled';\n\nimport sprite from '../../../assets/images/sprite.svg';\n\n const AddProductSuccess = ({ onClose, calculateCalories }) => {\n\n  return (\n    <DivSuccess>\n      <DivImg></DivImg>\n\n      <TitleH2>Well Done</TitleH2>\n\n      <DivCalories>\n        <CaloriesP>Calories:</CaloriesP>\n\n        <ValueCalories>{calculateCalories}</ValueCalories>\n      </DivCalories>\n\n      <ButtonAdd onClick={onClose}>Next product</ButtonAdd>\n\n      <DivLink to=\"/diary\">\n        <LinkText>To the diary</LinkText>\n\n        <svg width=\"16\" height=\"16\">\n          <use href={sprite + '#arrow_gray'}></use>\n        </svg>\n      </DivLink>\n    </DivSuccess>\n  );\n}\nexport default AddProductSuccess;\n\nAddProductSuccess.propTypes = {\n  totalCalories: PropTypes.number,\n  onClose: PropTypes.func.isRequired,\n};","import PropTypes from 'prop-types';\nimport sprite from 'assets/images/sprite.svg';\n\nimport { useSelector } from 'react-redux';\nimport { selectUser } from 'redux/auth/authSelectors';\n\nimport {\n  ProductsCard,\n  ProductsCardStatus,\n  ProductsCardDiet,\n  ProductsCardDietText,\n  ProductsCardStatusCount,\n  ProductsCardStatusCountTrue,\n  ProductsCardStatusAdd,\n  ProductsCardTitle,\n  ProductsCardInfoList,\n  ProductsCardInfoItem,\n  ProductsCardInfoValue,\n  IconAfterAdd,\n  IconBeforeTitle,\n} from './ProductsItem.styled';\nimport BasicModalWindow from 'components/BasicModalWindow/BasicModalWindow';\nimport AddProductForm from 'components/AddProductForm';\nimport AddProductSuccess from '../AddProductSuccess/AddProductSuccess';\nimport { useState } from 'react';\n\nexport const ProductsItem = ({ product, color }) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isProductAdded, setIsProductAdded] = useState(false);\n  const [totalCalories, setTotalCalories] = useState(0);\n  const data = useSelector(selectUser);\n  const bloodType = data?.profileData?.blood;\n\n  const toggleModal = () => {\n    setIsModalOpen(prev => !prev);\n    setIsProductAdded(false);\n    setTotalCalories(0);\n  };\n\n  const onAddedSuccessfully = calories => {\n    setTotalCalories(calories);\n    setIsProductAdded(true);\n  };\n\n  return (\n    <ProductsCard>\n      <ProductsCardStatus>\n        <ProductsCardDiet>\n          <ProductsCardDietText>DIET</ProductsCardDietText>\n        </ProductsCardDiet>\n        <ProductsCardStatusCount>\n          <ProductsCardStatusCountTrue\n            isRecommended={product.groupBloodNotAllowed[bloodType]}\n          >\n            {product.groupBloodNotAllowed[bloodType]\n              ? 'Not recommended'\n              : 'Recommended'}\n          </ProductsCardStatusCountTrue>\n\n          <ProductsCardStatusAdd onClick={toggleModal} type=\"button\">\n            Add\n            <IconAfterAdd>\n              <use href={`${sprite}#icon-arrow`} />\n            </IconAfterAdd>\n          </ProductsCardStatusAdd>\n        </ProductsCardStatusCount>\n      </ProductsCardStatus>\n\n      <ProductsCardTitle>\n        <IconBeforeTitle>\n          <use href={`${sprite}#icon-icon`} />\n        </IconBeforeTitle>\n        {product.title}\n      </ProductsCardTitle>\n\n      <ProductsCardInfoList>\n        <ProductsCardInfoItem>\n          Calories:{' '}\n          <ProductsCardInfoValue>\n            {product.calories || '999'}\n          </ProductsCardInfoValue>\n        </ProductsCardInfoItem>\n        <ProductsCardInfoItem>\n          Category:{' '}\n          <ProductsCardInfoValue>\n            {product.category || '999'}\n          </ProductsCardInfoValue>\n        </ProductsCardInfoItem>\n        <ProductsCardInfoItem>\n          Weight:{' '}\n          <ProductsCardInfoValue>\n            {product.weight || '300'}\n          </ProductsCardInfoValue>\n        </ProductsCardInfoItem>\n      </ProductsCardInfoList>\n\n      {isModalOpen && (\n        <BasicModalWindow isOpenModalToggle={toggleModal}>\n          {isProductAdded ? (\n            <AddProductSuccess\n              key={'prodSuccess'}\n              onClose={toggleModal}\n              totalCalories={totalCalories}\n            />\n          ) : (\n            <AddProductForm\n              key={'addProd'}\n              productId={product._id}\n              closeModal={toggleModal}\n              onSuccess={onAddedSuccessfully}\n            />\n          )}\n        </BasicModalWindow>\n      )}\n    </ProductsCard>\n  );\n};\n\nProductsItem.propTypes = {\n  product: PropTypes.object.isRequired,\n  isOpenModalToggle: PropTypes.func,\n};\n","import styled from '@emotion/styled';\n\nexport const ProductsListUl = styled.ul`\n  @media screen and (min-width: 375px) {\n    display: flex;\n    gap: 20px;\n    flex-direction: column;\n    max-width: 100%;\n    margin-bottom: 16px;\n  }\n\n  @media screen and (min-width: 768px) {\n    overflow-y: scroll;\n    gap: 16px;\n    flex-wrap: wrap;\n    flex-direction: row;\n    max-height: 660px;\n    padding-right: 16px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    max-width: 860px;\n    max-height: 487px;\n    margin-top: 32px;\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const NotResultWrapper = styled.div`\n  @media screen and (min-width: 375px) {\n    display: inline-block;\n    margin-top: 24px;\n  }\n  @media screen and (min-width: 768px) {\n    margin-top: 92px;\n  }\n`;\n\nexport const NotResultText = styled.p`\n  color: rgba(239, 237, 232, 0.3);\n  @media screen and (min-width: 375px) {\n    font-size: 14px;\n    line-height: 18px;\n    font-weight: 400;\n    font-style: normal;\n    display: inline-block;\n    width: 335px;\n    margin-bottom: 16px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 580px;\n    font-size: 16px;\n    line-height: 24px;\n  }\n`;\n\nexport const NotResultOrangeText = styled.span`\n  color: #e6533c;\n  @media screen and (min-width: 375px) {\n    font-size: 14px;\n    line-height: 18px;\n    display: inline-block;\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    line-height: 24px;\n  }\n`;\n\nexport const NotResultOrangeTextBlock = styled.p`\n  color: #e6533c;\n  @media screen and (min-width: 375px) {\n    font-size: 14px;\n    line-height: 18px;\n    display: inline-block;\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    line-height: 24px;\n    display: block;\n  }\n`;\n","import {\n  NotResultOrangeText,\n  NotResultOrangeTextBlock,\n  NotResultText,\n  NotResultWrapper,\n} from './SearchNotResult.styled';\n\nexport const SearchNotResult = () => {\n  return (\n    <NotResultWrapper>\n      <NotResultText>\n        <NotResultOrangeText>Sorry, no results were found</NotResultOrangeText>{' '}\n        for the product filters you selected. You may want to consider other\n        search options to find the product you want. Our range is wide and you\n        have the opportunity to find more options that suit your needs.\n      </NotResultText>\n      <NotResultOrangeTextBlock>\n        Try changing the search parameters.\n      </NotResultOrangeTextBlock>\n    </NotResultWrapper>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport { useInView } from 'react-intersection-observer';\nimport { selectProducts } from 'redux/api/apiSelectors';\nimport { fetchProducts } from 'redux/api/apiOperations';\n\nimport { ProductsItem } from '../ProductsItem/ProductsItem';\nimport { ProductsListUl } from './ProductsList.styled';\nimport { SearchNotResult } from '../SearchNotResult/SearchNotResult';\n\nconst ProductsList = ({\n  changePage,\n  filters,\n  pageNumber,\n  isNewRequest,\n  resetIsNewRequest,\n}) => {\n  const dispatch = useDispatch();\n  const [products, setProducts] = useState([]);\n\n  const { result: productsList, total_results: productsAmount } =\n    useSelector(selectProducts);\n\n  const { ref } = useInView({\n    onChange: inView => {\n      if (inView) {\n        changePage();\n      }\n    },\n    rootMargin: '1000px',\n  });\n\n  useEffect(() => {\n    dispatch(fetchProducts({ ...filters, page: pageNumber }));\n  }, [dispatch, filters, pageNumber]);\n\n  useEffect(() => {\n    if (pageNumber === 1 && isNewRequest) {\n      setProducts([]);\n      resetIsNewRequest();\n    }\n  }, [isNewRequest, pageNumber, resetIsNewRequest]);\n\n  useEffect(() => {\n    if (productsList) {\n      setProducts(prev => [...prev, ...productsList]);\n    }\n  }, [productsList]);\n\n  return (\n    <>\n      {products.length > 0 ? (\n        <ProductsListUl id=\"products-list\">\n          {products.map(product => (\n            <ProductsItem key={product.title} product={product} />\n          ))}\n          <div ref={products.length < productsAmount ? ref : null}></div>\n        </ProductsListUl>\n      ) : (\n        <SearchNotResult />\n      )}\n    </>\n  );\n};\n\nexport default ProductsList;\n","import * as React from 'react';\nimport type { InViewHookResponse, IntersectionOptions } from './index';\nimport { observe } from './observe';\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\n/**\n * React Hooks make it easy to monitor the `inView` state of your components. Call\n * the `useInView` hook with the (optional) [options](#options) you need. It will\n * return an array containing a `ref`, the `inView` status and the current\n * [`entry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry).\n * Assign the `ref` to the DOM element you want to monitor, and the hook will\n * report the status.\n *\n * @example\n * ```jsx\n * import React from 'react';\n * import { useInView } from 'react-intersection-observer';\n *\n * const Component = () => {\n *   const { ref, inView, entry } = useInView({\n *       threshold: 0,\n *   });\n *\n *   return (\n *     <div ref={ref}>\n *       <h2>{`Header inside viewport ${inView}.`}</h2>\n *     </div>\n *   );\n * };\n * ```\n */\nexport function useInView({\n  threshold,\n  delay,\n  trackVisibility,\n  rootMargin,\n  root,\n  triggerOnce,\n  skip,\n  initialInView,\n  fallbackInView,\n  onChange,\n}: IntersectionOptions = {}): InViewHookResponse {\n  const [ref, setRef] = React.useState<Element | null>(null);\n  const callback = React.useRef<IntersectionOptions['onChange']>();\n  const [state, setState] = React.useState<State>({\n    inView: !!initialInView,\n    entry: undefined,\n  });\n\n  // Store the onChange callback in a `ref`, so we can access the latest instance\n  // inside the `useEffect`, but without triggering a rerender.\n  callback.current = onChange;\n\n  React.useEffect(\n    () => {\n      // Ensure we have node ref, and that we shouldn't skip observing\n      if (skip || !ref) return;\n\n      let unobserve: (() => void) | undefined;\n      unobserve = observe(\n        ref,\n        (inView, entry) => {\n          setState({\n            inView,\n            entry,\n          });\n          if (callback.current) callback.current(inView, entry);\n\n          if (entry.isIntersecting && triggerOnce && unobserve) {\n            // If it should only trigger once, unobserve the element after it's inView\n            unobserve();\n            unobserve = undefined;\n          }\n        },\n        {\n          root,\n          rootMargin,\n          threshold,\n          // @ts-ignore\n          trackVisibility,\n          // @ts-ignore\n          delay,\n        },\n        fallbackInView,\n      );\n\n      return () => {\n        if (unobserve) {\n          unobserve();\n        }\n      };\n    },\n    // We break the rule here, because we aren't including the actual `threshold` variable\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      // If the threshold is an array, convert it to a string, so it won't change between renders.\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      Array.isArray(threshold) ? threshold.toString() : threshold,\n      ref,\n      root,\n      rootMargin,\n      triggerOnce,\n      skip,\n      trackVisibility,\n      fallbackInView,\n      delay,\n    ],\n  );\n\n  const entryTarget = state.entry?.target;\n  const previousEntryTarget = React.useRef<Element>();\n  if (\n    !ref &&\n    entryTarget &&\n    !triggerOnce &&\n    !skip &&\n    previousEntryTarget.current !== entryTarget\n  ) {\n    // If we don't have a node ref, then reset the state (unless the hook is set to only `triggerOnce` or `skip`)\n    // This ensures we correctly reflect the current state - If you aren't observing anything, then nothing is inView\n    previousEntryTarget.current = entryTarget;\n    setState({\n      inView: !!initialInView,\n      entry: undefined,\n    });\n  }\n\n  const result = [setRef, state.inView, state.entry] as InViewHookResponse;\n\n  // Support object destructuring, by adding the specific values.\n  result.ref = result[0];\n  result.inView = result[1];\n  result.entry = result[2];\n\n  return result;\n}\n","import styled from '@emotion/styled';\nimport { products_1x } from 'utils/background';\nimport { products_2x } from 'utils/background';\n\nexport const ProductsWrapper = styled.div`\n  padding-top: 62px;\n  padding-bottom: 80px;\n  width: 100%;\n  @media screen and (min-width: 768px) {\n    padding-bottom: 48px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding-top: 85px;\n    padding-bottom: 81px;\n    background: image-set(url(${products_1x}) 1x, url(${products_2x}) 2x);\n    background-repeat: no-repeat;\n    background-position: top 85px right;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  min-width: 280px;\n  @media screen and (min-width: 375px) {\n  }\n\n  @media screen and (min-width: 768px) {\n  }\n\n  @media screen and (min-width: 1440px) {\n    /* background: image-set(url(${products_1x}) 1x, url(${products_2x}) 2x);\n    background-repeat: no-repeat;\n    background-position: right; */\n    /* padding-top: 68px; */\n    position: relative;\n    min-height: 681px;\n    padding-inline: 64px;\n  }\n`;\n","import Container from 'components/Container';\nimport ProductsFilter from 'components/products/ProductsFilter';\nimport ProductsList from 'components/products/ProductsList/ProductsList';\nimport { ProductsWrapper, Wrapper } from './Products.styled';\nimport TitlePage from 'components/TitlePage';\nimport { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectIsLoading } from 'redux/api/apiSelectors';\nimport Loader from 'components/Loader';\n\nconst ProductsPage = () => {\n  const [pageNumber, setPageNumber] = useState(1);\n  const [filters, setFilters] = useState({});\n  const [isNewRequest, setIsNewRequest] = useState(false);\n  const isLoading = useSelector(selectIsLoading);\n\n  const handleChangePage = () => {\n    setPageNumber(prev => prev + 1);\n    setIsNewRequest(false);\n  };\n\n  const resetIsNewRequest = () => {\n    setIsNewRequest(false);\n  };\n\n  const handleSetFilters = values => {\n    setIsNewRequest(true);\n    setPageNumber(1);\n    setFilters({ ...values });\n  };\n\n  return (\n    <ProductsWrapper>\n      {isLoading && <Loader />}\n      <Container>\n        <Wrapper>\n          <TitlePage title=\"Products\" />\n          <ProductsFilter handleSetFilters={handleSetFilters} />\n          <ProductsList\n            changePage={handleChangePage}\n            filters={filters}\n            pageNumber={pageNumber}\n            isNewRequest={isNewRequest}\n            resetIsNewRequest={resetIsNewRequest}\n          />\n        </Wrapper>\n      </Container>\n    </ProductsWrapper>\n  );\n};\n\nexport default ProductsPage;\n","export const selectCategories = state => state.api.categories; // []\n\nexport const selectExercises = state => state.api.exercises; // { result: [], total_results: number }\n\nexport const selectFilters = state => state.api.filters; // { result: [], total_results: number }\n\nexport const selectProducts = state => state.api.products; // { result: [], total_results: number }\n\nexport const selectIsLoading = state => state.api.isLoading; // boolean\n\nexport const selectError = state => state.api.error; // { message: string }\n\nexport const selectCalculate = state => state.api.calculate; // {}\n\nexport const selectDiary = state => state.api.diary; // {}\n\nexport const selectDiaryUpdated = state => state.api.diaryUpdated; // boolean\n\nexport const selectStatistics = state => state.api.statistics; // {}\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}"],"names":["BasicWindow","styled","div","_templateObject","_taggedTemplateLiteral","Modal","_templateObject2","_ref","children","some","child","key","ButtonClouse","button","_templateObject3","SvgClouse","svg","_templateObject4","isOpenModalToggle","useEffect","closeESC","e","code","document","addEventListener","removeEventListener","modal","_jsx","onClick","currentTarget","target","_jsxs","href","sprite","createPortal","querySelector","ContainerWrapper","Title","h1","title","ProdFilterWrapper","ProdFilterForm","form","ProdFilterTitle","p","ProdFilterSearchBox","ProdFilterSearchField","input","_templateObject5","ProdSearchCancelBtn","_templateObject6","ProdSearchIcon","_templateObject7","ProdSearchSubmitBtn","_templateObject8","ProdFilterSelectsWrapper","_templateObject9","ProdFilterCategorySlct","select","_templateObject10","ProdFilterRecSlct","_templateObject11","handleSetFilters","dispatch","useDispatch","productCategories","useSelector","selectCategories","formik","useFormik","initialValues","category","recommended","onSubmit","values","handleSubmit","fetchCategories","arguments","length","undefined","filledValues","Object","entries","filter","_ref2","_ref3","_slicedToArray","payload","fromEntries","handleChange","value","prePayload","_objectSpread","_defineProperty","name","_Fragment","type","placeholder","onChange","setFieldValue","concat","map","observerMap","Map","RootIds","WeakMap","rootId","unsupportedValue","optionsToId","options","keys","sort","root","has","set","toString","get","observe","element","callback","fallbackInView","window","IntersectionObserver","bounds","getBoundingClientRect","isIntersecting","intersectionRatio","threshold","time","boundingClientRect","intersectionRect","rootBounds","_createObserver","id","instance","thresholds","elements","observer","forEach","entry","_a","inView","trackVisibility","isVisible","Array","isArray","createObserver","callbacks","push","splice","indexOf","delete","unobserve","size","disconnect","React","ProductsCard","li","ProductsCardStatus","ProductsCardDiet","span","ProductsCardDietText","ProductsCardStatusCount","ProductsCardStatusCountTrue","props","isRecommended","ProductsCardStatusAdd","IconAfterAdd","IconBeforeTitle","ProductsCardTitle","h4","ProductsCardInfoList","ul","ProductsCardInfoItem","_templateObject12","ProductsCardInfoValue","_templateObject13","addProductSchema","Yup","amount","moreThan","required","ProductStyledForm","ProductFormFieldsWrapper","ProductNameField","ProductCaloriesFieldWrapper","ProductCaloriesField","ProductCaloriesLabel","label","ProductCaloriesError","ProductCaloriesErrorIcon","ProductCaloriesText","ProductCaloriesButtonsWrapper","ProductCaloriesAddButton","ProductCaloriesCancelButton","productId","closeModal","onSuccess","product","selectProducts","result","find","_id","error","selectError","isLoading","selectIsLoading","validationSchema","calculateCalories","calories","Math","round","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","wrap","_context","prev","next","date","format","Date","now","weightConsumed","caloriesConsumed","addProduct","unwrap","stop","_x","apply","Loader","defaultValue","disabled","htmlFor","autoFocus","onBlur","handleBlur","touched","errors","isValid","dirty","DivSuccess","DivImg","TitleH2","h2","DivCalories","CaloriesP","ValueCalories","ButtonAdd","DivLink","Link","LinkText","onClose","to","width","height","ProductsItem","_data$profileData","_useState","color","useState","_useState2","isModalOpen","setIsModalOpen","_useState3","_useState4","isProductAdded","setIsProductAdded","_useState5","_useState6","totalCalories","setTotalCalories","selectUser","bloodType","profileData","blood","toggleModal","groupBloodNotAllowed","weight","BasicModalWindow","AddProductSuccess","AddProductForm","ProductsListUl","NotResultWrapper","NotResultText","NotResultOrangeText","NotResultOrangeTextBlock","SearchNotResult","changePage","filters","pageNumber","isNewRequest","resetIsNewRequest","products","setProducts","_useSelector","productsList","productsAmount","total_results","_useInView","delay","rootMargin","triggerOnce","skip","initialInView","_React2$useState","React2","_React2$useState2","ref","setRef","_React2$useState3","_React2$useState4","state","setState","current","entryTarget","previousEntryTarget","useInView","fetchProducts","page","_toConsumableArray","ProductsWrapper","products_1x","products_2x","Wrapper","setPageNumber","setFilters","setIsNewRequest","Container","TitlePage","ProductsFilter","ProductsList","api","categories","selectExercises","exercises","selectFilters","selectCalculate","calculate","selectDiary","diary","selectDiaryUpdated","diaryUpdated","selectStatistics","statistics","_objectWithoutProperties","source","excluded","i","sourceKeys","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call"],"sourceRoot":""}
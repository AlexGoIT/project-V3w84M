{"version":3,"file":"static/js/498.31650a45.chunk.js","mappings":"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","sources":["components/BasicModalWindow/BasicModalWindow.styled.js","components/BasicModalWindow/BasicModalWindow.jsx","components/Container/Container.jsx","components/Container/Container.styled.js","components/TitlePage/TitlePage.styled.js","components/TitlePage/TitlePage.jsx","components/ExercisesCategories/ExercisesCategories.styled.js","components/ExercisesCategories/ExercisesCategories.jsx","pages/Exercises/Exercises.styled.js","components/ExercisesItem/ExercisesItem.styled.js","components/AddExerciseForm/ExersiceModalWindowList.styled.js","components/AddExerciseForm/ExersiceModalWindowList.jsx","../node_modules/react-countdown-circle-timer/lib/index.module.js","components/AddExerciseForm/Timer.styled.js","components/AddExerciseForm/Timer.jsx","components/AddExerciseForm/AddExerciseForm.styled.js","components/AddExerciseForm/AddExerciseForm.jsx","components/AddExerciseSuccess/AddExerciseSuccess.styled.js","components/AddExerciseSuccess/AddExerciseSuccess.jsx","components/ExercisesItem/ExercisesItem.jsx","pages/Exercises/Exercises.jsx","redux/api/apiSelectors.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const BasicWindow = styled.div`\n  width: 100%;\n  height: 100%;\n  background: rgba(04, 04, 04, 0.4);\n  position: absolute;\n  top: 0;\n  left: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 200;\n\n  @media screen and (min-width: 768px) {\n    position: fixed;\n  }\n`;\n\nexport const Modal = styled.div`\n  border-radius: 12px;\n  border: 1px solid rgba(239, 237, 232, 0.2);\n  background: #10100f;\n  position: absolute;\n  top: 5dvh;\n  ${({ children }) => {\n    if (children.some(child => child.key === 'prodSuccess')) {\n      return 'padding: 48px 89px;   @media screen and (min-width: 768px) {padding: 64px 136px;}';\n    }\n    if (children.some(child => child.key === 'addProd')) {\n      return `padding: 48px 24px;   @media screen and (min-width: 768px) {padding: 48px 32px;}`;\n    }\n    if (children.some(child => child.key === 'exercSuccess')) {\n      return `padding: 48px 89px;   @media screen and (min-width: 768px) {padding: 64px 134px;}`;\n    }\n    if (children.some(child => child.key === 'addExerc')) {\n      return `padding: 48px 16px;   @media screen and (min-width: 768px) {padding: 48px 32px;}`;\n    }\n  }};\n\n  @media screen and (min-width: 768px) {\n    position: relative;\n    top: 0;\n  }\n`;\n\nexport const ButtonClouse = styled.button`\n  width: 22px;\n  height: 22px;\n\n  border: none;\n  background: inherit;\n  position: absolute;\n  top: 14px;\n  right: 14px;\n  @media screen and (min-width: 768px) {\n    width: 26px;\n    height: 26px;\n  }\n`;\n\nexport const SvgClouse = styled.svg`\n  width: 20px;\n  height: 20px;\n\n  stroke: var(--white-color);\n`;\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\n\nimport {\n  BasicWindow,\n  Modal,\n  ButtonClouse,\n  SvgClouse,\n} from './BasicModalWindow.styled';\n\nimport sprite from '../../assets/images/sprite.svg';\n\nconst BasicModalWindow = ({ children, isOpenModalToggle }) => {\n  useEffect(() => {\n    const closeESC = e => {\n      if (e.code === 'Escape') {\n        isOpenModalToggle();\n      }\n    };\n    document.addEventListener('keydown', closeESC);\n    return () => {\n      document.removeEventListener('keydown', closeESC);\n    };\n  }, [isOpenModalToggle]);\n\n  const handleClickBackground = e => {\n    if (e.currentTarget === e.target) {\n      isOpenModalToggle();\n    }\n  };\n\n  const modal = (\n    <BasicWindow onClick={handleClickBackground}>\n      <Modal>\n        <ButtonClouse onClick={() => isOpenModalToggle()}>\n          <SvgClouse>\n            <use href={sprite + '#x'}></use>\n          </SvgClouse>\n        </ButtonClouse>\n\n        {children}\n      </Modal>\n    </BasicWindow>\n  );\n\n  return createPortal(modal, document.querySelector('#root_modal'));\n};\n\nexport default BasicModalWindow;\n\nBasicModalWindow.propTypes = {\n  children: PropTypes.any,\n  isOpenModalToggle: PropTypes.func,\n};\n","import { ContainerWrapper } from './Container.styled';\n\nconst Container = ({ children }) => {\n  return <ContainerWrapper>{children}</ContainerWrapper>;\n};\n\nexport default Container;\n","import styled from '@emotion/styled';\n\nexport const ContainerWrapper = styled.div`\n  width: 100%;\n  margin-inline: auto;\n  padding-inline: 20px;\n  /* padding-top: 61px; */\n\n  @media screen and (min-width: 375px) {\n    width: 375px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 768px;\n    padding-inline: 32px;\n    /* padding-top: 84px; */\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 1440px;\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const Title = styled.h1`\n  margin-top: 40px;\n  font-family: Roboto;\n  color: #efede8;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 1.375;\n\n  @media screen and (min-width: 375px) {\n    margin-top: 40px;\n    font-size: 24px;\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-top: 72px;\n    font-size: 32px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Title } from './TitlePage.styled';\n\nconst TitlePage = ({ title }) => {\n  return <Title>{title}</Title>;\n};\n\nexport default TitlePage;\n\nTitlePage.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const CategoriesFieldset = styled.fieldset`\n  margin-top: 20px;\n  display: flex;\n  font-size: 14px;\n  gap: 28px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    gap: 32px;\n  }\n`;\n\nexport const CategoryInput = styled.input`\n  display: none;\n`;\n\nexport const CategoryDiv = styled.div`\n  position: relative;\n`;\n\nexport const CategoryLabel = styled.label`\n  color: rgba(239, 237, 232, 0.4);\n  cursor: pointer;\n\n  ::before {\n    content: '';\n    position: absolute;\n    bottom: -8px;\n    left: 0;\n    width: 100%;\n    height: 4px;\n    border-radius: 2px;\n    background: #ef8964;\n    background-color: transparent;\n  }\n\n  ${({ selected }) =>\n    selected &&\n    `color: #EFEDE8;\n    \n    ::before {\n      background-color: #EF8964; \n    }\n  `}\n\n  &:hover {\n    color: #efede8;\n\n    ::before {\n      background-color: #ef8964;\n    }\n  }\n`;\n","import { useEffect, useRef } from 'react';\nimport { useNavigate, useResolvedPath } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport {\n  CategoriesFieldset,\n  CategoryDiv,\n  CategoryLabel,\n  CategoryInput,\n} from './ExercisesCategories.styled';\n\nconst EXERCISES_CATEGORY = {\n  BODY_PARTS: 'bodyPart',\n  MUSCLES: 'target',\n  EQUIPMENT: 'equipment',\n};\n\nexport default function ExercisesCategories({ category, setCategory }) {\n  const path = useResolvedPath();\n  const navigate = useNavigate();\n  const currentPathNameRef = useRef(path.pathname);\n\n  useEffect(() => {\n    if (currentPathNameRef.current !== '/exercises') {\n      navigate('./');\n    }\n  }, [category, navigate]);\n\n  useEffect(() => {\n    currentPathNameRef.current = path.pathname;\n  }, [path.pathname]);\n\n  const handleOptionChange = event => {\n    setCategory(event.target.value);\n  };\n\n  return (\n    <CategoriesFieldset>\n      <CategoryDiv>\n        <CategoryLabel selected={category === EXERCISES_CATEGORY.BODY_PARTS}>\n          <CategoryInput\n            type=\"radio\"\n            value={EXERCISES_CATEGORY.BODY_PARTS}\n            checked={category === EXERCISES_CATEGORY.BODY_PARTS}\n            onChange={handleOptionChange}\n          />\n          Body parts\n        </CategoryLabel>\n      </CategoryDiv>\n\n      <CategoryDiv>\n        <CategoryLabel selected={category === EXERCISES_CATEGORY.MUSCLES}>\n          <CategoryInput\n            type=\"radio\"\n            value={EXERCISES_CATEGORY.MUSCLES}\n            checked={category === EXERCISES_CATEGORY.MUSCLES}\n            onChange={handleOptionChange}\n          />\n          Muscles\n        </CategoryLabel>\n      </CategoryDiv>\n\n      <CategoryDiv>\n        <CategoryLabel selected={category === EXERCISES_CATEGORY.EQUIPMENT}>\n          <CategoryInput\n            type=\"radio\"\n            value={EXERCISES_CATEGORY.EQUIPMENT}\n            checked={category === EXERCISES_CATEGORY.EQUIPMENT}\n            onChange={handleOptionChange}\n          />\n          Equipment\n        </CategoryLabel>\n      </CategoryDiv>\n    </CategoriesFieldset>\n  );\n}\n\nExercisesCategories.propTypes = {\n  category: PropTypes.string.isRequired,\n  setCategory: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\n\nimport { exercises_background_1x } from 'utils/background';\nimport { exercises_background_2x} from 'utils/background';\n\nexport const ContentDiv = styled.div`\n  position: relative;\n  margin-inline: auto;\n`;\n\nexport const ExercisesWrapper = styled.div`  \n  padding-top: 62px;\n  padding-bottom: 80px;  \n  width: 100%;\n    @media screen and (min-width: 768px) {   \n      padding-bottom: 66px;  \n  }\n\n  @media screen and (min-width: 1440px) {      \n    padding-top: 85px;\n    padding-bottom: 81px;   \n    background: image-set(url(${exercises_background_1x}) 1x, url(${exercises_background_2x}) 2x);\n    background-repeat: no-repeat;\n    background-position: top 85px right;\n  }\n`;\n\nexport const WrapperTitleCategoriesDiv = styled.div`\n  margin-bottom: 48px;\n  display: flex;\n  flex-direction: column;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 64px;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: baseline;\n    margin-bottom: ${props => props.margin && '32px'};\n    margin-top: ${props => props.margin && '72px'};\n  }\n\n  @media screen and (min-width: 1440px) {\n    margin-bottom: 64px;\n    margin-bottom: ${props => props.margin && '32px'};\n    padding-inline: 96px;\n  }\n`;","import styled from '@emotion/styled';\n\nexport const ExercisesCard = styled.li`\n  margin-left: 20px;\n  margin-right: 20px;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n  padding: 16px;\n  justify-content: center;\n  align-items: flex-start;\n  border-radius: 12px;\n  border: 1px solid rgba(239, 237, 232, 0.2);\n  background: rgba(239, 237, 232, 0.05);\n  box-sizing: border-box;\n\n  @media screen and (min-width: 768px) {\n    /* width: calc((100% - 16px) / 2); */\n    overflow: hidden;\n  }\n\n  @media screen and (min-width: 1440px) {\n    max-width: 405px;\n  }\n`;\nexport const ExercisesCardStatusWorkout = styled.label`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-bottom: 27px;\n  justify-content: space-between;\n`;\nexport const ExercisesCardWorkout = styled.span`\n  display: inline-flex;\n  padding: 5px 7.5px;\n  justify-content: center;\n  align-items: center;\n  border-radius: 4px;\n  background: rgba(239, 237, 232, 0.05);\n`;\nexport const ExercisesCardWorkoutText = styled.p`\n  color: #efede8;\n  font-size: 12px;\n  font-weight: 700;\n  line-height: normal;\n  text-transform: uppercase;\n`;\n\nexport const ExercisesCardStatus = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const ExercisesCardAddBtn = styled.button`\n  background: transparent;\n  border: none;\n  color: #e6533c;\n  font-size: 16px;\n  line-height: 24px;\n  padding: 0;\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    color: #efede8;\n  }\n`;\n\nexport const IconStart = styled.svg`\n  display: block;\n  width: 16px;\n  height: 16px;\n  margin-left: 8px;\n  margin-top: -3px;\n  fill: #efa082;\n  &:hover,\n  &:focus {\n    fill: #efede8;\n  }\n`;\n\nexport const IconBeforeTitle = styled.svg`\n  position: absolute;\n  width: 24px;\n  height: 24px;\n  left: 0;\n  top: calc(50% - 12px);\n  fill: #efa082;\n`;\n\nexport const ExercisesCardTitle = styled.h4`\n  position: relative;\n  font-size: 24px;\n  line-height: 1.333;\n  color: #efede8;\n\n  margin-bottom: 8px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  padding-left: 40px;\n  max-width: 100%;\n  /* &::before {\n    content: url();\n    position: absolute;\n    width: 24px;\n    height: 24px;\n    left: 0;\n    top: calc(50% - 12px);\n  } */\n`;\n\nexport const ExercisesCardInfoList = styled.ul`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  gap: 16px;\n`;\n\nexport const ExercisesCardInfoItem = styled.li`\n  display: flex;\n  flex-wrap: nowrap;\n  /* flex-direction: row; */\n  gap: 4px;\n  color: rgba(239, 237, 232, 0.4);\n  font-size: 12px;\n  line-height: 18px;\n`;\n\nexport const ExercisesCardInfoValue = styled.p`\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  color: #efede8;\n  font-size: 12px;\n  line-height: 18px;\n`;\n","import styled from 'styled-components';\n\nexport const ExersiceModalList = styled.ul`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-template-rows: 1fr 1fr;\n  gap: 8px;\n  align-items: center;\n  width: 302px;\n\n  @media screen and (min-width: 768px) {\n    width: 345px;\n    align-items: flex-start;\n  }\n`;\n\nexport const ExersiceModalLink = styled.li`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  padding: 12px 18px;\n  width: 147px;\n  justify-content: center;\n\n  gap: 4px;\n  border-radius: 12px;\n  border: 1px solid rgba(239, 237, 232, 0.2);\n  background: rgba(239, 237, 232, 0.05);\n\n  @media screen and (min-width: 768px) {\n    width: 168px;\n    align-items: flex-start;\n  }\n`;\n\nexport const ExersiceModalLinkSub = styled.p`\n  color: rgba(239, 237, 232, 0.4);\n  font-size: 12px;\n  line-height: 18px;\n`;\n\nexport const ExersiceModalLinkTitle = styled.p`\n  color: #efede8;\n  font-size: 16px;\n  font-weight: 600;\n  line-height: calc(24 / 16);\n  text-transform: capitalize;\n`;\n","import {\n  ExersiceModalLink,\n  ExersiceModalLinkSub,\n  ExersiceModalLinkTitle,\n  ExersiceModalList,\n} from './ExersiceModalWindowList.styled';\n\nconst ExersiceModalWindowList = ({ name, bodyPart, target, equipment }) => {\n  return (\n    <ExersiceModalList>\n      <ExersiceModalLink>\n        <ExersiceModalLinkSub>Name</ExersiceModalLinkSub>\n        <ExersiceModalLinkTitle>{name}</ExersiceModalLinkTitle>\n      </ExersiceModalLink>\n      <ExersiceModalLink>\n        <ExersiceModalLinkSub>Target</ExersiceModalLinkSub>\n        <ExersiceModalLinkTitle>{target}</ExersiceModalLinkTitle>\n      </ExersiceModalLink>\n      <ExersiceModalLink>\n        <ExersiceModalLinkSub>Body Part</ExersiceModalLinkSub>\n        <ExersiceModalLinkTitle>{bodyPart}</ExersiceModalLinkTitle>\n      </ExersiceModalLink>\n      <ExersiceModalLink>\n        <ExersiceModalLinkSub>Equipment</ExersiceModalLinkSub>\n        <ExersiceModalLinkTitle>{equipment}</ExersiceModalLinkTitle>\n      </ExersiceModalLink>\n    </ExersiceModalList>\n  );\n};\n\nexport default ExersiceModalWindowList;\n","import x from\"react\";import{useRef as U}from\"react\";import{useState as E,useRef as b,useCallback as q}from\"react\";import{useEffect as M,useLayoutEffect as L}from\"react\";var G=typeof window==\"undefined\"?M:L,I=({isPlaying:o,duration:e,startAt:n=0,updateInterval:t=0,onComplete:s,onUpdate:r})=>{let[i,c]=E(n),m=b(0),p=b(n),f=b(n*-1e3),u=b(null),a=b(null),h=b(null),w=g=>{let l=g/1e3;if(a.current===null){a.current=l,u.current=requestAnimationFrame(w);return}let d=l-a.current,C=m.current+d;a.current=l,m.current=C;let k=p.current+(t===0?C:(C/t|0)*t),R=p.current+C,v=typeof e==\"number\"&&R>=e;c(v?e:k),v||(u.current=requestAnimationFrame(w))},$=()=>{u.current&&cancelAnimationFrame(u.current),h.current&&clearTimeout(h.current),a.current=null},y=q(g=>{$(),m.current=0;let l=typeof g==\"number\"?g:n;p.current=l,c(l),o&&(u.current=requestAnimationFrame(w))},[o,n]);return G(()=>{if(r==null||r(i),e&&i>=e){f.current+=e*1e3;let{shouldRepeat:g=!1,delay:l=0,newStartAt:d}=(s==null?void 0:s(f.current/1e3))||{};g&&(h.current=setTimeout(()=>y(d),l*1e3))}},[i,e]),G(()=>(o&&(u.current=requestAnimationFrame(w)),$),[o,e,t]),{elapsedTime:i,reset:y}};var A=(o,e,n)=>{let t=o/2,s=e/2,r=t-s,i=2*r,c=n===\"clockwise\"?\"1,0\":\"0,1\",m=2*Math.PI*r;return{path:`m ${t},${s} a ${r},${r} 0 ${c} 0,${i} a ${r},${r} 0 ${c} 0,-${i}`,pathLength:m}},T=(o,e)=>o===0||o===e?0:typeof e==\"number\"?o-e:0,B=o=>({position:\"relative\",width:o,height:o}),P={display:\"flex\",justifyContent:\"center\",alignItems:\"center\",position:\"absolute\",left:0,top:0,width:\"100%\",height:\"100%\"};var F=(o,e,n,t,s)=>{if(t===0)return e;let r=(s?t-o:o)/t;return e+n*r},W=o=>{var e,n;return(n=(e=o.replace(/^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i,(t,s,r,i)=>`#${s}${s}${r}${r}${i}${i}`).substring(1).match(/.{2}/g))==null?void 0:e.map(t=>parseInt(t,16)))!=null?n:[]},j=(o,e)=>{var u;let{colors:n,colorsTime:t,isSmoothColorTransition:s=!0}=o;if(typeof n==\"string\")return n;let r=(u=t==null?void 0:t.findIndex((a,h)=>a>=e&&e>=t[h+1]))!=null?u:-1;if(!t||r===-1)return n[0];if(!s)return n[r];let i=t[r]-e,c=t[r]-t[r+1],m=W(n[r]),p=W(n[r+1]),f=!!o.isGrowing;return`rgb(${m.map((a,h)=>F(i,a,p[h]-a,c,f)|0).join(\",\")})`},S=o=>{let{duration:e,initialRemainingTime:n,updateInterval:t,size:s=180,strokeWidth:r=12,trailStrokeWidth:i,isPlaying:c=!1,isGrowing:m=!1,rotation:p=\"clockwise\",onComplete:f,onUpdate:u}=o,a=U(),h=Math.max(r,i!=null?i:0),{path:w,pathLength:$}=A(s,h,p),{elapsedTime:y}=I({isPlaying:c,duration:e,startAt:T(e,n),updateInterval:t,onUpdate:typeof u==\"function\"?l=>{let d=Math.ceil(e-l);d!==a.current&&(a.current=d,u(d))}:void 0,onComplete:typeof f==\"function\"?l=>{var R;let{shouldRepeat:d,delay:C,newInitialRemainingTime:k}=(R=f(l))!=null?R:{};if(d)return{shouldRepeat:d,delay:C,newStartAt:T(e,k)}}:void 0}),g=e-y;return{elapsedTime:y,path:w,pathLength:$,remainingTime:Math.ceil(g),rotation:p,size:s,stroke:j(o,g),strokeDashoffset:F(y,0,$,e,m),strokeWidth:r}};var D=o=>{let{children:e,strokeLinecap:n,trailColor:t,trailStrokeWidth:s}=o,{path:r,pathLength:i,stroke:c,strokeDashoffset:m,remainingTime:p,elapsedTime:f,size:u,strokeWidth:a}=S(o);return x.createElement(\"div\",{style:B(u)},x.createElement(\"svg\",{viewBox:`0 0 ${u} ${u}`,width:u,height:u,xmlns:\"http://www.w3.org/2000/svg\"},x.createElement(\"path\",{d:r,fill:\"none\",stroke:t!=null?t:\"#d9d9d9\",strokeWidth:s!=null?s:a}),x.createElement(\"path\",{d:r,fill:\"none\",stroke:c,strokeLinecap:n!=null?n:\"round\",strokeWidth:a,strokeDasharray:i,strokeDashoffset:m})),typeof e==\"function\"&&x.createElement(\"div\",{style:P},e({remainingTime:p,elapsedTime:f,color:c})))};D.displayName=\"CountdownCircleTimer\";export{D as CountdownCircleTimer,S as useCountdown};\n","import styled from 'styled-components';\n\nexport const TimerWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  position: relative;\n`;\n\nexport const TimerTitle = styled.h1`\n  color: rgba(239, 237, 232, 0.4);\n  font-size: 10px;\n  line-height: 1.4;\n  margin-bottom: 4px;\n`;\n\nexport const FormattedTitle = styled.p`\n  color: rgba(239, 237, 232, 0.4);\n  font-size: 10px;\n  font-weight: 400;\n  line-height: 14px;\n  margin-bottom: 4px;\n  margin-top: 4px;\n`;\n\nexport const TimerBtn = styled.button`\n  background-color: #e6533c;\n  margin-top: 14px;\n  padding: 5px;\n  border: none;\n  border-radius: 5px;\n  display: flex;\n\n  &:hover,\n  &:focus-visible {\n    background-color: #ef8964;\n  }\n`;\n\nexport const PlayIcon = styled.svg`\n  width: 20px;\n  height: 20px;\n`;\n\nexport const TimerText = styled.p`\n  color: rgba(239, 237, 232, 0.3);\n  font-size: 12px;\n  line-height: 1.28;\n  margin-top: 8px;\n`;\n\nexport const TimerSub = styled.span`\n  color: #e6533c;\n  font-size: 14px;\n  line-height: 1.28;\n  display: inline-flex;\n  margin-left: 8px;\n`;\n","import { CountdownCircleTimer } from 'react-countdown-circle-timer';\nimport {\n  PlayIcon,\n  TimerBtn,\n  TimerSub,\n  TimerText,\n  TimerTitle,\n  TimerWrapper,\n} from './Timer.styled';\n\nimport symbolDefs from '../../assets/images/sprite.svg';\nimport { useState } from 'react';\n\nconst Timer = ({ data, setDynamicBurnCal, dynamicBurnCal, setDynamicTime }) => {\n  const [isPlaying, setIsPlaying] = useState(false);\n\n  const handlePlay = () => {\n    setIsPlaying(!isPlaying);\n  };\n\n  const children = ({ remainingTime }) => {\n    const duration = data.time * 60;\n\n    setDynamicBurnCal(() => {\n      const time = (duration - remainingTime) / duration;\n\n      const burnCal = (time * data.burnedCalories) / data.time;\n      return Math.round(burnCal);\n    });\n\n    setDynamicTime(() => Math.round((duration - remainingTime) / 60));\n\n    const minutes = Math.floor(remainingTime / 60);\n    const seconds = remainingTime % 60;\n\n    return `${String(minutes).padStart(2, '0')}:${String(seconds).padStart(\n      2,\n      '0'\n    )}`;\n  };\n\n  return (\n    <TimerWrapper>\n      <TimerTitle>Time</TimerTitle>\n      <CountdownCircleTimer\n        strokeWidth={4}\n        size={124}\n        isPlaying={isPlaying}\n        duration={data.time * 60}\n        colors={'#E6533C'}\n        trailColor=\"rgba(239, 237, 232, 0.10)\"\n        remainingTime={data.time * 60}\n        strokeLinecap=\"round\"\n      >\n        {({ remainingTime }) => (\n          <div style={{ color: '#fff' }} role=\"timer\" aria-live=\"assertive\">\n            {children({ remainingTime })}\n          </div>\n        )}\n      </CountdownCircleTimer>\n      <TimerBtn onClick={handlePlay}>\n        <PlayIcon>\n          <use\n            href={isPlaying ? `${symbolDefs}#pause` : `${symbolDefs}#play`}\n          ></use>\n        </PlayIcon>\n      </TimerBtn>\n      <TimerText>\n        Burned calories:<TimerSub>{dynamicBurnCal}</TimerSub>\n      </TimerText>\n    </TimerWrapper>\n  );\n};\n\nexport default Timer;\n","import styled from 'styled-components';\n\nexport const ExersiceModalContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 40px;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    align-items: start;\n    gap: 16px;\n  }\n`;\n\nexport const ExersiceModalWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 14px;\n\n  @media screen and (min-width: 768px) {\n    justify-content: center;\n  }\n`;\n\nexport const ExersiceModalWrapperTwo = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-self: flex-start;\n  gap: 24px;\n\n  @media screen and (min-width: 768px) {\n    min-height: 454px;\n    align-items: flex-end;\n    justify-items: space-between;\n    gap: 0px;\n  }\n`;\n\nexport const ExersiceModalTimer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n\n  @media screen and (min-width: 768px) {\n    align-items: start;\n    width: 125px;\n    height: 125px;\n    margin-right: none;\n  }\n`;\n\nexport const ExersiceModalImg = styled.img`\n  width: 270px;\n  height: 226px;\n  border-radius: 12px;\n  border: 1px solid rgba(239, 237, 232, 0.2);\n  background: linear-gradient(\n      0deg,\n      rgba(4, 4, 4, 0.2) 0%,\n      rgba(4, 4, 4, 0.2) 100%\n    ),\n    lightgray 0px -17.5px / 100% 119.469% no-repeat;\n`;\n\nexport const ExersiceModalWindowBtn = styled.button`\n  width: 153px;\n  color: #efede8;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.13;\n  padding: 12px;\n  border: none;\n  border-radius: 12px;\n  background: #e6533c;\n\n  @media screen and (min-width: 768px) {\n    line-height: 1.5;\n  }\n\n  &:hover,\n  &:focus-visible {\n    background: #ef8964;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useState } from 'react';\n\nimport { Notify } from 'notiflix';\nimport ExersiceModalWindowList from './ExersiceModalWindowList';\nimport Timer from './Timer';\n\nimport {\n  ExersiceModalWrapper,\n  ExersiceModalContainer,\n  ExersiceModalWrapperTwo,\n  ExersiceModalWindowBtn,\n  ExersiceModalImg,\n  ExersiceModalTimer,\n} from './AddExerciseForm.styled';\nimport { addExercise } from 'redux/api/apiOperations';\nimport { selectError, selectIsLoading } from 'redux/api/apiSelectors';\nimport Loader from 'components/Loader';\n\nconst formatDate = date => {\n  const day = String(date.getDate()).padStart(2, '0');\n  const month = String(date.getMonth() + 1).padStart(2, '0');\n  const year = date.getFullYear();\n  return `${day}/${month}/${year}`;\n};\n\nexport const AddExerciseForm = ({\n  data,\n  onSuccess,\n  dynamicTime,\n  setDynamicTime,\n}) => {\n  const {\n    bodyPart,\n    equipment,\n    burnedCalories,\n    gifUrl,\n    name,\n    target,\n    _id,\n    time,\n  } = data;\n\n  const [dynamicBurnCal, setDynamicBurnCal] = useState(0);\n  const error = useSelector(selectError);\n  const isLoading = useSelector(selectIsLoading);\n  const dispatch = useDispatch();\n\n  const amount = Math.round((burnedCalories / (time * 60)) * 180);\n\n  const savedDate = localStorage.getItem('selectedDate');\n  let date = new Date();\n\n  if (savedDate) {\n    const parsedDate = new Date(savedDate);\n    if (!isNaN(parsedDate.getTime())) {\n      date = parsedDate;\n    }\n  }\n\n  const formattedDate = formatDate(date);\n\n  const handleAddToDiary = async () => {\n    if (!amount) {\n      Notify.failure('Must be greater than 0');\n      return;\n    }\n\n    if (dynamicTime < 1) {\n      Notify.failure(\n        'To log your activity you must work out for at least one minute'\n      );\n      return;\n    }\n\n    await dispatch(\n      addExercise({\n        exerciseId: _id,\n        date: formattedDate,\n        workoutTime: dynamicTime,\n        caloriesBurned: dynamicBurnCal,\n      })\n    ).unwrap();\n\n    if (!isLoading && !error) {\n      onSuccess(dynamicTime, dynamicBurnCal);\n    }\n  };\n\n  return (\n    <ExersiceModalContainer>\n      {isLoading && <Loader />}\n      <ExersiceModalWrapper>\n        <ExersiceModalImg src={gifUrl} alt={name} />\n        <ExersiceModalTimer>\n          <Timer\n            data={data}\n            setDynamicBurnCal={setDynamicBurnCal}\n            dynamicBurnCal={dynamicBurnCal}\n            setDynamicTime={setDynamicTime}\n          />\n        </ExersiceModalTimer>\n      </ExersiceModalWrapper>\n      <ExersiceModalWrapperTwo>\n        <ExersiceModalWindowList\n          name={name}\n          bodyPart={bodyPart}\n          target={target}\n          equipment={equipment}\n          time={time}\n        />\n        <ExersiceModalWindowBtn type=\"button\" onClick={handleAddToDiary}>\n          Add to diary\n        </ExersiceModalWindowBtn>\n      </ExersiceModalWrapperTwo>\n    </ExersiceModalContainer>\n  );\n};\n\nexport default AddExerciseForm;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nimport avocadoImage from '../../assets/images/hand_1x.png';\n\nexport const DivSuccess = styled.div`\n  display: flex;\n  flex-direction: column;   \n  width: 157px;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const DivImg = styled.div`\n  background: url(${avocadoImage}) no-repeat center center;\n  background-size: cover;\n  display: inline-block;\n  width: 118px;\n  height: 73px;\n  margin-bottom: 16px;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 32px;\n  }\n`;\n\nexport const TitleH2 = styled.h2` \n  color: #EFEDE8;\n  font-size: 24px;\n  font-weight: 700;\n  line-height: 1.33;\n  margin-bottom: 16px;\n`;\n\nexport const DivTime = styled.div`\ndisplay: flex;\n  justify-content: center;  \n  gap: 8px;\n  margin-bottom: 4px;\n`;\n\nexport const TimeP = styled.p`  \n  color: rgba(239, 237, 232, 0.30);\n  font-size: 14px;\n  line-height: 1.3;\n`;\n\nexport const ValueTime = styled.p`\n  color: #E6533C;\n  font-size: 14px;\n  line-height: 1.3;\n`;\n\nexport const DivBurnedCalories = styled.div`\ndisplay: flex;\n  justify-content: center;  \n  gap: 8px;\n  margin-bottom: 24px;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 32px;\n  }\n`;\n\nexport const BurnedCaloriesP = styled.p`  \n  color: rgba(239, 237, 232, 0.30);\n  font-size: 14px;\n  line-height: 1.3;\n`;\n\nexport const ValueBurnedCalories = styled.p`\n  color: #E6533C;\n  font-size: 14px;\n  line-height: 1.3;\n`;\n\nexport const ButtonAdd = styled.button`\n  width: 162px;\n  padding: 12px 32px;\n  margin-bottom: 16px;\n  border: none;\n  color:  white;\n  font-size: 16px;\n  font-weight: 500;\n  border-radius: 12px;\n  background: #E6533C;\n  line-height: 1.13;\n  transition:    \n    background 300ms ease-in-out;\n  :hover {    \n    background:  #EF8964;\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 14px 32px;\n    line-height: 1.5;\n  }\n`;\n\nexport const DivLink = styled(Link)`\n  display: flex;\n  justify-content: center; \n  gap: 8px;\n\n`;\n\nexport const LinkText = styled.p`\n  color: rgba(239, 237, 232, 0.30);\n  font-size: 14px;\n  line-height: 1.29; \n  \n  transition: color 300ms ease-in-out;\n`;","import PropTypes from 'prop-types';\n\nimport {\n  DivSuccess,\n  DivImg,\n  TitleH2,\n  DivTime,\n  TimeP,\n  ValueTime,\n  DivBurnedCalories,\n  BurnedCaloriesP,\n  ValueBurnedCalories,\n  ButtonAdd,\n  DivLink,\n  LinkText,\n} from './AddExerciseSuccess.styled';\n\nimport sprite from '../../assets/images/sprite.svg';\n\nconst AddExerciseSuccess = ({ onClose, totalTime, totalBurnedCalories }) => {\n  return (\n    <DivSuccess>\n      <DivImg></DivImg>\n      <TitleH2>Well Done</TitleH2>\n      <DivTime>\n        <TimeP>Your time: </TimeP>\n        <ValueTime>{totalTime} minutes</ValueTime>\n      </DivTime>\n      <DivBurnedCalories>\n        <BurnedCaloriesP>Burned calories: </BurnedCaloriesP>\n        <ValueBurnedCalories>{totalBurnedCalories}</ValueBurnedCalories>\n      </DivBurnedCalories>\n      <ButtonAdd onClick={onClose}>Next exercise</ButtonAdd>\n      <DivLink to=\"/diary\">\n        <LinkText>To the diary</LinkText>\n        <svg width=\"16\" height=\"16\">\n          <use href={sprite + '#arrow_gray'}></use>\n        </svg>\n      </DivLink>\n    </DivSuccess>\n  );\n};\nexport default AddExerciseSuccess;\n\nAddExerciseSuccess.propTypes = {\n  totalTime: PropTypes.number,\n  totalBurnedCalories: PropTypes.number,\n  onClose: PropTypes.func.isRequired,\n};\n","import sprite from 'assets/images/sprite.svg';\n\nimport {\n  ExercisesCard,\n  ExercisesCardStatusWorkout,\n  ExercisesCardWorkout,\n  ExercisesCardWorkoutText,\n  ExercisesCardStatus,\n  ExercisesCardAddBtn,\n  IconStart,\n  ExercisesCardTitle,\n  IconBeforeTitle,\n  ExercisesCardInfoList,\n  ExercisesCardInfoItem,\n  ExercisesCardInfoValue,\n} from './ExercisesItem.styled';\nimport BasicModalWindow from 'components/BasicModalWindow/BasicModalWindow';\nimport AddExerciseForm from 'components/AddExerciseForm/AddExerciseForm';\nimport { useDispatch } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport { fetchExercises } from 'redux/api/apiOperations';\nimport AddExerciseSuccess from 'components/AddExerciseSuccess/AddExerciseSuccess';\n\nexport const ExerciseCardItem = ({ exercise }) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isExercAdded, setIsExercAdded] = useState(true);\n  const [totalCalories, setTotalCalories] = useState(0);\n  const [totalTime, setTotalTime] = useState(0);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchExercises());\n  }, [dispatch]);\n\n  const toggleModal = () => {\n    setIsModalOpen(prev => !prev);\n    setIsExercAdded(false);\n    setTotalCalories(0);\n    setTotalTime(0);\n  };\n\n  const onAddedSuccessfully = (time, calories) => {\n    setTotalCalories(calories);\n    setTotalTime(time);\n    setIsExercAdded(true);\n  };\n\n  return (\n    <ExercisesCard>\n      <ExercisesCardStatusWorkout>\n        <ExercisesCardWorkout>\n          <ExercisesCardWorkoutText>WORKOUT</ExercisesCardWorkoutText>\n        </ExercisesCardWorkout>\n        <ExercisesCardStatus>\n          <ExercisesCardAddBtn type=\"button\" onClick={toggleModal}>\n            Start\n            <IconStart>\n              <use href={`${sprite}#icon-arrow`} />\n            </IconStart>\n          </ExercisesCardAddBtn>\n        </ExercisesCardStatus>\n      </ExercisesCardStatusWorkout>\n\n      <ExercisesCardTitle>\n        <IconBeforeTitle>\n          <use href={`${sprite}#icon-icon`} />\n        </IconBeforeTitle>\n        Exercise title {/* {exercise.title} */}\n      </ExercisesCardTitle>\n\n      <ExercisesCardInfoList>\n        <ExercisesCardInfoItem>Burned calories:</ExercisesCardInfoItem>\n        <ExercisesCardInfoValue>\n          312 {/* {exercise.calories || '999'} */}\n        </ExercisesCardInfoValue>\n        <ExercisesCardInfoItem>Body part:</ExercisesCardInfoItem>\n        <ExercisesCardInfoValue>\n          Waist {/* {exercise.part || '999'} */}\n        </ExercisesCardInfoValue>\n        <ExercisesCardInfoItem>Target:</ExercisesCardInfoItem>\n        <ExercisesCardInfoValue>\n          Abs {/* {exercise.target || '300'} */}\n        </ExercisesCardInfoValue>\n      </ExercisesCardInfoList>\n\n      {exercise && isModalOpen && (\n        <BasicModalWindow isOpenModalToggle={toggleModal}>\n          {isExercAdded ? (\n            <AddExerciseSuccess\n              key={'exercSuccess'}\n              onClose={toggleModal}\n              totalTime={totalTime}\n              totalBurnedCalories={totalCalories}\n            />\n          ) : (\n            <AddExerciseForm\n              key={'addExerc'}\n              data={exercise}\n              onSuccess={onAddedSuccessfully}\n              dynamicTime={totalTime}\n              setDynamicTime={setTotalTime}\n            />\n          )}\n        </BasicModalWindow>\n      )}\n    </ExercisesCard>\n  );\n};\n","import { useState } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\n\nimport Container from 'components/Container';\nimport TitlePage from 'components/TitlePage';\nimport ExercisesCategories from 'components/ExercisesCategories';\nimport { ExercisesWrapper, ContentDiv, WrapperTitleCategoriesDiv} from './Exercises.styled';\n\nimport { ExerciseCardItem } from 'components/ExercisesItem/ExercisesItem';\n\nconst EXERCISES_CATEGORY = {\n  BODY_PARTS: 'bodyPart',\n  MUSCLES: 'target',\n  EQUIPMENT: 'equipment',\n};\n\nexport function Exercises() {\n  const [category, setCategory] = useState(EXERCISES_CATEGORY.BODY_PARTS);\n  const location = useLocation();\n  const { subcategory } = useParams();\n\n  const subcategoriesLocation =\n    location.pathname === '/exercises' || location.pathname === '/exercises/';\n\n  return (   \n      <ExercisesWrapper>\n      <Container>\n          <ContentDiv>\n            <WrapperTitleCategoriesDiv margin={Boolean(subcategory)}>\n              <TitlePage title={subcategoriesLocation ? 'Exercises' : subcategory} />\n              <ExercisesCategories setCategory={setCategory} category={category} />\n            </WrapperTitleCategoriesDiv>\n\n              <ExerciseCardItem></ExerciseCardItem>\n              <ExerciseCardItem></ExerciseCardItem>\n              <ExerciseCardItem></ExerciseCardItem>\n     \n\n            <Outlet context={category} />\n          </ContentDiv>\n        </Container>\n      </ExercisesWrapper>\n    \n\n  );\n}\n\nexport default Exercises;\n","export const selectCategories = state => state.api.categories; // []\n\nexport const selectExercises = state => state.api.exercises; // { result: [], total_results: number }\n\nexport const selectFilters = state => state.api.filters; // { result: [], total_results: number }\n\nexport const selectProducts = state => state.api.products; // { result: [], total_results: number }\n\nexport const selectIsLoading = state => state.api.isLoading; // boolean\n\nexport const selectError = state => state.api.error; // { message: string }\n\nexport const selectCalculate = state => state.api.calculate; // {}\n\nexport const selectDiary = state => state.api.diary; // {}\n\nexport const selectDiaryUpdated = state => state.api.diaryUpdated; // boolean\n"],"names":["BasicWindow","styled","div","_templateObject","_taggedTemplateLiteral","Modal","_templateObject2","_ref","children","some","child","key","ButtonClouse","button","_templateObject3","SvgClouse","svg","_templateObject4","isOpenModalToggle","useEffect","closeESC","e","code","document","addEventListener","removeEventListener","modal","_jsx","onClick","currentTarget","target","_jsxs","href","sprite","createPortal","querySelector","ContainerWrapper","Title","h1","title","CategoriesFieldset","fieldset","CategoryInput","input","CategoryDiv","CategoryLabel","label","selected","EXERCISES_CATEGORY","BODY_PARTS","MUSCLES","EQUIPMENT","ExercisesCategories","category","setCategory","path","useResolvedPath","navigate","useNavigate","currentPathNameRef","useRef","pathname","current","handleOptionChange","event","value","type","checked","onChange","ContentDiv","ExercisesWrapper","exercises_background_1x","exercises_background_2x","WrapperTitleCategoriesDiv","props","margin","ExercisesCard","li","ExercisesCardStatusWorkout","ExercisesCardWorkout","span","ExercisesCardWorkoutText","p","ExercisesCardStatus","_templateObject5","ExercisesCardAddBtn","_templateObject6","IconStart","_templateObject7","IconBeforeTitle","_templateObject8","ExercisesCardTitle","h4","_templateObject9","ExercisesCardInfoList","ul","_templateObject10","ExercisesCardInfoItem","_templateObject11","ExercisesCardInfoValue","_templateObject12","ExersiceModalList","ExersiceModalLink","ExersiceModalLinkSub","ExersiceModalLinkTitle","name","bodyPart","equipment","G","window","M","L","T","o","B","position","width","height","P","display","justifyContent","alignItems","left","top","F","n","t","s","W","replace","r","i","concat","substring","match","map","parseInt","j","u","colors","colorsTime","_o$isSmoothColorTrans","isSmoothColorTransition","findIndex","a","h","c","m","f","isGrowing","join","S","duration","initialRemainingTime","updateInterval","_o$size","size","_o$strokeWidth","strokeWidth","trailStrokeWidth","_o$isPlaying","isPlaying","_o$isGrowing","_o$rotation","rotation","onComplete","onUpdate","U","_A","Math","PI","pathLength","A","max","w","$","_I","_ref$startAt","startAt","_ref$updateInterval","_E","E","_E2","_slicedToArray","b","g","l","requestAnimationFrame","d","C","k","R","v","cancelAnimationFrame","clearTimeout","y","q","_ref2","_ref2$shouldRepeat","shouldRepeat","_ref2$delay","delay","newStartAt","setTimeout","elapsedTime","reset","I","ceil","_ref3","newInitialRemainingTime","remainingTime","stroke","strokeDashoffset","D","strokeLinecap","trailColor","_S","x","style","viewBox","xmlns","fill","strokeDasharray","color","displayName","TimerWrapper","TimerTitle","TimerBtn","PlayIcon","TimerText","TimerSub","data","setDynamicBurnCal","dynamicBurnCal","setDynamicTime","_useState","useState","_useState2","setIsPlaying","time","burnCal","burnedCalories","round","minutes","floor","seconds","String","padStart","CountdownCircleTimer","role","symbolDefs","ExersiceModalContainer","ExersiceModalWrapper","ExersiceModalWrapperTwo","ExersiceModalTimer","ExersiceModalImg","img","ExersiceModalWindowBtn","onSuccess","dynamicTime","gifUrl","_id","error","useSelector","selectError","isLoading","selectIsLoading","dispatch","useDispatch","amount","savedDate","localStorage","getItem","date","Date","parsedDate","isNaN","getTime","formattedDate","day","getDate","month","getMonth","year","getFullYear","formatDate","handleAddToDiary","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","Notify","failure","abrupt","addExercise","exerciseId","workoutTime","caloriesBurned","unwrap","stop","apply","arguments","Loader","src","alt","Timer","ExersiceModalWindowList","DivSuccess","DivImg","TitleH2","h2","DivTime","TimeP","ValueTime","DivBurnedCalories","BurnedCaloriesP","ValueBurnedCalories","ButtonAdd","DivLink","Link","LinkText","onClose","totalTime","totalBurnedCalories","to","ExerciseCardItem","exercise","isModalOpen","setIsModalOpen","_useState3","_useState4","isExercAdded","setIsExercAdded","_useState5","_useState6","totalCalories","setTotalCalories","_useState7","_useState8","setTotalTime","fetchExercises","toggleModal","BasicModalWindow","AddExerciseSuccess","AddExerciseForm","calories","location","useLocation","subcategory","useParams","subcategoriesLocation","Container","Boolean","TitlePage","Outlet","context","selectCategories","state","api","categories","selectProducts","products","selectCalculate","calculate","selectDiary","diary","selectDiaryUpdated","diaryUpdated"],"sourceRoot":""}
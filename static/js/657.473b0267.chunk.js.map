{"version":3,"file":"static/js/657.473b0267.chunk.js","mappings":"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","sources":["components/Notice/Notice.styled.js","components/Notice/Notice.jsx","components/TitlePage/TitlePage.styled.js","components/TitlePage/TitlePage.jsx","components/DayDashboard/DayDashboard.styled.js","components/DayDashboard/DayDashboard.jsx","components/DayExercises/DayExercises.styled.js","components/DayExercises/DayExercises.jsx","components/DayProducts/DayProducts.styled.js","components/DayProducts/DayProducts.jsx","components/DaySwitch/DaySwitch.styled.js","components/DaySwitch/DaySwitch.jsx","pages/Diary/Diary.styled.js","pages/Diary/Diary.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const NoticeArea = styled.div`\n  display: flex;\n  gap: 8px;\n  width: 100%;\n`;\n\nexport const NoticeIcon = styled.div`\n  width: 24px;\n  height: 24px;\n  border-radius: 12px;\n  background-color: #efa082;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const WarningIcon = styled.svg({\n  width: '16px',\n  height: '16px',\n});\n\nexport const NoticeMessage = styled.div`\n  width: 100%;\n  height: auto;\n  color: rgba(239, 237, 232, 0.3);\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 1.5;\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { NoticeMessage, NoticeArea, NoticeIcon } from './Notice.styled';\nimport sprite from 'assets/images/sprite.svg';\n\nconst Notice = ({ notice }) => {\n  return (\n    <NoticeArea>\n      <NoticeIcon>\n        <svg width=\"24\" height=\"24\" fill=\"#efede8\">\n          <use href={`${sprite}#warning`} />\n        </svg>\n      </NoticeIcon>\n      <NoticeMessage>{notice}</NoticeMessage>\n    </NoticeArea>\n  );\n};\n\nexport default Notice;\n\nNotice.propTypes = {\n  notice: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Title = styled.h1`\n  margin-top: 72px;\n  font-family: Roboto;\n  color: #efede8;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 1.375;\n\n  @media screen and (min-width: 375px) {\n    margin-top: 40px;\n    font-size: 24px;\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-top: 72px;\n    font-size: 32px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Title } from './TitlePage.styled';\n\nconst TitlePage = ({ title }) => {\n  return <Title>{title}</Title>;\n};\n\nexport default TitlePage;\n\nTitlePage.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const DayDashboardArea = styled.ul`\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n\n  @media screen and (min-width: 375px) {\n    height: 328px;\n    margin-bottom: 20px;\n    row-gap: 20px;\n    column-gap: 13px;\n  }\n\n  @media screen and (min-width: 768px) {\n    height: 248px;\n    margin-bottom: 32px;\n    row-gap: 16px;\n    column-gap: 16px;\n    flex-direction: column;\n  }\n\n  @media screen and (min-width: 1440px) {\n    height: 380px;\n    margin-bottom: 48px;\n    flex-direction: row;\n  }\n`;\n\nconst setBgColor = props => {\n  switch (props.accent) {\n    case 'true':\n      return '#e6533c';\n    case 'false':\n      return 'rgba(239, 237, 232, 0.05)';\n    default:\n      return 'rgba(239, 237, 232, 0.05)';\n  }\n};\n\nexport const DashboardItem = styled.li`\n  border: 1px solid;\n  border-color: rgba(239, 237, 232, 0.2);\n  border-radius: 12px;\n  background-color: ${setBgColor};\n  padding: 18px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  @media screen and (min-width: 375px) {\n    width: 161px;\n    height: 96px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 187px;\n    height: 116px;\n  }\n`;\n\nexport const TitleArea = styled.div`\n  display: flex;\n  gap: 8px;\n  align-items: center;\n`;\n\nexport const Icon = styled.svg(\n  {\n    width: '20px',\n    height: '20px',\n  },\n  ({ iconColor = '#EF8964' }) => ({\n    fill: iconColor,\n    stroke: iconColor,\n  })\n);\n\nconst setTitleColor = props => {\n  switch (props.accent) {\n    case 'true':\n      return 'rgba(239, 237, 232, 0.8)';\n    case 'false':\n      return 'rgba(239, 237, 232, 0.4)';\n    default:\n      return 'rgba(239, 237, 232, 0.4)';\n  }\n};\n\nexport const Title = styled.p`\n  font-size: 12px;\n  font-weight: 400;\n  color: ${setTitleColor};\n`;\n\nexport const Value = styled.p`\n  font-weight: 700;\n  color: #efede8;\n\n  @media screen and (min-width: 375px) {\n    font-size: 18px;\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 24px;\n  }\n`;\n","import {\n  DayDashboardArea,\n  DashboardItem,\n  TitleArea,\n  Title,\n  Value,\n  Icon,\n} from './DayDashboard.styled';\nimport sprite from 'assets/images/sprite.svg';\n\nconst DayDashboard = () => {\n  return (\n    <DayDashboardArea>\n      <DashboardItem accent=\"true\">\n        <TitleArea>\n          <Icon iconColor=\"#EF8964\">\n            <use href={`${sprite}#food`} />\n          </Icon>\n          <Title accent=\"true\">Daily calorie intake</Title>\n        </TitleArea>\n        <Value>...</Value>\n      </DashboardItem>\n      <DashboardItem accent=\"true\">\n        <TitleArea>\n          <Icon iconColor=\"#EF8964\">\n            <use href={`${sprite}#dumbbell`} />\n          </Icon>\n          <Title accent=\"true\">Daily physical activity</Title>\n        </TitleArea>\n        <Value>...</Value>\n      </DashboardItem>\n      <DashboardItem accent=\"false\">\n        <TitleArea>\n          <Icon iconColor=\"#EF8964\">\n            <use href={`${sprite}#apple`} />\n          </Icon>\n          <Title accent=\"false\">Calories consumed</Title>\n        </TitleArea>\n        <Value>...</Value>\n      </DashboardItem>\n      <DashboardItem accent=\"false\">\n        <TitleArea>\n          <Icon iconColor=\"#EF8964\">\n            <use href={`${sprite}#fire`} />\n          </Icon>\n          <Title accent=\"false\">Calories burned</Title>\n        </TitleArea>\n        <Value>...</Value>\n      </DashboardItem>\n      <DashboardItem accent=\"false\">\n        <TitleArea>\n          <Icon iconColor=\"#EF8964\">\n            <use href={`${sprite}#bubble`} />\n          </Icon>\n          <Title accent=\"false\">Calories remaining</Title>\n        </TitleArea>\n        <Value>...</Value>\n      </DashboardItem>\n      <DashboardItem accent=\"false\">\n        <TitleArea>\n          <Icon iconColor=\"#EF8964\">\n            <use href={`${sprite}#figure`} />\n          </Icon>\n          <Title accent=\"false\">Sports remaining</Title>\n        </TitleArea>\n        <Value>...</Value>\n      </DashboardItem>\n    </DayDashboardArea>\n  );\n};\n\nexport default DayDashboard;\n","import styled from '@emotion/styled';\n\nexport const DayExercisesArea = styled.div`\n  position: relative;\n  width: 100%;\n  border: 1px solid;\n  border-color: rgba(239, 237, 232, 0.2);\n  border-radius: 12px;\n  background-color: rgba(239, 237, 232, 0.05);\n  padding: 16px;\n\n  @media screen and (min-width: 375px) {\n    height: 335px;\n  }\n\n  @media screen and (min-width: 768px) {\n    height: 234px;\n  }\n`;\n\nexport const TitleArea = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  @media screen and (min-width: 375px) {\n    margin-bottom: 22px;\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 16px;\n  }\n`;\n\nexport const Title = styled.h3`\n  font-size: 14px;\n  font-weight: 400;\n  color: rgba(239, 237, 232, 0.5);\n`;\n\nexport const Button = styled.button`\n  background-color: inherit;\n  border: none;\n  display: flex;\n  gap: 8px;\n  align-items: center;\n`;\n\nexport const Add = styled.p`\n  font-weight: 500;\n  color: #e6533c;\n\n  @media screen and (min-width: 375px) {\n    font-size: 14px;\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\n\nexport const ArrowIcon = styled.svg(\n  {\n    width: '16px',\n    height: '16px',\n  },\n  ({ iconColor = '#e6533c' }) => ({\n    fill: iconColor,\n    stroke: iconColor,\n  })\n);\n\nexport const TableArea = styled.div`\n  @media screen and (min-width: 1440px) {\n    padding-inline: 16px;\n  }\n`;\n\nexport const Message = styled.p`\n  font-weight: 400;\n  color: rgba(239, 237, 232, 0.3);\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n\n  @media screen and (min-width: 375px) {\n    font-size: 14px;\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\n","import {\n  DayExercisesArea,\n  TitleArea,\n  Title,\n  Button,\n  Add,\n  ArrowIcon,\n  TableArea,\n  Message,\n} from './DayExercises.styled';\nimport sprite from 'assets/images/sprite.svg';\n\nconst DayExercises = () => {\n  return (\n    <DayExercisesArea>\n      <TitleArea>\n        <Title>Execrcises</Title>\n        <Button>\n          <Add>Add product</Add>\n          <ArrowIcon iconColor=\"#E6533C\">\n            <use href={`${sprite}#arrow`} />\n          </ArrowIcon>\n        </Button>\n      </TitleArea>\n      <TableArea>\n        <Message>Not found exercises</Message>\n      </TableArea>\n    </DayExercisesArea>\n  );\n};\n\nexport default DayExercises;\n","import styled from '@emotion/styled';\n\nexport const DayProductsArea = styled.div`\n  position: relative;\n  width: 100%;\n  border: 1px solid;\n  border-color: rgba(239, 237, 232, 0.2);\n  border-radius: 12px;\n  background-color: rgba(239, 237, 232, 0.05);\n  padding: 16px;\n\n  @media screen and (min-width: 375px) {\n    height: 335px;\n  }\n\n  @media screen and (min-width: 768px) {\n    height: 234px;\n  }\n`;\n\nexport const TitleArea = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  @media screen and (min-width: 375px) {\n    margin-bottom: 22px;\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 16px;\n  }\n`;\n\nexport const Title = styled.h3`\n  font-size: 14px;\n  font-weight: 400;\n  color: rgba(239, 237, 232, 0.5);\n`;\n\nexport const Button = styled.button`\n  background-color: inherit;\n  border: none;\n  display: flex;\n  gap: 8px;\n  align-items: center;\n`;\n\nexport const Add = styled.p`\n  font-weight: 500;\n  color: #e6533c;\n\n  @media screen and (min-width: 375px) {\n    font-size: 14px;\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\n\nexport const ArrowIcon = styled.svg(\n  {\n    width: '16px',\n    height: '16px',\n  },\n  ({ iconColor = '#e6533c' }) => ({\n    fill: iconColor,\n    stroke: iconColor,\n  })\n);\n\nexport const TableArea = styled.div`\n  @media screen and (min-width: 1440px) {\n    padding-inline: 16px;\n  }\n`;\n\nexport const Message = styled.p`\n  font-weight: 400;\n  color: rgba(239, 237, 232, 0.3);\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n\n  @media screen and (min-width: 375px) {\n    font-size: 14px;\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\n","import {\n  DayProductsArea,\n  TitleArea,\n  Title,\n  Button,\n  Add,\n  ArrowIcon,\n  TableArea,\n  Message,\n} from './DayProducts.styled';\nimport sprite from 'assets/images/sprite.svg';\n\nconst DayProducts = () => {\n  return (\n    <DayProductsArea>\n      <TitleArea>\n        <Title>Products</Title>\n        <Button>\n          <Add>Add product</Add>\n          <ArrowIcon iconColor=\"#E6533C\">\n            <use href={`${sprite}#arrow`} />\n          </ArrowIcon>\n        </Button>\n      </TitleArea>\n      <TableArea>\n        <Message>Not found products</Message>\n      </TableArea>\n      {/* <TableTitles>\n        <ColumnTitle>Title</ColumnTitle>\n        <ColumnTitle>Category</ColumnTitle>\n        <ColumnTitle>Calories</ColumnTitle>\n        <ColumnTitle>Weight</ColumnTitle>\n        <ColumnTitle>Recommend</ColumnTitle>\n      </TableTitles> */}\n    </DayProductsArea>\n  );\n};\n\nexport default DayProducts;\n","import styled from '@emotion/styled';\n\nexport const DaySwitchArea = styled.div`\n  position: absolute;\n  border: 1px solid #fff;\n  border-radius: 12px;\n\n  @media screen and (min-width: 375px) {\n    right: 0;\n    top: 45px;\n    width: 183px;\n    height: 20px;\n  }\n\n  @media screen and (min-width: 768px) {\n    top: 52px;\n    width: 240px;\n    height: 32px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    right: 64px;\n  }\n`;\n","import { DaySwitchArea } from './DaySwitch.styled';\n\nconst DaySwitch = () => {\n  return <DaySwitchArea>DaySwitch</DaySwitchArea>;\n};\n\nexport default DaySwitch;\n","import styled from '@emotion/styled';\n\nexport const ForPosition = styled.div`\n  width: 100%;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n\n  @media screen and (min-width: 1440px) {\n    padding-inline: 64px;\n  }\n`;\n\nexport const DiaryContainer = styled.div`\n  display: flex;\n\n  @media screen and (min-width: 375px) {\n    flex-direction: column;\n    gap: 40px;\n    margin-top: 40px;\n  }\n\n  @media screen and (min-width: 768px) {\n    gap: 64px;\n    margin-top: 32px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    flex-direction: row;\n    gap: 32px;\n  }\n`;\n\nexport const Left = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  @media screen and (min-width: 375px) {\n    width: 335px;\n    gap: 40px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 704px;\n    gap: 32px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 826px;\n  }\n`;\n\nexport const Right = styled.div`\n  @media screen and (min-width: 375px) {\n    width: 335px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 593px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 390px;\n  }\n`;\n","import Container from 'components/Container';\nimport DayDashboard from 'components/DayDashboard';\nimport DayExercises from 'components/DayExercises';\nimport DayProducts from 'components/DayProducts';\nimport DaySwitch from 'components/DaySwitch';\nimport TitlePage from 'components/TitlePage';\nimport { DiaryContainer, Left, Right, ForPosition } from './Diary.styled';\nimport Notice from 'components/Notice';\n\nconst Diary = () => {\n  return (\n    <Container>\n      <ForPosition>\n        <TitlePage title=\"Diary\" />\n        <DaySwitch />\n        <DiaryContainer>\n          <Left>\n            <DayProducts />\n            <DayExercises />\n          </Left>\n          <Right>\n            <DayDashboard />\n            <Notice notice=\"Record all your meals in the calorie diary every day. This will help you be aware of your nutrition and make informed choices.\" />\n          </Right>\n        </DiaryContainer>\n      </ForPosition>\n    </Container>\n  );\n};\n\nexport default Diary;\n"],"names":["NoticeArea","styled","div","_templateObject","_taggedTemplateLiteral","NoticeIcon","_templateObject2","NoticeMessage","svg","width","height","_templateObject3","_ref","notice","_jsxs","children","_jsx","fill","href","concat","sprite","Title","h1","title","DayDashboardArea","ul","DashboardItem","li","props","accent","TitleArea","Icon","_ref$iconColor","iconColor","stroke","p","_templateObject4","Value","_templateObject5","DayExercisesArea","h3","Button","button","Add","ArrowIcon","TableArea","_templateObject6","Message","_templateObject7","DayProductsArea","DaySwitchArea","ForPosition","DiaryContainer","Left","Right","Container","TitlePage","DaySwitch","DayProducts","DayExercises","DayDashboard","Notice"],"sourceRoot":""}
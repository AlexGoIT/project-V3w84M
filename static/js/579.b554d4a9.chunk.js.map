{"version":3,"file":"static/js/579.b554d4a9.chunk.js","mappings":"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","sources":["components/BasicModalWindow/BasicModalWindow.styled.js","components/BasicModalWindow/BasicModalWindow.jsx","components/Container/Container.jsx","components/Container/Container.styled.js","components/TitlePage/TitlePage.styled.js","components/TitlePage/TitlePage.jsx","components/ExercisesCategories/ExercisesCategories.styled.js","components/ExercisesCategories/ExercisesCategories.jsx","components/ExercisesSubcategoriesItem/ExercisesSubcategoriesItem.styled.js","components/ExercisesSubcategoriesItem/ExercisesSubcategoriesItem.jsx","components/ExercisesSubcategoriesList/ExercisesSubcategoriesList.styled.js","components/ExercisesSubcategoriesList/ExercisesSubcategoriesList.jsx","pages/Exercises/Exercises.styled.js","components/ExercisesItem/ExercisesItem.styled.js","components/AddExerciseForm/ExersiceModalWindowList.styled.js","components/AddExerciseForm/ExersiceModalWindowList.jsx","../node_modules/react-countdown-circle-timer/lib/index.module.js","components/AddExerciseForm/Timer.styled.js","components/AddExerciseForm/Timer.jsx","components/AddExerciseForm/AddExerciseForm.styled.js","components/AddExerciseForm/AddExerciseForm.jsx","components/AddExerciseSuccess/AddExerciseSuccess.styled.js","components/AddExerciseSuccess/AddExerciseSuccess.jsx","components/ExercisesItem/ExercisesItem.jsx","components/ExercisesList/ExercisesList.jsx","pages/Exercises/Exercises.jsx","redux/api/apiSelectors.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const BasicWindow = styled.div`\n  width: 100%;\n  height: 100%;\n  background: rgba(04, 04, 04, 0.4);\n  position: absolute;\n  top: 0;\n  left: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 200;\n\n  @media screen and (min-width: 768px) {\n    position: fixed;\n  }\n`;\n\nexport const Modal = styled.div`\n  border-radius: 12px;\n  border: 1px solid rgba(239, 237, 232, 0.2);\n  background: #10100f;\n  position: absolute;\n  top: 5dvh;\n  ${({ children }) => {\n    if (children.some(child => child.key === 'prodSuccess')) {\n      return 'padding: 48px 89px;   @media screen and (min-width: 768px) {padding: 64px 136px;}';\n    }\n    if (children.some(child => child.key === 'addProd')) {\n      return `padding: 48px 24px;   @media screen and (min-width: 768px) {padding: 48px 32px;}`;\n    }\n    if (children.some(child => child.key === 'exercSuccess')) {\n      return `padding: 48px 89px;   @media screen and (min-width: 768px) {padding: 64px 134px;}`;\n    }\n    if (children.some(child => child.key === 'addExerc')) {\n      return `padding: 48px 16px;   @media screen and (min-width: 768px) {padding: 48px 32px;}`;\n    }\n  }};\n\n  @media screen and (min-width: 768px) {\n    position: relative;\n    top: 0;\n  }\n`;\n\nexport const ButtonClouse = styled.button`\n  width: 22px;\n  height: 22px;\n\n  border: none;\n  background: inherit;\n  position: absolute;\n  top: 14px;\n  right: 14px;\n  @media screen and (min-width: 768px) {\n    width: 26px;\n    height: 26px;\n  }\n`;\n\nexport const SvgClouse = styled.svg`\n  width: 20px;\n  height: 20px;\n\n  stroke: var(--white-color);\n`;\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\n\nimport {\n  BasicWindow,\n  Modal,\n  ButtonClouse,\n  SvgClouse,\n} from './BasicModalWindow.styled';\n\nimport sprite from '../../assets/images/sprite.svg';\n\nconst BasicModalWindow = ({ children, isOpenModalToggle }) => {\n  useEffect(() => {\n    const closeESC = e => {\n      if (e.code === 'Escape') {\n        isOpenModalToggle();\n      }\n    };\n    document.addEventListener('keydown', closeESC);\n    return () => {\n      document.removeEventListener('keydown', closeESC);\n    };\n  }, [isOpenModalToggle]);\n\n  const handleClickBackground = e => {\n    if (e.currentTarget === e.target) {\n      isOpenModalToggle();\n    }\n  };\n\n  const modal = (\n    <BasicWindow onClick={handleClickBackground}>\n      <Modal>\n        <ButtonClouse onClick={() => isOpenModalToggle()}>\n          <SvgClouse>\n            <use href={sprite + '#x'}></use>\n          </SvgClouse>\n        </ButtonClouse>\n\n        {children}\n      </Modal>\n    </BasicWindow>\n  );\n\n  return createPortal(modal, document.querySelector('#root_modal'));\n};\n\nexport default BasicModalWindow;\n\nBasicModalWindow.propTypes = {\n  children: PropTypes.any,\n  isOpenModalToggle: PropTypes.func,\n};\n","import { ContainerWrapper } from './Container.styled';\n\nconst Container = ({ children }) => {\n  return <ContainerWrapper>{children}</ContainerWrapper>;\n};\n\nexport default Container;\n","import styled from '@emotion/styled';\n\nexport const ContainerWrapper = styled.div`\n  width: 100%;\n  margin-inline: auto;\n  padding-inline: 20px;\n  /* padding-top: 61px; */\n\n  @media screen and (min-width: 375px) {\n    width: 375px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 768px;\n    padding-inline: 32px;\n    /* padding-top: 84px; */\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 1440px;\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const Title = styled.h1`\n  margin-top: 40px;\n  font-family: Roboto;\n  color: #efede8;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 1.375;\n\n  @media screen and (min-width: 375px) {\n    margin-top: 40px;\n    font-size: 24px;\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-top: 72px;\n    font-size: 32px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Title } from './TitlePage.styled';\n\nconst TitlePage = ({ title }) => {\n  return <Title>{title}</Title>;\n};\n\nexport default TitlePage;\n\nTitlePage.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const ExercisesCategoriesUl = styled.ul`\n  @media screen and (max-width: 767px) {\n    margin-top: 20px;\n  }\n`;\n\nexport const ExercisesCategoriesLi = styled.li`\n  display: flex;\n  gap: 32px;\n  align-items: baseline;\n\n  @media screen and (min-width: 768px) {\n    gap: 32px;\n  }\n`;\n\nexport const ExercisesCategoriesNavLink = styled(NavLink)`\n  color: rgba(239, 237, 232, 0.4);\n  font-size: 14px;\n  line-height: 1.28;\n  position: relative;\n  transition-duration: var(--transition-duration);\n  transition-timing-function: var(--transition-cubic);\n\n  &:after {\n    content: ' ';\n    display: inline-block;\n    width: 0;\n    height: 4px;\n    background: #ef8964;\n    border-radius: 2px;\n    position: absolute;\n    bottom: -4px;\n    margin: o auto;\n    transition: none;\n  }\n\n  &:hover,\n  &:focus {\n    color: #efede8;\n  }\n\n  &.active {\n    color: #efede8;\n    &:after {\n      content: ' ';\n      display: inline-block;\n      width: 100%;\n      height: 4px;\n      background: #ef8964;\n      border-radius: 2px;\n      position: absolute;\n      bottom: -4px;\n      transition: width 0.3s ease-out;\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\n","import {\n  ExercisesCategoriesUl,\n  ExercisesCategoriesLi,\n  ExercisesCategoriesNavLink,\n} from './ExercisesCategories.styled';\n\nexport const ExercisesCategories = () => {\n  return (\n    <ExercisesCategoriesUl>\n      <ExercisesCategoriesLi>\n        <ExercisesCategoriesNavLink to=\"bodyparts\">\n          <p>Body parts</p>\n        </ExercisesCategoriesNavLink>\n        <ExercisesCategoriesNavLink to=\"muscles\">\n          <p>Muscles</p>\n        </ExercisesCategoriesNavLink>\n        <ExercisesCategoriesNavLink to=\"equipment\">\n          <p>Equipment</p>\n        </ExercisesCategoriesNavLink>\n      </ExercisesCategoriesLi>\n    </ExercisesCategoriesUl>\n  );\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const ExercisesSubcategoryPictureLi = styled.li`\n  max-width: 335px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  width: 100%;\n  height: 100%;\n\n  @media screen and (min-width: 768px) {\n    max-width: 224px;\n  }\n  @media screen and (min-width: 1440px) {\n    max-width: 237px;\n  }\n`;\n\nexport const PictureLink = styled(Link)`\n  width: 100%;\n`;\n\nexport const WrapperDiv = styled.div`\n  position: relative;\n  height: 206px;\n\n  background-color: rgba(4, 4, 4, 0.5);\n  background: linear-gradient(\n      0deg,\n      rgba(4, 4, 4, 0.5) 0%,\n      rgba(4, 4, 4, 0.5) 100%\n    ),\n    url(${props => props.img}) center center no-repeat;\n  background-size: cover;\n  border-radius: 12px;\n  border: 1px solid rgba(239, 237, 232, 0.2);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n\n  transition: transform 0.3s ease-in-out;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n\nexport const DescriptionUl = styled.ul`\n  color: white;\n  text-align: center;\n  z-index: 2;\n`;\n\nexport const MainText = styled.p`\n  font-size: 20px;\n  line-height: 1.33;\n  margin-bottom: 2px;\n\n  &::first-letter {\n    text-transform: uppercase;\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 24px;\n  }\n`;\n\nexport const Subtext = styled.p`\n  color: rgba(239, 237, 232, 0.4);\n  font-size: 12px;\n  line-height: 1.5;\n`;\n","import PropTypes from 'prop-types';\nimport {\n  ExercisesSubcategoryPictureLi,\n  PictureLink,\n  WrapperDiv,\n  DescriptionUl,\n  MainText,\n  Subtext,\n} from './ExercisesSubcategoriesItem.styled';\n\nexport default function ExercisesSubcategoriesItem() {\n  return (\n    <ExercisesSubcategoryPictureLi>\n      <PictureLink to=\"#\">\n        <WrapperDiv>\n          <DescriptionUl>\n            <li>\n              <MainText>\n                Shoulders\n                {/* {item.name} */}\n              </MainText>\n            </li>\n\n            <li>\n              <Subtext>\n                Body parts\n                {/* {item.filter} */}\n              </Subtext>\n            </li>\n          </DescriptionUl>\n        </WrapperDiv>\n      </PictureLink>\n    </ExercisesSubcategoryPictureLi>\n  );\n}\n\nExercisesSubcategoriesItem.propTypes = {\n  item: PropTypes.shape({\n    _id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    imgURL: PropTypes.string.isRequired,\n    filter: PropTypes.string.isRequired,\n  }),\n};\n","import styled from '@emotion/styled';\n\nexport const SubcategoriesList = styled.div`\n  margin-top: 40px;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 64px;\n  }\n`;\n\nexport const ExercisesListUl = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  justify-content: center;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    flex-wrap: wrap;\n    gap: 32px 16px;\n  }\n`;\n\n// .SubcategoriesList {\n//   margin-top: 40px;\n// }\n\n// .exercisesList {\n//   display: flex;\n//   flex-direction: column;\n//   gap: 20px;\n// }\n\n// @media screen and (min-width: 768px) {\n//   .SubcategoriesList {\n//     margin-top: 64px;\n//   }\n\n//   .exercisesList {\n//     flex-direction: row;\n//     flex-wrap: wrap;\n//     gap: 32px 16px;\n//   }\n// }\n","// import { useEffect, useState } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { useLocation } from 'react-router-dom';\n// import { useMediaQuery } from 'react-responsive';\nimport ExercisesSubcategoriesItem from 'components/ExercisesSubcategoriesItem/ExercisesSubcategoriesItem';\n\nimport {\n  SubcategoriesList,\n  ExercisesListUl,\n} from './ExercisesSubcategoriesList.styled';\n\n// import { exerciseCategoriesThunk } from '../../../redux/exercises/operation';\n// import { selectExercises } from '../../../redux/exercises/selectors';\n\n// import RadioButtonPagination from '../../RadioButtonPagination/RadioButtonPagination';\n\n// const calculatePagination = (length, isTablet) => {\n//   const limit = isTablet ? 9 : 10;\n//   const page = Math.ceil(length / limit);\n//   return { limit, page };\n// };\n\n// const CategoryPage = (isTablet, listCategory, currentPage) => {\n//   if (!listCategory) {\n//     return {};\n//   }\n//   const { limit, page } = calculatePagination(listCategory.length, isTablet);\n\n//   const start = currentPage * limit - limit;\n//   const finish = currentPage * limit;\n\n//   return { list: listCategory.slice(start, finish), page };\n// };\n\nexport const ExercisesSubcategoriesList = () => {\n  //   const [currentPage, setCurrentPage] = useState(1);\n  //   const location = useLocation();\n  //   const category = location.pathname.split('/').pop();\n\n  //   const dispatch = useDispatch();\n\n  //   const isTablet = useMediaQuery({ minWidth: 768, maxWidth: 1439.9 });\n\n  //   const listCategory = useSelector(selectExercises);\n  //   const currentList = listCategory[category];\n\n  //   useEffect(() => {\n  //     dispatch(exerciseCategoriesThunk());\n  //   }, [dispatch]);\n\n  //   useEffect(() => {\n  //     setCurrentPage(1);\n  //   }, [currentList]);\n\n  //   const handleClickId = page => {\n  //     setCurrentPage(page);\n  //   };\n\n  //   const { list, page } = CategoryPage(isTablet, currentList, currentPage);\n\n  return (\n    <SubcategoriesList>\n      <ExercisesListUl>\n        <ExercisesSubcategoriesItem\n        //   key={item.title}\n        //   item={item.title}\n        //   category={category}\n        //   srcSet={item.srcSet}\n        />\n        <ExercisesSubcategoriesItem />\n        <ExercisesSubcategoriesItem />\n        <ExercisesSubcategoriesItem />\n        <ExercisesSubcategoriesItem />\n      </ExercisesListUl>\n    </SubcategoriesList>\n  );\n};\n","import styled from '@emotion/styled';\n\nimport { exercises_background_1x } from 'utils/background';\nimport { exercises_background_2x } from 'utils/background';\n\nexport const ExercisesWrapper = styled.div`\n  padding-top: 62px;\n  padding-bottom: 80px;\n  width: 100%;\n  @media screen and (min-width: 768px) {\n    padding-bottom: 66px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding-top: 85px;\n    padding-bottom: 81px;\n    background: image-set(\n      url(${exercises_background_1x}) 1x,\n      url(${exercises_background_2x}) 2x\n    );\n    background-repeat: no-repeat;\n    background-position: top 85px right;\n  }\n`;\n\nexport const ContentDiv = styled.div`\n  position: relative;\n  margin-inline: auto;\n`;\n\nexport const WrapperTitleCategoriesDiv = styled.div`\n  margin-bottom: 48px;\n  display: flex;\n  flex-direction: column;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 64px;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: baseline;\n    margin-bottom: ${props => props.margin && '32px'};\n    margin-top: ${props => props.margin && '72px'};\n  }\n\n  @media screen and (min-width: 1440px) {\n    margin-bottom: 64px;\n    margin-bottom: ${props => props.margin && '32px'};\n    padding-inline: 64px;\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const ExercisesCard = styled.li`\n  margin-left: 20px;\n  margin-right: 20px;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n  padding: 16px;\n  justify-content: center;\n  align-items: flex-start;\n  border-radius: 12px;\n  border: 1px solid rgba(239, 237, 232, 0.2);\n  background: rgba(239, 237, 232, 0.05);\n  box-sizing: border-box;\n\n  @media screen and (min-width: 768px) {\n    /* width: calc((100% - 16px) / 2); */\n    overflow: hidden;\n  }\n\n  @media screen and (min-width: 1440px) {\n    max-width: 405px;\n  }\n`;\nexport const ExercisesCardStatusWorkout = styled.label`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-bottom: 27px;\n  justify-content: space-between;\n`;\nexport const ExercisesCardWorkout = styled.span`\n  display: inline-flex;\n  padding: 5px 7.5px;\n  justify-content: center;\n  align-items: center;\n  border-radius: 4px;\n  background: rgba(239, 237, 232, 0.05);\n`;\nexport const ExercisesCardWorkoutText = styled.p`\n  color: #efede8;\n  font-size: 12px;\n  font-weight: 700;\n  line-height: normal;\n  text-transform: uppercase;\n`;\n\nexport const ExercisesCardStatus = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const ExercisesCardAddBtn = styled.button`\n  background: transparent;\n  border: none;\n  color: #e6533c;\n  font-size: 16px;\n  line-height: 24px;\n  padding: 0;\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    color: #efede8;\n  }\n`;\n\nexport const IconStart = styled.svg`\n  display: block;\n  width: 16px;\n  height: 16px;\n  margin-left: 8px;\n  margin-top: -3px;\n  fill: #efa082;\n  &:hover,\n  &:focus {\n    fill: #efede8;\n  }\n`;\n\nexport const IconBeforeTitle = styled.svg`\n  position: absolute;\n  width: 24px;\n  height: 24px;\n  left: 0;\n  top: calc(50% - 12px);\n  fill: #efa082;\n`;\n\nexport const ExercisesCardTitle = styled.h4`\n  position: relative;\n  font-size: 24px;\n  line-height: 1.333;\n  color: #efede8;\n\n  margin-bottom: 8px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  padding-left: 40px;\n  max-width: 100%;\n  /* &::before {\n    content: url();\n    position: absolute;\n    width: 24px;\n    height: 24px;\n    left: 0;\n    top: calc(50% - 12px);\n  } */\n`;\n\nexport const ExercisesCardInfoList = styled.ul`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  gap: 16px;\n`;\n\nexport const ExercisesCardInfoItem = styled.li`\n  display: flex;\n  flex-wrap: nowrap;\n  /* flex-direction: row; */\n  gap: 4px;\n  color: rgba(239, 237, 232, 0.4);\n  font-size: 12px;\n  line-height: 18px;\n`;\n\nexport const ExercisesCardInfoValue = styled.p`\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  color: #efede8;\n  font-size: 12px;\n  line-height: 18px;\n`;\n","import styled from 'styled-components';\n\nexport const ExersiceModalList = styled.ul`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-template-rows: 1fr 1fr;\n  gap: 8px;\n  align-items: center;\n  width: 302px;\n\n  @media screen and (min-width: 768px) {\n    width: 345px;\n    align-items: flex-start;\n  }\n`;\n\nexport const ExersiceModalLink = styled.li`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  padding: 12px 18px;\n  width: 147px;\n  justify-content: center;\n\n  gap: 4px;\n  border-radius: 12px;\n  border: 1px solid rgba(239, 237, 232, 0.2);\n  background: rgba(239, 237, 232, 0.05);\n\n  @media screen and (min-width: 768px) {\n    width: 168px;\n    align-items: flex-start;\n  }\n`;\n\nexport const ExersiceModalLinkSub = styled.p`\n  color: rgba(239, 237, 232, 0.4);\n  font-size: 12px;\n  line-height: 18px;\n`;\n\nexport const ExersiceModalLinkTitle = styled.p`\n  color: #efede8;\n  font-size: 16px;\n  font-weight: 600;\n  line-height: calc(24 / 16);\n  text-transform: capitalize;\n`;\n","import {\n  ExersiceModalLink,\n  ExersiceModalLinkSub,\n  ExersiceModalLinkTitle,\n  ExersiceModalList,\n} from './ExersiceModalWindowList.styled';\n\nconst ExersiceModalWindowList = ({ name, bodyPart, target, equipment }) => {\n  return (\n    <ExersiceModalList>\n      <ExersiceModalLink>\n        <ExersiceModalLinkSub>Name</ExersiceModalLinkSub>\n        <ExersiceModalLinkTitle>{name}</ExersiceModalLinkTitle>\n      </ExersiceModalLink>\n      <ExersiceModalLink>\n        <ExersiceModalLinkSub>Target</ExersiceModalLinkSub>\n        <ExersiceModalLinkTitle>{target}</ExersiceModalLinkTitle>\n      </ExersiceModalLink>\n      <ExersiceModalLink>\n        <ExersiceModalLinkSub>Body Part</ExersiceModalLinkSub>\n        <ExersiceModalLinkTitle>{bodyPart}</ExersiceModalLinkTitle>\n      </ExersiceModalLink>\n      <ExersiceModalLink>\n        <ExersiceModalLinkSub>Equipment</ExersiceModalLinkSub>\n        <ExersiceModalLinkTitle>{equipment}</ExersiceModalLinkTitle>\n      </ExersiceModalLink>\n    </ExersiceModalList>\n  );\n};\n\nexport default ExersiceModalWindowList;\n","import x from\"react\";import{useRef as U}from\"react\";import{useState as E,useRef as b,useCallback as q}from\"react\";import{useEffect as M,useLayoutEffect as L}from\"react\";var G=typeof window==\"undefined\"?M:L,I=({isPlaying:o,duration:e,startAt:n=0,updateInterval:t=0,onComplete:s,onUpdate:r})=>{let[i,c]=E(n),m=b(0),p=b(n),f=b(n*-1e3),u=b(null),a=b(null),h=b(null),w=g=>{let l=g/1e3;if(a.current===null){a.current=l,u.current=requestAnimationFrame(w);return}let d=l-a.current,C=m.current+d;a.current=l,m.current=C;let k=p.current+(t===0?C:(C/t|0)*t),R=p.current+C,v=typeof e==\"number\"&&R>=e;c(v?e:k),v||(u.current=requestAnimationFrame(w))},$=()=>{u.current&&cancelAnimationFrame(u.current),h.current&&clearTimeout(h.current),a.current=null},y=q(g=>{$(),m.current=0;let l=typeof g==\"number\"?g:n;p.current=l,c(l),o&&(u.current=requestAnimationFrame(w))},[o,n]);return G(()=>{if(r==null||r(i),e&&i>=e){f.current+=e*1e3;let{shouldRepeat:g=!1,delay:l=0,newStartAt:d}=(s==null?void 0:s(f.current/1e3))||{};g&&(h.current=setTimeout(()=>y(d),l*1e3))}},[i,e]),G(()=>(o&&(u.current=requestAnimationFrame(w)),$),[o,e,t]),{elapsedTime:i,reset:y}};var A=(o,e,n)=>{let t=o/2,s=e/2,r=t-s,i=2*r,c=n===\"clockwise\"?\"1,0\":\"0,1\",m=2*Math.PI*r;return{path:`m ${t},${s} a ${r},${r} 0 ${c} 0,${i} a ${r},${r} 0 ${c} 0,-${i}`,pathLength:m}},T=(o,e)=>o===0||o===e?0:typeof e==\"number\"?o-e:0,B=o=>({position:\"relative\",width:o,height:o}),P={display:\"flex\",justifyContent:\"center\",alignItems:\"center\",position:\"absolute\",left:0,top:0,width:\"100%\",height:\"100%\"};var F=(o,e,n,t,s)=>{if(t===0)return e;let r=(s?t-o:o)/t;return e+n*r},W=o=>{var e,n;return(n=(e=o.replace(/^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i,(t,s,r,i)=>`#${s}${s}${r}${r}${i}${i}`).substring(1).match(/.{2}/g))==null?void 0:e.map(t=>parseInt(t,16)))!=null?n:[]},j=(o,e)=>{var u;let{colors:n,colorsTime:t,isSmoothColorTransition:s=!0}=o;if(typeof n==\"string\")return n;let r=(u=t==null?void 0:t.findIndex((a,h)=>a>=e&&e>=t[h+1]))!=null?u:-1;if(!t||r===-1)return n[0];if(!s)return n[r];let i=t[r]-e,c=t[r]-t[r+1],m=W(n[r]),p=W(n[r+1]),f=!!o.isGrowing;return`rgb(${m.map((a,h)=>F(i,a,p[h]-a,c,f)|0).join(\",\")})`},S=o=>{let{duration:e,initialRemainingTime:n,updateInterval:t,size:s=180,strokeWidth:r=12,trailStrokeWidth:i,isPlaying:c=!1,isGrowing:m=!1,rotation:p=\"clockwise\",onComplete:f,onUpdate:u}=o,a=U(),h=Math.max(r,i!=null?i:0),{path:w,pathLength:$}=A(s,h,p),{elapsedTime:y}=I({isPlaying:c,duration:e,startAt:T(e,n),updateInterval:t,onUpdate:typeof u==\"function\"?l=>{let d=Math.ceil(e-l);d!==a.current&&(a.current=d,u(d))}:void 0,onComplete:typeof f==\"function\"?l=>{var R;let{shouldRepeat:d,delay:C,newInitialRemainingTime:k}=(R=f(l))!=null?R:{};if(d)return{shouldRepeat:d,delay:C,newStartAt:T(e,k)}}:void 0}),g=e-y;return{elapsedTime:y,path:w,pathLength:$,remainingTime:Math.ceil(g),rotation:p,size:s,stroke:j(o,g),strokeDashoffset:F(y,0,$,e,m),strokeWidth:r}};var D=o=>{let{children:e,strokeLinecap:n,trailColor:t,trailStrokeWidth:s}=o,{path:r,pathLength:i,stroke:c,strokeDashoffset:m,remainingTime:p,elapsedTime:f,size:u,strokeWidth:a}=S(o);return x.createElement(\"div\",{style:B(u)},x.createElement(\"svg\",{viewBox:`0 0 ${u} ${u}`,width:u,height:u,xmlns:\"http://www.w3.org/2000/svg\"},x.createElement(\"path\",{d:r,fill:\"none\",stroke:t!=null?t:\"#d9d9d9\",strokeWidth:s!=null?s:a}),x.createElement(\"path\",{d:r,fill:\"none\",stroke:c,strokeLinecap:n!=null?n:\"round\",strokeWidth:a,strokeDasharray:i,strokeDashoffset:m})),typeof e==\"function\"&&x.createElement(\"div\",{style:P},e({remainingTime:p,elapsedTime:f,color:c})))};D.displayName=\"CountdownCircleTimer\";export{D as CountdownCircleTimer,S as useCountdown};\n","import styled from 'styled-components';\n\nexport const TimerWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  position: relative;\n`;\n\nexport const TimerTitle = styled.h1`\n  color: rgba(239, 237, 232, 0.4);\n  font-size: 10px;\n  line-height: 1.4;\n  margin-bottom: 4px;\n`;\n\nexport const FormattedTitle = styled.p`\n  color: rgba(239, 237, 232, 0.4);\n  font-size: 10px;\n  font-weight: 400;\n  line-height: 14px;\n  margin-bottom: 4px;\n  margin-top: 4px;\n`;\n\nexport const TimerBtn = styled.button`\n  background-color: #e6533c;\n  margin-top: 14px;\n  padding: 5px;\n  border: none;\n  border-radius: 5px;\n  display: flex;\n\n  &:hover,\n  &:focus-visible {\n    background-color: #ef8964;\n  }\n`;\n\nexport const PlayIcon = styled.svg`\n  width: 20px;\n  height: 20px;\n`;\n\nexport const TimerText = styled.p`\n  color: rgba(239, 237, 232, 0.3);\n  font-size: 12px;\n  line-height: 1.28;\n  margin-top: 8px;\n`;\n\nexport const TimerSub = styled.span`\n  color: #e6533c;\n  font-size: 14px;\n  line-height: 1.28;\n  display: inline-flex;\n  margin-left: 8px;\n`;\n","import { CountdownCircleTimer } from 'react-countdown-circle-timer';\nimport {\n  PlayIcon,\n  TimerBtn,\n  TimerSub,\n  TimerText,\n  TimerTitle,\n  TimerWrapper,\n} from './Timer.styled';\n\nimport symbolDefs from '../../assets/images/sprite.svg';\nimport { useState } from 'react';\n\nconst Timer = ({\n  time,\n  burnedCalories,\n  setDynamicBurnCal,\n  dynamicBurnCal,\n  setDynamicTime,\n}) => {\n  const [isPlaying, setIsPlaying] = useState(false);\n\n  const handlePlay = () => {\n    setIsPlaying(!isPlaying);\n  };\n\n  const children = ({ remainingTime }) => {\n    const duration = time * 60;\n\n    setDynamicBurnCal(() => {\n      const timeN = (duration - remainingTime) / duration;\n\n      const burnCal = (timeN * burnedCalories) / time;\n      return Math.round(burnCal);\n    });\n\n    setDynamicTime(() => Math.round((duration - remainingTime) / 60));\n\n    const minutes = Math.floor(remainingTime / 60);\n    const seconds = remainingTime % 60;\n\n    return `${String(minutes).padStart(2, '0')}:${String(seconds).padStart(\n      2,\n      '0'\n    )}`;\n  };\n\n  return (\n    <TimerWrapper>\n      <TimerTitle>Time</TimerTitle>\n      <CountdownCircleTimer\n        strokeWidth={4}\n        size={124}\n        isPlaying={isPlaying}\n        duration={time * 60}\n        colors={'#E6533C'}\n        trailColor=\"rgba(239, 237, 232, 0.10)\"\n        remainingTime={time * 60}\n        strokeLinecap=\"round\"\n      >\n        {({ remainingTime }) => (\n          <div style={{ color: '#fff' }} role=\"timer\" aria-live=\"assertive\">\n            {children({ remainingTime })}\n          </div>\n        )}\n      </CountdownCircleTimer>\n      <TimerBtn onClick={handlePlay}>\n        <PlayIcon>\n          <use\n            href={isPlaying ? `${symbolDefs}#pause` : `${symbolDefs}#play`}\n          ></use>\n        </PlayIcon>\n      </TimerBtn>\n      <TimerText>\n        Burned calories:<TimerSub>{dynamicBurnCal}</TimerSub>\n      </TimerText>\n    </TimerWrapper>\n  );\n};\n\nexport default Timer;\n","import styled from 'styled-components';\n\nexport const ExersiceModalContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 40px;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    align-items: start;\n    gap: 16px;\n  }\n`;\n\nexport const ExersiceModalWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 14px;\n\n  @media screen and (min-width: 768px) {\n    justify-content: center;\n  }\n`;\n\nexport const ExersiceModalWrapperTwo = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-self: flex-start;\n  gap: 24px;\n\n  @media screen and (min-width: 768px) {\n    min-height: 454px;\n    align-items: flex-end;\n    justify-items: space-between;\n    gap: 0px;\n  }\n`;\n\nexport const ExersiceModalTimer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n\n  @media screen and (min-width: 768px) {\n    align-items: start;\n    width: 125px;\n    height: 125px;\n    margin-right: none;\n  }\n`;\n\nexport const ExersiceModalImg = styled.img`\n  width: 270px;\n  height: 226px;\n  border-radius: 12px;\n  border: 1px solid rgba(239, 237, 232, 0.2);\n  background: linear-gradient(\n      0deg,\n      rgba(4, 4, 4, 0.2) 0%,\n      rgba(4, 4, 4, 0.2) 100%\n    ),\n    lightgray 0px -17.5px / 100% 119.469% no-repeat;\n`;\n\nexport const ExersiceModalWindowBtn = styled.button`\n  width: 153px;\n  color: #efede8;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.13;\n  padding: 12px;\n  border: none;\n  border-radius: 12px;\n  background: #e6533c;\n\n  @media screen and (min-width: 768px) {\n    line-height: 1.5;\n  }\n\n  &:hover,\n  &:focus-visible {\n    background: #ef8964;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useState } from 'react';\n\nimport { Notify } from 'notiflix';\nimport ExersiceModalWindowList from './ExersiceModalWindowList';\nimport Timer from './Timer';\n\nimport {\n  ExersiceModalWrapper,\n  ExersiceModalContainer,\n  ExersiceModalWrapperTwo,\n  ExersiceModalWindowBtn,\n  ExersiceModalImg,\n  ExersiceModalTimer,\n} from './AddExerciseForm.styled';\nimport { addExercise } from 'redux/api/apiOperations';\nimport { selectError, selectIsLoading } from 'redux/api/apiSelectors';\nimport Loader from 'components/Loader';\n\nconst formatDate = date => {\n  const day = String(date.getDate()).padStart(2, '0');\n  const month = String(date.getMonth() + 1).padStart(2, '0');\n  const year = date.getFullYear();\n  return `${day}/${month}/${year}`;\n};\n\nexport const AddExerciseForm = ({\n  id,\n  name,\n  burnedCalories,\n  bodyPart,\n  target,\n  equipment,\n  gifUrl,\n  time,\n  onSuccess,\n  dynamicTime,\n  setDynamicTime,\n}) => {\n  const [dynamicBurnCal, setDynamicBurnCal] = useState(0);\n  const error = useSelector(selectError);\n  const isLoading = useSelector(selectIsLoading);\n  const dispatch = useDispatch();\n\n  const amount = Math.round((burnedCalories / (time * 60)) * 180);\n\n  const savedDate = localStorage.getItem('selectedDate');\n  let date = new Date();\n\n  if (savedDate) {\n    const parsedDate = new Date(savedDate);\n    if (!isNaN(parsedDate.getTime())) {\n      date = parsedDate;\n    }\n  }\n\n  const formattedDate = formatDate(date);\n\n  const handleAddToDiary = async () => {\n    if (!amount) {\n      Notify.failure('Must be greater than 0');\n      return;\n    }\n\n    if (dynamicTime < 1) {\n      Notify.failure(\n        'To log your activity you must work out for at least one minute'\n      );\n      return;\n    }\n\n    await dispatch(\n      addExercise({\n        exerciseId: id,\n        date: formattedDate,\n        workoutTime: dynamicTime,\n        caloriesBurned: dynamicBurnCal,\n      })\n    ).unwrap();\n\n    if (!isLoading && !error) {\n      onSuccess(dynamicTime, dynamicBurnCal);\n    }\n  };\n\n  return (\n    <ExersiceModalContainer>\n      {isLoading && <Loader />}\n      <ExersiceModalWrapper>\n        <ExersiceModalImg src={gifUrl} alt={name} />\n        <ExersiceModalTimer>\n          <Timer\n            burnedCalories={burnedCalories}\n            time={time}\n            setDynamicBurnCal={setDynamicBurnCal}\n            dynamicBurnCal={dynamicBurnCal}\n            setDynamicTime={setDynamicTime}\n          />\n        </ExersiceModalTimer>\n      </ExersiceModalWrapper>\n      <ExersiceModalWrapperTwo>\n        <ExersiceModalWindowList\n          name={name}\n          bodyPart={bodyPart}\n          target={target}\n          equipment={equipment}\n          time={time}\n        />\n        <ExersiceModalWindowBtn type=\"button\" onClick={handleAddToDiary}>\n          Add to diary\n        </ExersiceModalWindowBtn>\n      </ExersiceModalWrapperTwo>\n    </ExersiceModalContainer>\n  );\n};\n\nexport default AddExerciseForm;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nimport avocadoImage from '../../assets/images/hand_1x.png';\n\nexport const DivSuccess = styled.div`\n  display: flex;\n  flex-direction: column;   \n  width: 157px;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const DivImg = styled.div`\n  background: url(${avocadoImage}) no-repeat center center;\n  background-size: cover;\n  display: inline-block;\n  width: 118px;\n  height: 73px;\n  margin-bottom: 16px;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 32px;\n  }\n`;\n\nexport const TitleH2 = styled.h2` \n  color: #EFEDE8;\n  font-size: 24px;\n  font-weight: 700;\n  line-height: 1.33;\n  margin-bottom: 16px;\n`;\n\nexport const DivTime = styled.div`\ndisplay: flex;\n  justify-content: center;  \n  gap: 8px;\n  margin-bottom: 4px;\n`;\n\nexport const TimeP = styled.p`  \n  color: rgba(239, 237, 232, 0.30);\n  font-size: 14px;\n  line-height: 1.3;\n`;\n\nexport const ValueTime = styled.p`\n  color: #E6533C;\n  font-size: 14px;\n  line-height: 1.3;\n`;\n\nexport const DivBurnedCalories = styled.div`\ndisplay: flex;\n  justify-content: center;  \n  gap: 8px;\n  margin-bottom: 24px;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 32px;\n  }\n`;\n\nexport const BurnedCaloriesP = styled.p`  \n  color: rgba(239, 237, 232, 0.30);\n  font-size: 14px;\n  line-height: 1.3;\n`;\n\nexport const ValueBurnedCalories = styled.p`\n  color: #E6533C;\n  font-size: 14px;\n  line-height: 1.3;\n`;\n\nexport const ButtonAdd = styled.button`\n  width: 162px;\n  padding: 12px 32px;\n  margin-bottom: 16px;\n  border: none;\n  color:  white;\n  font-size: 16px;\n  font-weight: 500;\n  border-radius: 12px;\n  background: #E6533C;\n  line-height: 1.13;\n  transition:    \n    background 300ms ease-in-out;\n  :hover {    \n    background:  #EF8964;\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 14px 32px;\n    line-height: 1.5;\n  }\n`;\n\nexport const DivLink = styled(Link)`\n  display: flex;\n  justify-content: center; \n  gap: 8px;\n\n`;\n\nexport const LinkText = styled.p`\n  color: rgba(239, 237, 232, 0.30);\n  font-size: 14px;\n  line-height: 1.29; \n  \n  transition: color 300ms ease-in-out;\n`;","import PropTypes from 'prop-types';\n\nimport {\n  DivSuccess,\n  DivImg,\n  TitleH2,\n  DivTime,\n  TimeP,\n  ValueTime,\n  DivBurnedCalories,\n  BurnedCaloriesP,\n  ValueBurnedCalories,\n  ButtonAdd,\n  DivLink,\n  LinkText,\n} from './AddExerciseSuccess.styled';\n\nimport sprite from '../../assets/images/sprite.svg';\n\nconst AddExerciseSuccess = ({ onClose, totalTime, totalBurnedCalories }) => {\n  return (\n    <DivSuccess>\n      <DivImg></DivImg>\n      <TitleH2>Well Done</TitleH2>\n      <DivTime>\n        <TimeP>Your time: </TimeP>\n        <ValueTime>{totalTime} minutes</ValueTime>\n      </DivTime>\n      <DivBurnedCalories>\n        <BurnedCaloriesP>Burned calories: </BurnedCaloriesP>\n        <ValueBurnedCalories>{totalBurnedCalories}</ValueBurnedCalories>\n      </DivBurnedCalories>\n      <ButtonAdd onClick={onClose}>Next exercise</ButtonAdd>\n      <DivLink to=\"/diary\">\n        <LinkText>To the diary</LinkText>\n        <svg width=\"16\" height=\"16\">\n          <use href={sprite + '#arrow_gray'}></use>\n        </svg>\n      </DivLink>\n    </DivSuccess>\n  );\n};\nexport default AddExerciseSuccess;\n\nAddExerciseSuccess.propTypes = {\n  totalTime: PropTypes.number,\n  totalBurnedCalories: PropTypes.number,\n  onClose: PropTypes.func.isRequired,\n};\n","import sprite from 'assets/images/sprite.svg';\n\nimport {\n  ExercisesCard,\n  ExercisesCardStatusWorkout,\n  ExercisesCardWorkout,\n  ExercisesCardWorkoutText,\n  ExercisesCardStatus,\n  ExercisesCardAddBtn,\n  IconStart,\n  ExercisesCardTitle,\n  IconBeforeTitle,\n  ExercisesCardInfoList,\n  ExercisesCardInfoItem,\n  ExercisesCardInfoValue,\n} from './ExercisesItem.styled';\nimport BasicModalWindow from 'components/BasicModalWindow/BasicModalWindow';\nimport AddExerciseForm from 'components/AddExerciseForm/AddExerciseForm';\nimport { useDispatch } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport { fetchExercises } from 'redux/api/apiOperations';\nimport AddExerciseSuccess from 'components/AddExerciseSuccess/AddExerciseSuccess';\n\nexport const ExerciseCardItem = ({\n  id,\n  name,\n  burnedCalories,\n  bodyPart,\n  target,\n  equipment,\n  gifUrl,\n  time,\n}) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isExercAdded, setIsExercAdded] = useState(true);\n  const [totalCalories, setTotalCalories] = useState(0);\n  const [totalTime, setTotalTime] = useState(0);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchExercises());\n  }, [dispatch]);\n\n  const toggleModal = () => {\n    setIsModalOpen(prev => !prev);\n    setIsExercAdded(false);\n    setTotalCalories(0);\n    setTotalTime(0);\n  };\n\n  const onAddedSuccessfully = (time, calories) => {\n    setTotalCalories(calories);\n    setTotalTime(time);\n    setIsExercAdded(true);\n  };\n\n  return (\n    <ExercisesCard>\n      <ExercisesCardStatusWorkout>\n        <ExercisesCardWorkout>\n          <ExercisesCardWorkoutText>WORKOUT</ExercisesCardWorkoutText>\n        </ExercisesCardWorkout>\n        <ExercisesCardStatus>\n          <ExercisesCardAddBtn type=\"button\" onClick={toggleModal}>\n            Start\n            <IconStart>\n              <use href={`${sprite}#icon-arrow`} />\n            </IconStart>\n          </ExercisesCardAddBtn>\n        </ExercisesCardStatus>\n      </ExercisesCardStatusWorkout>\n\n      <ExercisesCardTitle>\n        <IconBeforeTitle>\n          <use href={`${sprite}#icon-icon`} />\n        </IconBeforeTitle>\n        {name}\n      </ExercisesCardTitle>\n\n      <ExercisesCardInfoList>\n        <ExercisesCardInfoItem>Burned calories:</ExercisesCardInfoItem>\n        <ExercisesCardInfoValue>\n          {/* 312 {burnedCalories || '999'} */}\n          {burnedCalories}\n        </ExercisesCardInfoValue>\n        <ExercisesCardInfoItem>Body part:</ExercisesCardInfoItem>\n        <ExercisesCardInfoValue>\n          {/* Waist {bodyPart || '999'} */}\n          {bodyPart}\n        </ExercisesCardInfoValue>\n        <ExercisesCardInfoItem>Target:</ExercisesCardInfoItem>\n        <ExercisesCardInfoValue>\n          {/* Abs {target || '300'} */}\n          {target}\n        </ExercisesCardInfoValue>\n      </ExercisesCardInfoList>\n\n      {isModalOpen && (\n        <BasicModalWindow isOpenModalToggle={toggleModal}>\n          {isExercAdded ? (\n            <AddExerciseSuccess\n              key={'exercSuccess'}\n              onClose={toggleModal}\n              totalTime={totalTime}\n              totalBurnedCalories={totalCalories}\n            />\n          ) : (\n            <AddExerciseForm\n              key={'addExerc'}\n              id={id}\n              name={name}\n              burnedCalories={burnedCalories}\n              bodyPart={bodyPart}\n              target={target}\n              gifUrl={gifUrl}\n              equipment={equipment}\n              time={time}\n              onSuccess={onAddedSuccessfully}\n              dynamicTime={totalTime}\n              setDynamicTime={setTotalTime}\n            />\n          )}\n        </BasicModalWindow>\n      )}\n    </ExercisesCard>\n  );\n};\n","import { ExerciseCardItem } from 'components/ExercisesItem/ExercisesItem';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchExercises } from 'redux/api/apiOperations';\nimport { selectExercises } from 'redux/api/apiSelectors';\n\nconst ExercisesList = () => {\n  const dispatch = useDispatch();\n  const exercises = useSelector(selectExercises);\n  const { result } = exercises;\n  //{total_results } = exercises; для бесконечного скрола\n  useEffect(() => {\n    dispatch(fetchExercises());\n  }, [dispatch]);\n\n  return (\n    <ul>\n      {result &&\n        result.length > 0 &&\n        result.map(\n          ({\n            _id,\n            name,\n            burnedCalories,\n            bodyPart,\n            target,\n            equipment,\n            gifUrl,\n            time,\n          }) => (\n            <ExerciseCardItem\n              key={_id}\n              id={_id}\n              name={name}\n              burnedCalories={burnedCalories}\n              bodyPart={bodyPart}\n              target={target}\n              gifUrl={gifUrl}\n              equipment={equipment}\n              time={time}\n            />\n          )\n        )}\n    </ul>\n  );\n};\n\nexport default ExercisesList;\n","import Container from 'components/Container';\nimport TitlePage from 'components/TitlePage';\nimport { ExercisesCategories } from 'components/ExercisesCategories/ExercisesCategories';\n//import { ExerciseCardItem } from 'components/ExercisesItem/ExercisesItem';\nimport { ExercisesSubcategoriesList } from 'components/ExercisesSubcategoriesList/ExercisesSubcategoriesList';\n\nimport {\n  ExercisesWrapper,\n  ContentDiv,\n  WrapperTitleCategoriesDiv,\n} from './Exercises.styled';\n\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilters, selectIsLoading } from 'redux/api/apiSelectors';\nimport { useEffect } from 'react';\nimport { fetchFilters } from 'redux/api/apiOperations';\nimport Loader from 'components/Loader';\nimport ExercisesList from 'components/ExercisesList';\n// import Back from 'components/exercises/Back/Back';\n\nconst exercisesCategories = {\n  bodyparts: 'Body parts',\n  muscles: 'Muscles',\n  equipment: 'Equipment',\n};\n\nconst Exercises = () => {\n  const { pathname } = useLocation();\n  // const isExercisesList = pathname.split('/').pop() === 'list';\n  const page = pathname.split('/')[2];\n  const categoryName = exercisesCategories[page];\n  const dispatch = useDispatch();\n  const filterResult = useSelector(selectFilters).result;\n  const isLoading = useSelector(selectIsLoading);\n  const navigate = useNavigate();\n\n  if (pathname === '/exercises') {\n    navigate('/exercises/bodyparts');\n  }\n\n  useEffect(() => {\n    dispatch(fetchFilters({ filter: categoryName }));\n  }, [categoryName, dispatch]);\n\n  return (\n    <ExercisesWrapper>\n      <Container>\n        {isLoading && <Loader />}\n        {/* {isExercisesList && <Back />} */}\n        <ContentDiv>\n          <WrapperTitleCategoriesDiv>\n            <TitlePage title=\"Exercises\" />\n            <ExercisesCategories />\n          </WrapperTitleCategoriesDiv>\n\n          <ExercisesSubcategoriesList />\n          <ul style={{ display: 'flex', flexWrap: 'wrap', gap: '16px' }}>\n            {filterResult &&\n              filterResult.map(el => {\n                return (\n                  <li key={el._id}>\n                    <Link to={page + '/' + el.name}>\n                      <img\n                        src={el.imgURL}\n                        alt={el.name}\n                        style={{ width: '250px' }}\n                      />\n                    </Link>\n                  </li>\n                );\n              })}\n          </ul>\n          <ExercisesList />\n        </ContentDiv>\n      </Container>\n    </ExercisesWrapper>\n  );\n};\n\nexport default Exercises;\n","export const selectCategories = state => state.api.categories; // []\n\nexport const selectExercises = state => state.api.exercises; // { result: [], total_results: number }\n\nexport const selectFilters = state => state.api.filters; // { result: [], total_results: number }\n\nexport const selectProducts = state => state.api.products; // { result: [], total_results: number }\n\nexport const selectIsLoading = state => state.api.isLoading; // boolean\n\nexport const selectError = state => state.api.error; // { message: string }\n\nexport const selectCalculate = state => state.api.calculate; // {}\n\nexport const selectDiary = state => state.api.diary; // {}\n\nexport const selectDiaryUpdated = state => state.api.diaryUpdated; // boolean\n"],"names":["BasicWindow","styled","div","_templateObject","_taggedTemplateLiteral","Modal","_templateObject2","_ref","children","some","child","key","ButtonClouse","button","_templateObject3","SvgClouse","svg","_templateObject4","isOpenModalToggle","useEffect","closeESC","e","code","document","addEventListener","removeEventListener","modal","_jsx","onClick","currentTarget","target","_jsxs","href","sprite","createPortal","querySelector","ContainerWrapper","Title","h1","title","ExercisesCategoriesUl","ul","ExercisesCategoriesLi","li","ExercisesCategoriesNavLink","NavLink","ExercisesCategories","to","ExercisesSubcategoryPictureLi","PictureLink","Link","WrapperDiv","props","img","DescriptionUl","MainText","p","_templateObject5","Subtext","_templateObject6","ExercisesSubcategoriesItem","SubcategoriesList","ExercisesListUl","ExercisesSubcategoriesList","ExercisesWrapper","exercises_background_1x","exercises_background_2x","ContentDiv","WrapperTitleCategoriesDiv","margin","ExercisesCard","ExercisesCardStatusWorkout","label","ExercisesCardWorkout","span","ExercisesCardWorkoutText","ExercisesCardStatus","ExercisesCardAddBtn","IconStart","_templateObject7","IconBeforeTitle","_templateObject8","ExercisesCardTitle","h4","_templateObject9","ExercisesCardInfoList","_templateObject10","ExercisesCardInfoItem","_templateObject11","ExercisesCardInfoValue","_templateObject12","ExersiceModalList","ExersiceModalLink","ExersiceModalLinkSub","ExersiceModalLinkTitle","name","bodyPart","equipment","G","window","M","L","T","o","B","position","width","height","P","display","justifyContent","alignItems","left","top","F","n","t","s","W","replace","r","i","concat","substring","match","map","parseInt","j","u","colors","colorsTime","_o$isSmoothColorTrans","isSmoothColorTransition","findIndex","a","h","c","m","f","isGrowing","join","S","duration","initialRemainingTime","updateInterval","_o$size","size","_o$strokeWidth","strokeWidth","trailStrokeWidth","_o$isPlaying","isPlaying","_o$isGrowing","_o$rotation","rotation","onComplete","onUpdate","U","_A","Math","PI","path","pathLength","A","max","w","$","_I","_ref$startAt","startAt","_ref$updateInterval","_E","E","_E2","_slicedToArray","b","g","l","current","requestAnimationFrame","d","C","k","R","v","cancelAnimationFrame","clearTimeout","y","q","_ref2","_ref2$shouldRepeat","shouldRepeat","_ref2$delay","delay","newStartAt","setTimeout","elapsedTime","reset","I","ceil","_ref3","newInitialRemainingTime","remainingTime","stroke","strokeDashoffset","D","strokeLinecap","trailColor","_S","x","style","viewBox","xmlns","fill","strokeDasharray","color","displayName","TimerWrapper","TimerTitle","TimerBtn","PlayIcon","TimerText","TimerSub","time","burnedCalories","setDynamicBurnCal","dynamicBurnCal","setDynamicTime","_useState","useState","_useState2","setIsPlaying","burnCal","round","minutes","floor","seconds","String","padStart","CountdownCircleTimer","role","symbolDefs","ExersiceModalContainer","ExersiceModalWrapper","ExersiceModalWrapperTwo","ExersiceModalTimer","ExersiceModalImg","ExersiceModalWindowBtn","id","gifUrl","onSuccess","dynamicTime","error","useSelector","selectError","isLoading","selectIsLoading","dispatch","useDispatch","amount","savedDate","localStorage","getItem","date","Date","parsedDate","isNaN","getTime","formattedDate","day","getDate","month","getMonth","year","getFullYear","formatDate","handleAddToDiary","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","Notify","failure","abrupt","addExercise","exerciseId","workoutTime","caloriesBurned","unwrap","stop","apply","arguments","Loader","src","alt","Timer","ExersiceModalWindowList","type","DivSuccess","DivImg","TitleH2","h2","DivTime","TimeP","ValueTime","DivBurnedCalories","BurnedCaloriesP","ValueBurnedCalories","ButtonAdd","DivLink","LinkText","onClose","totalTime","totalBurnedCalories","ExerciseCardItem","isModalOpen","setIsModalOpen","_useState3","_useState4","isExercAdded","setIsExercAdded","_useState5","_useState6","totalCalories","setTotalCalories","_useState7","_useState8","setTotalTime","fetchExercises","toggleModal","BasicModalWindow","AddExerciseSuccess","AddExerciseForm","calories","result","selectExercises","length","_id","exercisesCategories","bodyparts","muscles","pathname","useLocation","page","split","categoryName","filterResult","selectFilters","navigate","useNavigate","fetchFilters","filter","Container","TitlePage","flexWrap","gap","el","imgURL","ExercisesList","selectCategories","state","api","categories","exercises","filters","selectProducts","products","selectCalculate","calculate","selectDiary","diary","selectDiaryUpdated","diaryUpdated"],"sourceRoot":""}
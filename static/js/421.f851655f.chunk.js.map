{"version":3,"file":"static/js/421.f851655f.chunk.js","mappings":"4IAMA,IAJkB,SAAHA,GAAsB,IAAhBC,EAAQD,EAARC,SACnB,OAAOC,EAAAA,EAAAA,KAACC,EAAAA,EAAgB,CAAAF,SAAEA,GAC5B,C,sECFaE,E,QAAmBC,EAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6W,4ICA7BC,E,QAAQJ,EAAOK,GAAEH,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yU,SCK9B,EAJkB,SAAHP,GAAmB,IAAbU,EAAKV,EAALU,MACnB,OAAOR,EAAAA,EAAAA,KAACM,EAAK,CAAAP,SAAES,GACjB,C,sJCHaC,EAAqBP,EAAAA,EAAOQ,SAAQN,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0KAYpCM,EAAgBT,EAAAA,EAAOU,MAAKC,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,4BAI5BS,EAAcZ,EAAAA,EAAOC,IAAGY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,iCAIxBW,EAAgBd,EAAAA,EAAOe,MAAKC,IAAAA,GAAAb,EAAAA,EAAAA,GAAA,2YAgBrC,SAAAP,GAAW,OAAAA,EAARqB,UACK,qFAMT,I,SClCGC,EAAqB,CACzBC,WAAY,WACZC,QAAS,SACTC,UAAW,aAGE,SAASC,EAAmB1B,GAA6B,IAA1B2B,EAAQ3B,EAAR2B,SAAUC,EAAW5B,EAAX4B,YAChDC,GAAOC,EAAAA,EAAAA,MACPC,GAAWC,EAAAA,EAAAA,MACXC,GAAqBC,EAAAA,EAAAA,QAAOL,EAAKM,WAEvCC,EAAAA,EAAAA,YAAU,WAC2B,eAA/BH,EAAmBI,SACrBN,EAAS,KAEb,GAAG,CAACJ,EAAUI,KAEdK,EAAAA,EAAAA,YAAU,WACRH,EAAmBI,QAAUR,EAAKM,QACpC,GAAG,CAACN,EAAKM,WAET,IAAMG,EAAqB,SAAAC,GACzBX,EAAYW,EAAMC,OAAOC,MAC3B,EAEA,OACEC,EAAAA,EAAAA,MAAC/B,EAAkB,CAAAV,SAAA,EACjBC,EAAAA,EAAAA,KAACc,EAAW,CAAAf,UACVyC,EAAAA,EAAAA,MAACxB,EAAa,CAACG,SAAUM,IAAaL,EAAmBC,WAAWtB,SAAA,EAClEC,EAAAA,EAAAA,KAACW,EAAa,CACZ8B,KAAK,QACLF,MAAOnB,EAAmBC,WAC1BqB,QAASjB,IAAaL,EAAmBC,WACzCsB,SAAUP,IACV,mBAKNpC,EAAAA,EAAAA,KAACc,EAAW,CAAAf,UACVyC,EAAAA,EAAAA,MAACxB,EAAa,CAACG,SAAUM,IAAaL,EAAmBE,QAAQvB,SAAA,EAC/DC,EAAAA,EAAAA,KAACW,EAAa,CACZ8B,KAAK,QACLF,MAAOnB,EAAmBE,QAC1BoB,QAASjB,IAAaL,EAAmBE,QACzCqB,SAAUP,IACV,gBAKNpC,EAAAA,EAAAA,KAACc,EAAW,CAAAf,UACVyC,EAAAA,EAAAA,MAACxB,EAAa,CAACG,SAAUM,IAAaL,EAAmBG,UAAUxB,SAAA,EACjEC,EAAAA,EAAAA,KAACW,EAAa,CACZ8B,KAAK,QACLF,MAAOnB,EAAmBG,UAC1BmB,QAASjB,IAAaL,EAAmBG,UACzCoB,SAAUP,IACV,mBAMZ,C,4CCtEaQ,EAAa1C,EAAAA,EAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yDAKvBwC,EAAmB3C,EAAAA,EAAOC,IAAGU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,gZAWVyC,EAAAA,GAAoCC,EAAAA,IAMvDC,EAA4B9C,EAAAA,EAAOC,IAAGY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,oaAU9B,SAAA4C,GAAK,OAAIA,EAAMC,QAAU,MAAM,IAClC,SAAAD,GAAK,OAAIA,EAAMC,QAAU,MAAM,IAK5B,SAAAD,GAAK,OAAIA,EAAMC,QAAU,MAAM,I,UCzCvCC,EAAgBjD,EAAAA,EAAOkD,GAAEhD,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,uhBAwBzBgD,EAA6BnD,EAAAA,EAAOe,MAAKJ,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,uJAQzCiD,EAAuBpD,EAAAA,EAAOqD,KAAIxC,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,+KAQlCmD,EAA2BtD,EAAAA,EAAOuD,EAACvC,IAAAA,GAAAb,EAAAA,EAAAA,GAAA,4HAQnCqD,EAAsBxD,EAAAA,EAAOC,IAAGwD,IAAAA,GAAAtD,EAAAA,EAAAA,GAAA,oDAKhCuD,EAAsB1D,EAAAA,EAAO2D,OAAMC,IAAAA,GAAAzD,EAAAA,EAAAA,GAAA,sPAiBnC0D,EAAY7D,EAAAA,EAAO8D,IAAGC,IAAAA,GAAA5D,EAAAA,EAAAA,GAAA,4KAatB6D,EAAkBhE,EAAAA,EAAO8D,IAAGG,IAAAA,GAAA9D,EAAAA,EAAAA,GAAA,0HAS5B+D,EAAqBlE,EAAAA,EAAOmE,GAAEC,IAAAA,GAAAjE,EAAAA,EAAAA,GAAA,mYAsB9BkE,EAAwBrE,EAAAA,EAAOsE,GAAEC,IAAAA,GAAApE,EAAAA,EAAAA,GAAA,wFAOjCqE,EAAwBxE,EAAAA,EAAOkD,GAAEuB,IAAAA,GAAAtE,EAAAA,EAAAA,GAAA,2KAUjCuE,EAAyB1E,EAAAA,EAAOuD,EAACoB,IAAAA,GAAAxE,EAAAA,EAAAA,GAAA,gJClHjCyE,EAAmB,WAC9B,OACEtC,EAAAA,EAAAA,MAACW,EAAa,CAAApD,SAAA,EACZyC,EAAAA,EAAAA,MAACa,EAA0B,CAAAtD,SAAA,EACzBC,EAAAA,EAAAA,KAACsD,EAAoB,CAAAvD,UACnBC,EAAAA,EAAAA,KAACwD,EAAwB,CAAAzD,SAAC,eAE5BC,EAAAA,EAAAA,KAAC0D,EAAmB,CAAA3D,UAClByC,EAAAA,EAAAA,MAACoB,EAAmB,CAACnB,KAAK,SAAQ1C,SAAA,CAAC,SAEjCC,EAAAA,EAAAA,KAAC+D,EAAS,CAAAhE,UACRC,EAAAA,EAAAA,KAAA,OAAK+E,KAAI,GAAAC,OAAKC,EAAAA,EAAM,4BAM5BzC,EAAAA,EAAAA,MAAC4B,EAAkB,CAAArE,SAAA,EACjBC,EAAAA,EAAAA,KAACkE,EAAe,CAAAnE,UACdC,EAAAA,EAAAA,KAAA,OAAK+E,KAAI,GAAAC,OAAKC,EAAAA,EAAM,kBACJ,sBAIpBzC,EAAAA,EAAAA,MAAC+B,EAAqB,CAAAxE,SAAA,EACpBC,EAAAA,EAAAA,KAAC0E,EAAqB,CAAA3E,SAAC,sBACvBC,EAAAA,EAAAA,KAAC4E,EAAsB,CAAA7E,SAAC,UAGxBC,EAAAA,EAAAA,KAAC0E,EAAqB,CAAA3E,SAAC,gBACvBC,EAAAA,EAAAA,KAAC4E,EAAsB,CAAA7E,SAAC,YAGxBC,EAAAA,EAAAA,KAAC0E,EAAqB,CAAA3E,SAAC,aACvBC,EAAAA,EAAAA,KAAC4E,EAAsB,CAAA7E,SAAC,cAMhC,ECjDMqB,GACQ,WAoCd,OA/BO,WACL,IAAA8D,GAAgCC,EAAAA,EAAAA,UAAS/D,IAA8BgE,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAhEzD,EAAQ2D,EAAA,GAAE1D,EAAW0D,EAAA,GACtBE,GAAWC,EAAAA,EAAAA,MACTC,GAAgBC,EAAAA,EAAAA,MAAhBD,YAEFE,EACkB,eAAtBJ,EAASrD,UAAmD,gBAAtBqD,EAASrD,SAEjD,OACIjC,EAAAA,EAAAA,KAAC6C,EAAgB,CAAA9C,UACjBC,EAAAA,EAAAA,KAAC2F,EAAAA,EAAS,CAAA5F,UACNyC,EAAAA,EAAAA,MAACI,EAAU,CAAA7C,SAAA,EACTyC,EAAAA,EAAAA,MAACQ,EAAyB,CAACE,OAAQ0C,QAAQJ,GAAazF,SAAA,EACtDC,EAAAA,EAAAA,KAAC6F,EAAAA,EAAS,CAACrF,MAAOkF,EAAwB,YAAcF,KACxDxF,EAAAA,EAAAA,KAACwB,EAAmB,CAACE,YAAaA,EAAaD,SAAUA,QAGzDzB,EAAAA,EAAAA,KAAC8E,EAAgB,KACjB9E,EAAAA,EAAAA,KAAC8E,EAAgB,KACjB9E,EAAAA,EAAAA,KAAC8E,EAAgB,KAGnB9E,EAAAA,EAAAA,KAAC8F,EAAAA,GAAM,CAACC,QAAStE,UAO7B,C","sources":["components/Container/Container.jsx","components/Container/Container.styled.js","components/TitlePage/TitlePage.styled.js","components/TitlePage/TitlePage.jsx","components/ExercisesCategories/ExercisesCategories.styled.js","components/ExercisesCategories/ExercisesCategories.jsx","pages/Exercises/Exercises.styled.js","components/ExercisesItem/ExercisesItem.styled.js","components/ExercisesItem/ExercisesItem.jsx","pages/Exercises/Exercises.jsx"],"sourcesContent":["import { ContainerWrapper } from './Container.styled';\n\nconst Container = ({ children }) => {\n  return <ContainerWrapper>{children}</ContainerWrapper>;\n};\n\nexport default Container;\n","import styled from '@emotion/styled';\n\nexport const ContainerWrapper = styled.div`\n  width: 100%;\n  margin-inline: auto;\n  padding-inline: 20px;\n  /* padding-top: 61px; */\n\n  @media screen and (min-width: 375px) {\n    width: 375px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 768px;\n    padding-inline: 32px;\n    /* padding-top: 84px; */\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 1440px;\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const Title = styled.h1`\n  margin-top: 40px;\n  font-family: Roboto;\n  color: #efede8;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 1.375;\n\n  @media screen and (min-width: 375px) {\n    margin-top: 40px;\n    font-size: 24px;\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-top: 72px;\n    font-size: 32px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Title } from './TitlePage.styled';\n\nconst TitlePage = ({ title }) => {\n  return <Title>{title}</Title>;\n};\n\nexport default TitlePage;\n\nTitlePage.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const CategoriesFieldset = styled.fieldset`\n  margin-top: 20px;\n  display: flex;\n  font-size: 14px;\n  gap: 28px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    gap: 32px;\n  }\n`;\n\nexport const CategoryInput = styled.input`\n  display: none;\n`;\n\nexport const CategoryDiv = styled.div`\n  position: relative;\n`;\n\nexport const CategoryLabel = styled.label`\n  color: rgba(239, 237, 232, 0.4);\n  cursor: pointer;\n\n  ::before {\n    content: '';\n    position: absolute;\n    bottom: -8px;\n    left: 0;\n    width: 100%;\n    height: 4px;\n    border-radius: 2px;\n    background: #ef8964;\n    background-color: transparent;\n  }\n\n  ${({ selected }) =>\n    selected &&\n    `color: #EFEDE8;\n    \n    ::before {\n      background-color: #EF8964; \n    }\n  `}\n\n  &:hover {\n    color: #efede8;\n\n    ::before {\n      background-color: #ef8964;\n    }\n  }\n`;\n","import { useEffect, useRef } from 'react';\nimport { useNavigate, useResolvedPath } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport {\n  CategoriesFieldset,\n  CategoryDiv,\n  CategoryLabel,\n  CategoryInput,\n} from './ExercisesCategories.styled';\n\nconst EXERCISES_CATEGORY = {\n  BODY_PARTS: 'bodyPart',\n  MUSCLES: 'target',\n  EQUIPMENT: 'equipment',\n};\n\nexport default function ExercisesCategories({ category, setCategory }) {\n  const path = useResolvedPath();\n  const navigate = useNavigate();\n  const currentPathNameRef = useRef(path.pathname);\n\n  useEffect(() => {\n    if (currentPathNameRef.current !== '/exercises') {\n      navigate('./');\n    }\n  }, [category, navigate]);\n\n  useEffect(() => {\n    currentPathNameRef.current = path.pathname;\n  }, [path.pathname]);\n\n  const handleOptionChange = event => {\n    setCategory(event.target.value);\n  };\n\n  return (\n    <CategoriesFieldset>\n      <CategoryDiv>\n        <CategoryLabel selected={category === EXERCISES_CATEGORY.BODY_PARTS}>\n          <CategoryInput\n            type=\"radio\"\n            value={EXERCISES_CATEGORY.BODY_PARTS}\n            checked={category === EXERCISES_CATEGORY.BODY_PARTS}\n            onChange={handleOptionChange}\n          />\n          Body parts\n        </CategoryLabel>\n      </CategoryDiv>\n\n      <CategoryDiv>\n        <CategoryLabel selected={category === EXERCISES_CATEGORY.MUSCLES}>\n          <CategoryInput\n            type=\"radio\"\n            value={EXERCISES_CATEGORY.MUSCLES}\n            checked={category === EXERCISES_CATEGORY.MUSCLES}\n            onChange={handleOptionChange}\n          />\n          Muscles\n        </CategoryLabel>\n      </CategoryDiv>\n\n      <CategoryDiv>\n        <CategoryLabel selected={category === EXERCISES_CATEGORY.EQUIPMENT}>\n          <CategoryInput\n            type=\"radio\"\n            value={EXERCISES_CATEGORY.EQUIPMENT}\n            checked={category === EXERCISES_CATEGORY.EQUIPMENT}\n            onChange={handleOptionChange}\n          />\n          Equipment\n        </CategoryLabel>\n      </CategoryDiv>\n    </CategoriesFieldset>\n  );\n}\n\nExercisesCategories.propTypes = {\n  category: PropTypes.string.isRequired,\n  setCategory: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\n\nimport { exercises_background_1x } from 'utils/background';\nimport { exercises_background_2x} from 'utils/background';\n\nexport const ContentDiv = styled.div`\n  position: relative;\n  margin-inline: auto;\n`;\n\nexport const ExercisesWrapper = styled.div`  \n  padding-top: 62px;\n  padding-bottom: 80px;  \n  width: 100%;\n    @media screen and (min-width: 768px) {   \n      padding-bottom: 66px;  \n  }\n\n  @media screen and (min-width: 1440px) {      \n    padding-top: 85px;\n    padding-bottom: 81px;   \n    background: image-set(url(${exercises_background_1x}) 1x, url(${exercises_background_2x}) 2x);\n    background-repeat: no-repeat;\n    background-position: top 85px right;\n  }\n`;\n\nexport const WrapperTitleCategoriesDiv = styled.div`\n  margin-bottom: 48px;\n  display: flex;\n  flex-direction: column;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 64px;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: baseline;\n    margin-bottom: ${props => props.margin && '32px'};\n    margin-top: ${props => props.margin && '72px'};\n  }\n\n  @media screen and (min-width: 1440px) {\n    margin-bottom: 64px;\n    margin-bottom: ${props => props.margin && '32px'};\n    padding-inline: 96px;\n  }\n`;","import styled from '@emotion/styled';\n\nexport const ExercisesCard = styled.li`\n  margin-left: 20px;\n  margin-right: 20px;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n  padding: 16px;\n  justify-content: center;\n  align-items: flex-start;\n  border-radius: 12px;\n  border: 1px solid rgba(239, 237, 232, 0.2);\n  background: rgba(239, 237, 232, 0.05);\n  box-sizing: border-box;\n\n  @media screen and (min-width: 768px) {\n    /* width: calc((100% - 16px) / 2); */\n    overflow: hidden;\n  }\n\n  @media screen and (min-width: 1440px) {\n    max-width: 405px;\n  }\n`;\nexport const ExercisesCardStatusWorkout = styled.label`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-bottom: 27px;\n  justify-content: space-between;\n`;\nexport const ExercisesCardWorkout = styled.span`\n  display: inline-flex;\n  padding: 5px 7.5px;\n  justify-content: center;\n  align-items: center;\n  border-radius: 4px;\n  background: rgba(239, 237, 232, 0.05);\n`;\nexport const ExercisesCardWorkoutText = styled.p`\n  color: #efede8;\n  font-size: 12px;\n  font-weight: 700;\n  line-height: normal;\n  text-transform: uppercase;\n`;\n\nexport const ExercisesCardStatus = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const ExercisesCardAddBtn = styled.button`\n  background: transparent;\n  border: none;\n  color: #e6533c;\n  font-size: 16px;\n  line-height: 24px;\n  padding: 0;\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    color: #efede8;\n  }\n`;\n\nexport const IconStart = styled.svg`\n  display: block;\n  width: 16px;\n  height: 16px;\n  margin-left: 8px;\n  margin-top: -3px;\n  fill: #efa082;\n  &:hover,\n  &:focus {\n    fill: #efede8;\n  }\n`;\n\nexport const IconBeforeTitle = styled.svg`\n  position: absolute;\n  width: 24px;\n  height: 24px;\n  left: 0;\n  top: calc(50% - 12px);\n  fill: #efa082;\n`;\n\nexport const ExercisesCardTitle = styled.h4`\n  position: relative;\n  font-size: 24px;\n  line-height: 1.333;\n  color: #efede8;\n\n  margin-bottom: 8px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  padding-left: 40px;\n  max-width: 100%;\n  /* &::before {\n    content: url();\n    position: absolute;\n    width: 24px;\n    height: 24px;\n    left: 0;\n    top: calc(50% - 12px);\n  } */\n`;\n\nexport const ExercisesCardInfoList = styled.ul`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  gap: 16px;\n`;\n\nexport const ExercisesCardInfoItem = styled.li`\n  display: flex;\n  flex-wrap: nowrap;\n  /* flex-direction: row; */\n  gap: 4px;\n  color: rgba(239, 237, 232, 0.4);\n  font-size: 12px;\n  line-height: 18px;\n`;\n\nexport const ExercisesCardInfoValue = styled.p`\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  color: #efede8;\n  font-size: 12px;\n  line-height: 18px;\n`;\n","import sprite from 'assets/images/sprite.svg';\n\nimport {\n  ExercisesCard,\n  ExercisesCardStatusWorkout,\n  ExercisesCardWorkout,\n  ExercisesCardWorkoutText,\n  ExercisesCardStatus,\n  ExercisesCardAddBtn,\n  IconStart,\n  ExercisesCardTitle,\n  IconBeforeTitle,\n  ExercisesCardInfoList,\n  ExercisesCardInfoItem,\n  ExercisesCardInfoValue,\n} from './ExercisesItem.styled';\n\n// тут в пропах має бути { exercise }\n\nexport const ExerciseCardItem = () => {\n  return (\n    <ExercisesCard>\n      <ExercisesCardStatusWorkout>\n        <ExercisesCardWorkout>\n          <ExercisesCardWorkoutText>WORKOUT</ExercisesCardWorkoutText>\n        </ExercisesCardWorkout>\n        <ExercisesCardStatus>\n          <ExercisesCardAddBtn type=\"button\">\n            Start\n            <IconStart>\n              <use href={`${sprite}#icon-arrow`} />\n            </IconStart>\n          </ExercisesCardAddBtn>\n        </ExercisesCardStatus>\n      </ExercisesCardStatusWorkout>\n\n      <ExercisesCardTitle>\n        <IconBeforeTitle>\n          <use href={`${sprite}#icon-icon`} />\n        </IconBeforeTitle>\n        Exercise title {/* {exercise.title} */}\n      </ExercisesCardTitle>\n\n      <ExercisesCardInfoList>\n        <ExercisesCardInfoItem>Burned calories:</ExercisesCardInfoItem>\n        <ExercisesCardInfoValue>\n          312 {/* {exercise.calories || '999'} */}\n        </ExercisesCardInfoValue>\n        <ExercisesCardInfoItem>Body part:</ExercisesCardInfoItem>\n        <ExercisesCardInfoValue>\n          Waist {/* {exercise.part || '999'} */}\n        </ExercisesCardInfoValue>\n        <ExercisesCardInfoItem>Target:</ExercisesCardInfoItem>\n        <ExercisesCardInfoValue>\n          Abs {/* {exercise.target || '300'} */}\n        </ExercisesCardInfoValue>\n      </ExercisesCardInfoList>\n    </ExercisesCard>\n  );\n};\n","import { useState } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\n\nimport Container from 'components/Container';\nimport TitlePage from 'components/TitlePage';\nimport ExercisesCategories from 'components/ExercisesCategories';\nimport { ExercisesWrapper, ContentDiv, WrapperTitleCategoriesDiv} from './Exercises.styled';\n\nimport { ExerciseCardItem } from 'components/ExercisesItem/ExercisesItem';\n\nconst EXERCISES_CATEGORY = {\n  BODY_PARTS: 'bodyPart',\n  MUSCLES: 'target',\n  EQUIPMENT: 'equipment',\n};\n\nexport function Exercises() {\n  const [category, setCategory] = useState(EXERCISES_CATEGORY.BODY_PARTS);\n  const location = useLocation();\n  const { subcategory } = useParams();\n\n  const subcategoriesLocation =\n    location.pathname === '/exercises' || location.pathname === '/exercises/';\n\n  return (   \n      <ExercisesWrapper>\n      <Container>\n          <ContentDiv>\n            <WrapperTitleCategoriesDiv margin={Boolean(subcategory)}>\n              <TitlePage title={subcategoriesLocation ? 'Exercises' : subcategory} />\n              <ExercisesCategories setCategory={setCategory} category={category} />\n            </WrapperTitleCategoriesDiv>\n\n              <ExerciseCardItem></ExerciseCardItem>\n              <ExerciseCardItem></ExerciseCardItem>\n              <ExerciseCardItem></ExerciseCardItem>\n     \n\n            <Outlet context={category} />\n          </ContentDiv>\n        </Container>\n      </ExercisesWrapper>\n    \n\n  );\n}\n\nexport default Exercises;\n"],"names":["_ref","children","_jsx","ContainerWrapper","styled","div","_templateObject","_taggedTemplateLiteral","Title","h1","title","CategoriesFieldset","fieldset","CategoryInput","input","_templateObject2","CategoryDiv","_templateObject3","CategoryLabel","label","_templateObject4","selected","EXERCISES_CATEGORY","BODY_PARTS","MUSCLES","EQUIPMENT","ExercisesCategories","category","setCategory","path","useResolvedPath","navigate","useNavigate","currentPathNameRef","useRef","pathname","useEffect","current","handleOptionChange","event","target","value","_jsxs","type","checked","onChange","ContentDiv","ExercisesWrapper","exercises_background_1x","exercises_background_2x","WrapperTitleCategoriesDiv","props","margin","ExercisesCard","li","ExercisesCardStatusWorkout","ExercisesCardWorkout","span","ExercisesCardWorkoutText","p","ExercisesCardStatus","_templateObject5","ExercisesCardAddBtn","button","_templateObject6","IconStart","svg","_templateObject7","IconBeforeTitle","_templateObject8","ExercisesCardTitle","h4","_templateObject9","ExercisesCardInfoList","ul","_templateObject10","ExercisesCardInfoItem","_templateObject11","ExercisesCardInfoValue","_templateObject12","ExerciseCardItem","href","concat","sprite","_useState","useState","_useState2","_slicedToArray","location","useLocation","subcategory","useParams","subcategoriesLocation","Container","Boolean","TitlePage","Outlet","context"],"sourceRoot":""}
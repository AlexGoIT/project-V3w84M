{"version":3,"file":"static/js/361.b769558a.chunk.js","mappings":"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","sources":["components/Notice/Notice.styled.js","components/Notice/Notice.jsx","components/TitlePage/TitlePage.styled.js","components/TitlePage/TitlePage.jsx","components/DayDashboard/DayDashboard.styled.js","components/DayDashboard/DayDashboard.jsx","components/DayExercises/DayExercises.styled.js","components/DayExercises/DayExercises.jsx","components/DayProducts/DayProducts.styled.js","components/DayProducts/DayProducts.jsx","components/DaySwitch/DaySwitch.styled.js","components/DaySwitch/Datepicker/Datepicker.styled.jsx","components/DaySwitch/Datepicker/Datepicker.jsx","components/DaySwitch/DaySwitch.jsx","pages/Diary/Diary.styled.js","pages/Diary/Diary.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const NoticeArea = styled.div`\n  display: flex;\n  gap: 8px;\n  width: 100%;\n`;\n\nexport const NoticeIcon = styled.div`\n  width: 24px;\n  height: 24px;\n  border-radius: 12px;\n  background-color: #efa082;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const WarningIcon = styled.svg({\n  width: '16px',\n  height: '16px',\n});\n\nexport const NoticeMessage = styled.div`\n  width: 100%;\n  height: auto;\n  color: rgba(239, 237, 232, 0.3);\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 1.5;\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\n","import PropTypes from 'prop-types';\n\nimport { NoticeMessage, NoticeArea, NoticeIcon } from './Notice.styled';\n\nimport sprite from 'assets/images/sprite.svg';\n\nconst Notice = ({ notice }) => {\n  return (\n    <NoticeArea>\n      <NoticeIcon>\n        <svg width=\"18\" height=\"18\" fill=\"#efede8\">\n          <use href={`${sprite}#warning`} />\n        </svg>\n      </NoticeIcon>\n      <NoticeMessage>{notice}</NoticeMessage>\n    </NoticeArea>\n  );\n};\n\nexport default Notice;\n\nNotice.propTypes = {\n  notice: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Title = styled.h1`\n  margin-top: 72px;\n  font-family: Roboto;\n  color: #efede8;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 1.375;\n\n  @media screen and (min-width: 375px) {\n    margin-top: 40px;\n    font-size: 24px;\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-top: 72px;\n    font-size: 32px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Title } from './TitlePage.styled';\n\nconst TitlePage = ({ title }) => {\n  return <Title>{title}</Title>;\n};\n\nexport default TitlePage;\n\nTitlePage.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const DayDashboardArea = styled.ul`\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n\n  @media screen and (min-width: 375px) {\n    height: 328px;\n    margin-bottom: 20px;\n    row-gap: 20px;\n    column-gap: 13px;\n  }\n\n  @media screen and (min-width: 768px) {\n    height: 248px;\n    margin-bottom: 32px;\n    row-gap: 16px;\n    column-gap: 16px;\n    flex-direction: column;\n  }\n\n  @media screen and (min-width: 1440px) {\n    height: 380px;\n    margin-bottom: 48px;\n    flex-direction: row;\n  }\n`;\n\nconst setBgColor = props => {\n  switch (props.accent) {\n    case 'true':\n      return '#e6533c';\n    case 'false':\n      return 'rgba(239, 237, 232, 0.05)';\n    default:\n      return 'rgba(239, 237, 232, 0.05)';\n  }\n};\n\nexport const DashboardItem = styled.li`\n  border: 1px solid;\n  border-color: rgba(239, 237, 232, 0.2);\n  border-radius: 12px;\n  background-color: ${setBgColor};\n  padding: 18px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  @media screen and (min-width: 375px) {\n    width: 161px;\n    height: 96px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 187px;\n    height: 116px;\n  }\n`;\n\nexport const TitleArea = styled.div`\n  display: flex;\n  gap: 8px;\n  align-items: center;\n`;\n\nexport const Icon = styled.svg(\n  {\n    width: '20px',\n    height: '20px',\n  },\n  ({ iconColor = '#EF8964' }) => ({\n    fill: iconColor,\n    stroke: iconColor,\n  })\n);\n\nconst setTitleColor = props => {\n  switch (props.accent) {\n    case 'true':\n      return 'rgba(239, 237, 232, 0.8)';\n    case 'false':\n      return 'rgba(239, 237, 232, 0.4)';\n    default:\n      return 'rgba(239, 237, 232, 0.4)';\n  }\n};\n\nexport const Title = styled.p`\n  font-size: 12px;\n  font-weight: 400;\n  color: ${setTitleColor};\n`;\n\nexport const Value = styled.p`\n  font-weight: 700;\n  color: #efede8;\n\n  @media screen and (min-width: 375px) {\n    font-size: 18px;\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 24px;\n  }\n`;\n","import {\n  DayDashboardArea,\n  DashboardItem,\n  TitleArea,\n  Title,\n  Value,\n  Icon,\n} from './DayDashboard.styled';\nimport sprite from 'assets/images/sprite.svg';\n\nconst DayDashboard = () => {\n  return (\n    <DayDashboardArea>\n      <DashboardItem accent=\"true\">\n        <TitleArea>\n          <Icon iconColor=\"#EF8964\">\n            <use href={`${sprite}#food`} />\n          </Icon>\n          <Title accent=\"true\">Daily calorie intake</Title>\n        </TitleArea>\n        <Value>2000</Value>\n      </DashboardItem>\n      <DashboardItem accent=\"true\">\n        <TitleArea>\n          <Icon iconColor=\"#EF8964\">\n            <use href={`${sprite}#dumbbell`} />\n          </Icon>\n          <Title accent=\"true\">Daily physical activity</Title>\n        </TitleArea>\n        <Value>110 min</Value>\n      </DashboardItem>\n      <DashboardItem accent=\"false\">\n        <TitleArea>\n          <Icon iconColor=\"#EF8964\">\n            <use href={`${sprite}#apple`} />\n          </Icon>\n          <Title accent=\"false\">Calories consumed</Title>\n        </TitleArea>\n        <Value>...</Value>\n      </DashboardItem>\n      <DashboardItem accent=\"false\">\n        <TitleArea>\n          <Icon iconColor=\"#EF8964\">\n            <use href={`${sprite}#fire`} />\n          </Icon>\n          <Title accent=\"false\">Calories burned</Title>\n        </TitleArea>\n        <Value>...</Value>\n      </DashboardItem>\n      <DashboardItem accent=\"false\">\n        <TitleArea>\n          <Icon iconColor=\"#EF8964\">\n            <use href={`${sprite}#bubble`} />\n          </Icon>\n          <Title accent=\"false\">Calories remaining</Title>\n        </TitleArea>\n        <Value>...</Value>\n      </DashboardItem>\n      <DashboardItem accent=\"false\">\n        <TitleArea>\n          <Icon iconColor=\"#EF8964\">\n            <use href={`${sprite}#figure`} />\n          </Icon>\n          <Title accent=\"false\">Sports remaining</Title>\n        </TitleArea>\n        <Value>...</Value>\n      </DashboardItem>\n    </DayDashboardArea>\n  );\n};\n\nexport default DayDashboard;\n","import styled from '@emotion/styled';\n\nexport const DayExercisesArea = styled.div`\n  position: relative;\n  width: 100%;\n  border: 1px solid;\n  border-color: rgba(239, 237, 232, 0.2);\n  border-radius: 12px;\n  background-color: rgba(239, 237, 232, 0.05);\n  padding: 16px;\n\n  @media screen and (min-width: 375px) {\n    height: 335px;\n  }\n\n  @media screen and (min-width: 768px) {\n    height: 234px;\n  }\n`;\n\nexport const TitleArea = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  @media screen and (min-width: 375px) {\n    margin-bottom: 22px;\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 16px;\n  }\n`;\n\nexport const Title = styled.h3`\n  font-size: 14px;\n  font-weight: 400;\n  color: rgba(239, 237, 232, 0.5);\n`;\n\nexport const Button = styled.button`\n  background-color: inherit;\n  border: none;\n  display: flex;\n  gap: 8px;\n  align-items: center;\n`;\n\nexport const Add = styled.p`\n  font-weight: 500;\n  color: #e6533c;\n\n  @media screen and (min-width: 375px) {\n    font-size: 14px;\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\n\nexport const ArrowIcon = styled.svg(\n  {\n    width: '16px',\n    height: '16px',\n  },\n  ({ iconColor = '#e6533c' }) => ({\n    fill: iconColor,\n    stroke: iconColor,\n  })\n);\n\nexport const TableArea = styled.div`\n  @media screen and (min-width: 1440px) {\n    padding-inline: 16px;\n  }\n`;\n\nexport const Message = styled.p`\n  font-weight: 400;\n  color: rgba(239, 237, 232, 0.3);\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n\n  @media screen and (min-width: 375px) {\n    font-size: 14px;\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\n","import {\n  DayExercisesArea,\n  TitleArea,\n  Title,\n  Button,\n  Add,\n  ArrowIcon,\n  TableArea,\n  Message,\n} from './DayExercises.styled';\nimport sprite from 'assets/images/sprite.svg';\n\nconst DayExercises = () => {\n  return (\n    <DayExercisesArea>\n      <TitleArea>\n        <Title>Execrcises</Title>\n        <Button>\n          <Add>Add product</Add>\n          <ArrowIcon iconColor=\"#E6533C\">\n            <use href={`${sprite}#arrow`} />\n          </ArrowIcon>\n        </Button>\n      </TitleArea>\n      <TableArea>\n        <Message>Not found exercises</Message>\n      </TableArea>\n    </DayExercisesArea>\n  );\n};\n\nexport default DayExercises;\n","import styled from '@emotion/styled';\n\nexport const DayProductsArea = styled.div`\n  position: relative;\n  width: 100%;\n  border: 1px solid;\n  border-color: rgba(239, 237, 232, 0.2);\n  border-radius: 12px;\n  background-color: rgba(239, 237, 232, 0.05);\n  padding: 16px;\n\n  @media screen and (min-width: 375px) {\n    height: 335px;\n  }\n\n  @media screen and (min-width: 768px) {\n    height: 234px;\n  }\n`;\n\nexport const TitleArea = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  @media screen and (min-width: 375px) {\n    margin-bottom: 22px;\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 16px;\n  }\n`;\n\nexport const Title = styled.h3`\n  font-size: 14px;\n  font-weight: 400;\n  color: rgba(239, 237, 232, 0.5);\n`;\n\nexport const Button = styled.button`\n  background-color: inherit;\n  border: none;\n  display: flex;\n  gap: 8px;\n  align-items: center;\n`;\n\nexport const Add = styled.p`\n  font-weight: 500;\n  color: #e6533c;\n\n  @media screen and (min-width: 375px) {\n    font-size: 14px;\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\n\nexport const ArrowIcon = styled.svg(\n  {\n    width: '16px',\n    height: '16px',\n  },\n  ({ iconColor = '#e6533c' }) => ({\n    fill: iconColor,\n    stroke: iconColor,\n  })\n);\n\nexport const TableArea = styled.div`\n  @media screen and (min-width: 1440px) {\n    padding-inline: 16px;\n  }\n`;\n\nexport const Message = styled.p`\n  font-weight: 400;\n  color: rgba(239, 237, 232, 0.3);\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n\n  @media screen and (min-width: 375px) {\n    font-size: 14px;\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\n","import {\n  DayProductsArea,\n  TitleArea,\n  Title,\n  Button,\n  Add,\n  ArrowIcon,\n  TableArea,\n  Message,\n} from './DayProducts.styled';\nimport sprite from 'assets/images/sprite.svg';\n// import { fetchProducts } from '../../redux/api/apiOperations';\n// import { useDispatch, useSelector } from 'react-redux';\n// import {\n//   selectIsLoading,\n//   selectError,\n//   selectProducts,\n// } from '../../redux/api/apiSelectors';\n// import { useEffect } from 'react';\n// import Loader from 'components/Loader';\n\nconst DayProducts = () => {\n  // const dispatch = useDispatch();\n  // const isLoading = useSelector(selectIsLoading);\n  // const error = useSelector(selectError);\n  // const productsData = useSelector(selectProducts);\n  // const { result, total_results } = productsData;\n  // console.log(result);\n\n  // useEffect(() => {\n  //   dispatch(fetchProducts());\n  // }, [dispatch]);\n\n  return (\n    <DayProductsArea>\n      <TitleArea>\n        <Title>Products</Title>\n        <Button>\n          <Add>Add product</Add>\n          <ArrowIcon iconColor=\"#E6533C\">\n            <use href={`${sprite}#arrow`} />\n          </ArrowIcon>\n        </Button>\n      </TitleArea>\n      <TableArea>\n        {/* {isLoading && <Loader />}\n        {total_results > 0 ? (\n          <div></div>\n        ) : ( */}\n        <table>\n          <tr>\n            <th>Title</th>\n            <th>Category</th>\n            <th>Calories</th>\n            <th>Weight</th>\n            <th>Recommend</th>\n            <th>del</th>\n          </tr>\n        </table>\n        <Message>Not found products</Message>\n        {/* )}\n        {error && alert('Sorry, something is wrong!')} */}\n      </TableArea>\n    </DayProductsArea>\n  );\n};\n\nexport default DayProducts;\n","import styled from '@emotion/styled';\n\nexport const DaySwitchArea = styled.div`\n  position: absolute;\n  display: flex;\n\n  justify-content: center;\n  align-items: center;\n\n  @media screen and (min-width: 375px) {\n    right: 0;\n    top: 42px;\n    gap: 20px;\n  }\n\n  @media screen and (min-width: 768px) {\n    top: 52px;\n    gap: 40px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    right: 64px;\n  }\n`;\n\nexport const ArrowIcon = styled.svg`\n  width: 16px;\n  height: 16px;\n  // rgba(239,237,232,0.2) когда неактивная\n  fill: #efede8;\n\n  &:hover,\n  :focus {\n    fill: #ef8964;\n  }\n`;\n\nexport const Button = styled.button`\n  border: none;\n  background-color: inherit;\n  width: 20px;\n  height: 20px;\n  padding: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const ArrowArea = styled.div`\n  display: flex;\n  gap: 6px;\n`;\n","import { css } from '@emotion/react';\nimport styled from '@emotion/styled';\n\nexport const calendarGlobalStyles = css`\n  .react-datepicker__wrapper {\n    position: relative;\n  }\n  .react-datepicker {\n    position: absolute;\n    left: 0;\n    top: 50%;\n    transform: translate(-1%, 0%);\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 280px;\n    height: auto;\n    padding: 20px 18px;\n    background-color: #ef8964;\n    font-family: Inter;\n    border-radius: 16px;\n  }\n  .react-datepicker__month-container {\n    float: inherit;\n    box-sizing: border-box;\n  }\n  .react-datepicker__header {\n    position: relative;\n    background-color: #ef8964;\n  }\n  .react-datepicker__day-names {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 8px 8px;\n    border-top: 1px solid rgba(239, 237, 232, 0.2);\n  }\n  .react-datepicker__header:not(.react-datepicker__header--has-time-select) {\n    border-bottom: 0px;\n    padding: 0;\n  }\n  .react-datepicker__day\n    react-datepicker__day--018.react-datepicker__day--selected\n    react-datepicker__day--today {\n    outline: none;\n    border: none;\n  }\n  .react-datepicker__current-month {\n    font-family: Inter;\n    font-size: 18px;\n    font-style: normal;\n    font-weight: 600;\n    text-align: center;\n    color: #efede8;\n    margin-bottom: 8px;\n  }\n  .react-datepicker__day-name {\n    margin: 0;\n    padding: 8px 8px;\n    font-family: Inter;\n    font-size: 14px;\n    font-style: normal;\n    font-weight: 600;\n    line-height: 18px;\n    text-align: center;\n    color: rgba(239, 237, 232, 0.5);\n  }\n  .react-datepicker__navigation {\n    margin-top: 4px;\n    color: #efe8eb;\n  }\n  .react-datepicker__navigation--previous {\n    left: 7px;\n    top: 20px;\n    width: 18px;\n    height: 18px;\n  }\n  .react-datepicker__navigation--next {\n    right: 7px;\n    top: 20px;\n    width: 18px;\n    height: 18px;\n  }\n  .react-datepicker__navigation-icon::before:hover:focus {\n    border-color: #efede8;\n  }\n  .react-datepicker__week {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    color: #efede8;\n  }\n  .react-datepicker__day {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 8px;\n    flex-shrink: 0;\n    margin: 0;\n    width: 32px;\n    height: 32px;\n    border-radius: 50%;\n    color: #efede8;\n    font-family: Inter;\n    font-size: 14px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: 18px;\n    text-align: center;\n  }\n  .react-datepicker__month {\n    display: flex;\n    gap: 7px;\n    flex-direction: column;\n    justify-content: space-between;\n    padding-top: 14px;\n    margin: 0;\n  }\n  .react-datepicker__day--selected {\n    background-color: #040404;\n    color: #efe8e8;\n    font-size: 14px;\n  }\n  .react-datepicker__day--selected:hover {\n    border-radius: 50%;\n    background-color: #040404;\n  }\n  .react-datepicker__day:hover {\n    border-radius: 50%;\n    background-color: #040404;\n    color: #efede8;\n  }\n  .react-datepicker__day--keyboard-selected {\n    border-radius: 50%;\n    background-color: #040404;\n    color: #efede8;\n  }\n  .react-datepicker__day--weekend {\n  }\n  .react-datepicker__day--disabled {\n    opacity: 50%;\n  }\n  .react-datepicker__day--outside-month {\n    background-color: transparent;\n    pointer-events: none;\n    opacity: 0;\n  }\n  .react-datepicker__view-calendar-icon input {\n    padding: 6px 10px 5px 13px;\n  }\n  .react-datepicker__triangle {\n    visibility: hidden;\n  }\n`;\n\nexport const TitleWrapper = styled.button`\n  color: #efede8;\n  background: inherit;\n  border: none;\n  font-weight: 700;\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 24px;\n  display: flex;\n  gap: 8px;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const CalendarIcon = styled.svg`\n  width: 24px;\n  height: 24px;\n  fill: #ef8964;\n  stroke: #ef8964;\n`;\n","import { forwardRef, useState } from 'react';\nimport { format } from 'date-fns';\nimport DatePicker from 'react-datepicker';\nimport {\n  calendarGlobalStyles,\n  TitleWrapper,\n  CalendarIcon,\n} from './Datepicker.styled';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport sprite from 'assets/images/sprite.svg';\nimport { Global } from '@emotion/react';\n\nconst StyledDatepicker = () => {\n  const [selectedDate, setSelectedDate] = useState(Date.now());\n  console.log(selectedDate);\n\n  const CustomInput = forwardRef(({ value, onClick }, ref) => {\n    return (\n      <TitleWrapper onClick={onClick} ref={ref}>\n        {format(selectedDate, 'MM/dd/yyyy')}\n        <CalendarIcon iconColor=\"#EF8964\">\n          <use href={`${sprite}#calendar`} />\n        </CalendarIcon>\n      </TitleWrapper>\n    );\n  });\n\n  const date = new Date();\n\n  return (\n    <>\n      <Global styles={calendarGlobalStyles} />\n      <DatePicker\n        selected={selectedDate}\n        onChange={date => {\n          setSelectedDate(date);\n        }}\n        customInput={<CustomInput />}\n        dateFormat={'MM dd yyyy'}\n        calendarStartDay={1}\n        //popperPlacement={'bottom-start'}\n        minDate={date} //временно текущий день, необх поставить дату регистрации юзера\n        //maxDate={(new Date(), 3)}\n      />\n    </>\n  );\n};\n\nexport default StyledDatepicker;\n","import {\n  DaySwitchArea,\n  ArrowIcon,\n  Button,\n  ArrowArea,\n} from './DaySwitch.styled';\nimport StyledDatepicker from './Datepicker';\nimport sprite from 'assets/images/sprite.svg';\n//import { useState } from 'react';\n\nconst DaySwitch = () => {\n  return (\n    <DaySwitchArea>\n      <StyledDatepicker />\n      <ArrowArea>\n        <Button type=\"button\">\n          <ArrowIcon iconColor=\"#efede8\">\n            <use href={`${sprite}#icon-chevron-left`} />\n          </ArrowIcon>\n        </Button>\n        <Button type=\"button\">\n          <ArrowIcon iconColor=\"#efede8)\">\n            <use href={`${sprite}#icon-chevron-right`} />\n          </ArrowIcon>\n        </Button>\n      </ArrowArea>\n    </DaySwitchArea>\n  );\n};\n\nexport default DaySwitch;\n","import styled from '@emotion/styled';\n\nexport const ForPosition = styled.div`\n  width: 100%;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n\n  @media screen and (min-width: 1440px) {\n    padding-inline: 64px;\n  }\n`;\n\nexport const DiaryContainer = styled.div`\n  display: flex;\n\n  @media screen and (min-width: 375px) {\n    flex-direction: column;\n    gap: 40px;\n    margin-top: 40px;\n  }\n\n  @media screen and (min-width: 768px) {\n    gap: 64px;\n    margin-top: 32px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    flex-direction: row;\n    gap: 32px;\n  }\n`;\n\nexport const Left = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  @media screen and (min-width: 375px) {\n    width: 335px;\n    gap: 40px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 704px;\n    gap: 32px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 826px;\n  }\n`;\n\nexport const Right = styled.div`\n  @media screen and (min-width: 375px) {\n    width: 335px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 593px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 390px;\n  }\n`;\n","import Container from 'components/Container';\nimport DayDashboard from 'components/DayDashboard';\nimport DayExercises from 'components/DayExercises';\nimport DayProducts from 'components/DayProducts';\nimport DaySwitch from 'components/DaySwitch';\nimport TitlePage from 'components/TitlePage';\nimport { DiaryContainer, Left, Right, ForPosition } from './Diary.styled';\nimport Notice from 'components/Notice';\n\nconst Diary = () => {\n  return (\n    <Container>\n      <ForPosition>\n        <TitlePage title=\"Diary\" />\n        <DaySwitch />\n        <DiaryContainer>\n          <Left>\n            <DayProducts />\n            <DayExercises />\n          </Left>\n          <Right>\n            <DayDashboard />\n            <Notice notice=\"Record all your meals in the calorie diary every day. This will help you be aware of your nutrition and make informed choices.\" />\n          </Right>\n        </DiaryContainer>\n      </ForPosition>\n    </Container>\n  );\n};\n\nexport default Diary;\n"],"names":["NoticeArea","styled","div","_templateObject","_taggedTemplateLiteral","NoticeIcon","_templateObject2","NoticeMessage","svg","width","height","_templateObject3","_ref","notice","_jsxs","children","_jsx","fill","href","concat","sprite","Title","h1","title","DayDashboardArea","ul","DashboardItem","li","props","accent","TitleArea","Icon","_ref$iconColor","iconColor","stroke","p","_templateObject4","Value","_templateObject5","DayExercisesArea","h3","Button","button","Add","ArrowIcon","TableArea","_templateObject6","Message","_templateObject7","DayProductsArea","DaySwitchArea","ArrowArea","calendarGlobalStyles","css","TitleWrapper","CalendarIcon","_useState","useState","Date","now","_useState2","_slicedToArray","selectedDate","setSelectedDate","console","log","CustomInput","forwardRef","ref","value","onClick","format","date","_Fragment","Global","styles","DatePicker","selected","onChange","customInput","dateFormat","calendarStartDay","minDate","StyledDatepicker","type","ForPosition","DiaryContainer","Left","Right","Container","TitlePage","DaySwitch","DayProducts","DayExercises","DayDashboard","Notice"],"sourceRoot":""}
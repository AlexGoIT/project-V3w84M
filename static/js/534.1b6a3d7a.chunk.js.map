{"version":3,"file":"static/js/534.1b6a3d7a.chunk.js","mappings":"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","sources":["components/Container/Container.jsx","components/Container/Container.styled.js","components/Notice/Notice.styled.js","components/Notice/Notice.jsx","components/TitlePage/TitlePage.styled.js","components/TitlePage/TitlePage.jsx","components/DayDashboard/DayDashboard.styled.js","components/DayDashboard/DayDashboard.jsx","components/DayExercises/DayExercises.styled.js","components/DayExercises/ExerciseItem/ExerciseItem.styled.js","components/DayExercises/ExerciseItem/ExerciseItem.jsx","components/DayExercises/DayExercises.jsx","components/DayProducts/DayProducts.styled.js","components/DayProducts/ProductItem/ProductItem.styled.js","components/DayProducts/ProductItem/ProductItem.jsx","components/DayProducts/DayProducts.jsx","components/DaySwitch/DaySwitch.styled.js","components/DaySwitch/Datepicker/Datepicker.styled.jsx","components/DaySwitch/Datepicker/Datepicker.jsx","components/DaySwitch/DaySwitch.jsx","pages/Diary/Diary.styled.js","pages/Diary/Diary.jsx","redux/api/apiSelectors.js"],"sourcesContent":["import { ContainerWrapper } from './Container.styled';\n\nconst Container = ({ children }) => {\n  return <ContainerWrapper>{children}</ContainerWrapper>;\n};\n\nexport default Container;\n","import styled from '@emotion/styled';\n\nexport const ContainerWrapper = styled.div`\n  width: 100%;\n  margin-inline: auto;\n  padding-inline: 20px;\n  padding-top: 61px;\n\n  @media screen and (min-width: 375px) {\n    width: 375px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 768px;\n    padding-inline: 32px;\n    padding-top: 84px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 1440px;\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const NoticeArea = styled.div`\n  display: flex;\n  gap: 8px;\n  width: 100%;\n`;\n\nexport const NoticeIcon = styled.div`\n  width: 24px;\n  height: 24px;\n  border-radius: 12px;\n  background-color: #efa082;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const WarningIcon = styled.svg({\n  width: '16px',\n  height: '16px',\n});\n\nexport const NoticeMessage = styled.div`\n  width: 100%;\n  height: auto;\n  color: rgba(239, 237, 232, 0.3);\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 1.5;\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\n","import PropTypes from 'prop-types';\n\nimport { NoticeMessage, NoticeArea, NoticeIcon } from './Notice.styled';\n\nimport sprite from 'assets/images/sprite.svg';\n\nconst Notice = ({ notice }) => {\n  return (\n    <NoticeArea>\n      <NoticeIcon>\n        <svg width=\"18\" height=\"18\" fill=\"#efede8\">\n          <use href={`${sprite}#warning`} />\n        </svg>\n      </NoticeIcon>\n      <NoticeMessage>{notice}</NoticeMessage>\n    </NoticeArea>\n  );\n};\n\nexport default Notice;\n\nNotice.propTypes = {\n  notice: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Title = styled.h1`\n  margin-top: 72px;\n  font-family: Roboto;\n  color: #efede8;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 1.375;\n\n  @media screen and (min-width: 375px) {\n    margin-top: 40px;\n    font-size: 24px;\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-top: 72px;\n    font-size: 32px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Title } from './TitlePage.styled';\n\nconst TitlePage = ({ title }) => {\n  return <Title>{title}</Title>;\n};\n\nexport default TitlePage;\n\nTitlePage.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const DayDashboardArea = styled.ul`\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n\n  @media screen and (min-width: 375px) {\n    height: 328px;\n    margin-bottom: 20px;\n    row-gap: 20px;\n    column-gap: 13px;\n  }\n\n  @media screen and (min-width: 768px) {\n    height: 248px;\n    margin-bottom: 32px;\n    row-gap: 16px;\n    column-gap: 16px;\n    flex-direction: column;\n  }\n\n  @media screen and (min-width: 1440px) {\n    height: 380px;\n    margin-bottom: 48px;\n    flex-direction: row;\n  }\n`;\n\nconst setBgColor = props => {\n  switch (props.accent) {\n    case 'true':\n      return '#e6533c';\n    case 'false':\n      return 'rgba(239, 237, 232, 0.05)';\n    default:\n      return 'rgba(239, 237, 232, 0.05)';\n  }\n};\n\nexport const DashboardItem = styled.li`\n  border: 1px solid;\n  border-color: rgba(239, 237, 232, 0.2);\n  border-radius: 12px;\n  background-color: ${setBgColor};\n  padding: 18px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  @media screen and (min-width: 375px) {\n    width: 161px;\n    height: 96px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 187px;\n    height: 116px;\n  }\n`;\n\nexport const TitleArea = styled.div`\n  display: flex;\n  gap: 8px;\n  align-items: center;\n`;\n\nexport const Icon = styled.svg(\n  {\n    width: '20px',\n    height: '20px',\n  },\n  ({ iconColor = '#EF8964' }) => ({\n    fill: iconColor,\n    stroke: iconColor,\n  })\n);\n\nconst setTitleColor = props => {\n  switch (props.accent) {\n    case 'true':\n      return 'rgba(239, 237, 232, 0.8)';\n    case 'false':\n      return 'rgba(239, 237, 232, 0.4)';\n    default:\n      return 'rgba(239, 237, 232, 0.4)';\n  }\n};\n\nexport const Title = styled.p`\n  font-size: 12px;\n  font-weight: 400;\n  color: ${setTitleColor};\n`;\n\nexport const Value = styled.p`\n  font-weight: 700;\n  color: #efede8;\n\n  @media screen and (min-width: 375px) {\n    font-size: 18px;\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 24px;\n  }\n`;\n","import {\n  DayDashboardArea,\n  DashboardItem,\n  TitleArea,\n  Title,\n  Value,\n  Icon,\n} from './DayDashboard.styled';\nimport sprite from 'assets/images/sprite.svg';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchCalculate } from 'redux/api/apiOperations';\nimport { selectCalculate } from 'redux/api/apiSelectors';\n\nconst DayDashboard = () => {\n  const dispatch = useDispatch();\n  const calculateData = useSelector(selectCalculate);\n  const { dailyActivity, BMR } = calculateData;\n\n  useEffect(() => {\n    dispatch(fetchCalculate());\n  }, [dispatch]);\n\n  return (\n    <DayDashboardArea>\n      <DashboardItem accent=\"true\">\n        <TitleArea>\n          <Icon iconColor=\"#EF8964\">\n            <use href={`${sprite}#food`} />\n          </Icon>\n          <Title accent=\"true\">Daily calorie intake</Title>\n        </TitleArea>\n        <Value>{BMR}</Value>\n      </DashboardItem>\n      <DashboardItem accent=\"true\">\n        <TitleArea>\n          <Icon iconColor=\"#EF8964\">\n            <use href={`${sprite}#dumbbell`} />\n          </Icon>\n          <Title accent=\"true\">Daily physical activity</Title>\n        </TitleArea>\n        {dailyActivity && <Value>{dailyActivity} min</Value>}\n      </DashboardItem>\n      <DashboardItem accent=\"false\">\n        <TitleArea>\n          <Icon iconColor=\"#EF8964\">\n            <use href={`${sprite}#apple`} />\n          </Icon>\n          <Title accent=\"false\">Calories consumed</Title>\n        </TitleArea>\n        <Value>0</Value>\n      </DashboardItem>\n      <DashboardItem accent=\"false\">\n        <TitleArea>\n          <Icon iconColor=\"#EF8964\">\n            <use href={`${sprite}#fire`} />\n          </Icon>\n          <Title accent=\"false\">Calories burned</Title>\n        </TitleArea>\n        <Value>0</Value>\n      </DashboardItem>\n      <DashboardItem accent=\"false\">\n        <TitleArea>\n          <Icon iconColor=\"#EF8964\">\n            <use href={`${sprite}#bubble`} />\n          </Icon>\n          <Title accent=\"false\">Calories remaining</Title>\n        </TitleArea>\n        <Value>{BMR}</Value>\n      </DashboardItem>\n      <DashboardItem accent=\"false\">\n        <TitleArea>\n          <Icon iconColor=\"#EF8964\">\n            <use href={`${sprite}#figure`} />\n          </Icon>\n          <Title accent=\"false\">Sports remaining</Title>\n        </TitleArea>\n        {dailyActivity && <Value>{dailyActivity} min</Value>}\n      </DashboardItem>\n    </DayDashboardArea>\n  );\n};\n\nexport default DayDashboard;\n","import styled from '@emotion/styled';\n\nconst setHeight = props => {\n  switch (props.dimention) {\n    case 'true':\n      return '1064px';\n    case 'false':\n      return '335px';\n    default:\n      return '335';\n  }\n};\n\nexport const DayExercisesArea = styled.div`\n  position: relative;\n  width: 100%;\n  border: 1px solid;\n  border-color: rgba(239, 237, 232, 0.2);\n  border-radius: 12px;\n  background-color: rgba(239, 237, 232, 0.05);\n  padding: 16px;\n\n  @media screen and (min-width: 375px) {\n    max-height: ${setHeight};\n  }\n\n  @media screen and (min-width: 768px) {\n    height: 234px;\n  }\n`;\n\nexport const TitleArea = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  @media screen and (min-width: 375px) {\n    margin-bottom: 22px;\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 16px;\n  }\n`;\n\nexport const Title = styled.h3`\n  font-size: 14px;\n  font-weight: 400;\n  color: rgba(239, 237, 232, 0.5);\n`;\n\nexport const Button = styled.button`\n  background-color: inherit;\n  border: none;\n  display: flex;\n  gap: 8px;\n  align-items: center;\n`;\n\nexport const Add = styled.p`\n  font-weight: 500;\n  color: #e6533c;\n\n  @media screen and (min-width: 375px) {\n    font-size: 14px;\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\n\nexport const ArrowIcon = styled.svg(\n  {\n    width: '16px',\n    height: '16px',\n  },\n  ({ iconColor = '#e6533c' }) => ({\n    fill: iconColor,\n    stroke: iconColor,\n  })\n);\n\nexport const Message = styled.p`\n  font-weight: 400;\n  color: rgba(239, 237, 232, 0.3);\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n\n  @media screen and (min-width: 375px) {\n    font-size: 14px;\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\n\nexport const TableArea = styled.div`\n  @media screen and (min-width: 1440px) {\n    padding-left: 16px;\n  }\n`;\n\nexport const TableHeader = styled.div`\n  @media screen and (min-width: 375px) {\n    display: none;\n  }\n\n  @media screen and (min-width: 768px) {\n    display: grid;\n    grid-gap: 8px;\n    grid-template-columns: 90px 132px 128px 84px 78px 72px 20px;\n    grid-template-rows: auto;\n    grid-template-areas: 'grid1 grid2 grid3 grid4 grid5 grid6 grid7';\n    color: #ef8964;\n    font-size: 12px;\n    font-weight: 400;\n    margin-bottom: 8px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    grid-template-columns: 115px 157px 131px 106px 91px 82px 20px;\n  }\n`;\n\nexport const Grid1 = styled.div`\n  grid-area: grid1;\n`;\nexport const Grid2 = styled.div`\n  grid-area: grid2;\n`;\nexport const Grid3 = styled.div`\n  grid-area: grid3;\n`;\nexport const Grid4 = styled.div`\n  grid-area: grid4;\n`;\nexport const Grid5 = styled.div`\n  grid-area: grid5;\n`;\nexport const Grid6 = styled.div`\n  grid-area: grid6;\n`;\nexport const Grid7 = styled.div`\n  grid-area: grid7;\n`;\n\nexport const ShorterTitle = styled.div`\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nexport const List = styled.div`\n  @media screen and (min-width: 375px) {\n    display: flex;\n    flex-direction: column;\n    gap: 38px;\n    overflow-y: scroll;\n    height: 900px;\n  }\n\n  @media screen and (min-width: 768px) {\n    gap: 8px;\n    height: 136px;\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const ExerciseDiv = styled.div`\n  @media screen and (min-width: 375px) {\n    align-items: center;\n    font-size: 13px;\n    font-weight: 400;\n    color: #efede8;\n    display: grid;\n    grid-gap: 14px;\n    grid-template-columns: 81px 80px 76px 20px;\n    grid-template-rows: auto;\n    grid-template-areas:\n      'grid1 grid1 grid1 grid1'\n      'grid2 grid2 grid2 grid2'\n      'grid3 grid3 grid3 grid3'\n      'grid4 grid5 grid6 grid7';\n  }\n\n  @media screen and (min-width: 768px) {\n    grid-gap: 8px;\n    grid-template-columns: 90px 132px 128px 84px 78px 72px 20px;\n    grid-template-rows: 40px;\n    grid-template-areas: 'grid1 grid2 grid3 grid4 grid5 grid6 grid7';\n  }\n\n  @media screen and (min-width: 1440px) {\n    grid-template-columns: 115px 157px 131px 106px 91px 82px 20px;\n  }\n`;\n\nexport const Grid1 = styled.div`\n  grid-area: grid1;\n`;\nexport const Grid2 = styled.div`\n  grid-area: grid2;\n`;\nexport const Grid3 = styled.div`\n  grid-area: grid3;\n`;\nexport const Grid4 = styled.div`\n  grid-area: grid4;\n`;\nexport const Grid5 = styled.div`\n  grid-area: grid5;\n`;\nexport const Grid6 = styled.div`\n  grid-area: grid6;\n`;\nexport const Grid7 = styled.div`\n  grid-area: grid7;\n`;\n\nexport const Title = styled.p`\n  color: #ef8964;\n  height: 12px;\n  font-size: 12px;\n  font-weight: 400;\n  margin-bottom: 8px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  @media screen and (min-width: 768px) {\n    display: none;\n  }\n`;\n\nexport const Column = styled.div`\n  border: 1px solid rgba(239, 237, 232, 0.3);\n  border-radius: 12px;\n  display: flex;\n  align-items: center;\n  padding-inline: 14px;\n  @media screen and (min-width: 375px) {\n    width: 100%;\n    height: 38px;\n  }\n\n  @media screen and (min-width: 768px) {\n    height: 40px;\n  }\n`;\n\nexport const ButtonEl = styled.button`\n  width: auto;\n  background-color: inherit;\n  border-radius: 12px;\n  border: none;\n  padding-inline: 0;\n`;\n\nexport const DeleteIcon = styled.svg(\n  {\n    width: '20px',\n    height: '20px',\n  },\n  ({ iconColor = '#EF8964' }) => ({\n    fill: iconColor,\n    stroke: iconColor,\n  })\n);\n","import {\n  ExerciseDiv,\n  Column,\n  ButtonEl,\n  DeleteIcon,\n  Grid1,\n  Grid2,\n  Grid3,\n  Grid4,\n  Grid5,\n  Grid6,\n  Grid7,\n  Title,\n} from './ExerciseItem.styled';\nimport sprite from 'assets/images/sprite.svg';\nimport PropTypes from 'prop-types';\n// import { useDispatch } from 'react-redux';\n// import { useState } from 'react';\n\nconst ExerciseItem = ({\n  id,\n  bodyPart,\n  equipment,\n  name,\n  target,\n  burnedCalories,\n  time,\n}) => {\n  //   const dispatch = useDispatch();\n  //   const deleteThisExercise = id => {\n  //     dispatch(deleteExercise(id));\n  //   };\n\n  return (\n    <ExerciseDiv key={id}>\n      <Grid1>\n        <Title>Body Part</Title>\n        <Column>{bodyPart}</Column>\n      </Grid1>\n      <Grid2>\n        <Title>Equipment</Title>\n        <Column>{equipment}</Column>\n      </Grid2>\n      <Grid3>\n        <Title>Name</Title>\n        <Column>{name}</Column>\n      </Grid3>\n      <Grid4>\n        <Title>Target</Title>\n        <Column>{target}</Column>\n      </Grid4>\n      <Grid5>\n        <Title>Burned Calorie</Title>\n        <Column>{burnedCalories}</Column>\n      </Grid5>\n      <Grid6>\n        <Title>Time</Title>\n        <Column>{time}</Column>\n      </Grid6>\n      {/* <ButtonEl onClick={() => deleteThisExercise(id)}>Delete</ButtonEl> */}\n      <Grid7>\n        <Title></Title>\n        <ButtonEl>\n          <DeleteIcon iconColor=\"#EF8964\">\n            <use href={`${sprite}#trash`} />\n          </DeleteIcon>\n        </ButtonEl>\n      </Grid7>\n    </ExerciseDiv>\n  );\n};\n\nExerciseItem.propTypes = {\n  id: PropTypes.string,\n  bodyPart: PropTypes.string,\n  equipment: PropTypes.string,\n  name: PropTypes.string,\n  target: PropTypes.string,\n  burnedCalories: PropTypes.number,\n  time: PropTypes.number,\n};\n\nexport default ExerciseItem;\n","import {\n  DayExercisesArea,\n  TitleArea,\n  Title,\n  Button,\n  Add,\n  ArrowIcon,\n  Message,\n  TableArea,\n  TableHeader,\n  List,\n  Grid1,\n  Grid2,\n  Grid3,\n  Grid4,\n  Grid5,\n  Grid6,\n  Grid7,\n  ShorterTitle,\n} from './DayExercises.styled';\nimport sprite from 'assets/images/sprite.svg';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport {\n  selectError,\n  selectIsLoading,\n  selectDiary,\n} from 'redux/api/apiSelectors';\nimport Loader from 'components/Loader';\nimport { Notify } from 'notiflix';\nimport ExerciseItem from './ExerciseItem';\nimport { fetchDiary } from 'redux/api/apiOperations';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst DayExercises = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const location = useLocation();\n  const { doneExercises } = useSelector(selectDiary);\n\n  const findLength = async array => {\n    try {\n      const length = await array.length;\n      return length;\n    } catch (err) {\n      return err;\n    }\n  };\n  const arrayLength = findLength(doneExercises);\n\n  const [heightExerciseArea, setHeightExerciseArea] = useState(true);\n  if (arrayLength === 0) {\n    setHeightExerciseArea(false);\n  }\n\n  useEffect(\n    date => {\n      dispatch(fetchDiary(date));\n    },\n    [dispatch]\n  );\n\n  return (\n    <DayExercisesArea dimention={heightExerciseArea}>\n      <TitleArea>\n        <Title>Execrcises</Title>\n        <Link to={`/exercises`} state={{ from: location }}>\n          <Button>\n            <Add>Add exercise</Add>\n            <ArrowIcon iconColor=\"#E6533C\">\n              <use href={`${sprite}#arrow`} />\n            </ArrowIcon>\n          </Button>\n        </Link>\n      </TitleArea>\n\n      <TableArea>\n        {isLoading && <Loader />}\n        {arrayLength > 0 ? (\n          <>\n            <TableHeader>\n              <Grid1>Body Part</Grid1>\n              <Grid2>Equipment</Grid2>\n              <Grid3>Name</Grid3>\n              <Grid4>Target</Grid4>\n              <Grid5>\n                <ShorterTitle>Burned Calories</ShorterTitle>\n              </Grid5>\n              <Grid6>Time</Grid6>\n              <Grid7 />\n            </TableHeader>\n            <List>\n              {doneExercises.map(\n                ({\n                  _id,\n                  bodyPart,\n                  equipment,\n                  name,\n                  target,\n                  burnedCalories,\n                  time,\n                }) => (\n                  <ExerciseItem\n                    key={_id}\n                    id={_id}\n                    bodyPart={bodyPart}\n                    equipment={equipment}\n                    name={name}\n                    target={target}\n                    burnedCalories={burnedCalories}\n                    time={time}\n                  />\n                )\n              )}\n            </List>\n          </>\n        ) : (\n          <Message>Not found exercises</Message>\n        )}\n        {error && Notify.failure(error.message)}\n      </TableArea>\n    </DayExercisesArea>\n  );\n};\n\nexport default DayExercises;\n","import styled from '@emotion/styled';\n\nconst setHeight = props => {\n  switch (props.dimention) {\n    case 'true':\n      return '824px';\n    case 'false':\n      return '335px';\n    default:\n      return '335px';\n  }\n};\n\nexport const DayProductsArea = styled.div`\n  position: relative;\n  width: 100%;\n  border: 1px solid;\n  border-color: rgba(239, 237, 232, 0.2);\n  border-radius: 12px;\n  background-color: rgba(239, 237, 232, 0.05);\n  padding: 16px;\n\n  @media screen and (min-width: 375px) {\n    height: ${setHeight};\n  }\n\n  @media screen and (min-width: 768px) {\n    height: 234px;\n  }\n`;\n\nexport const TitleArea = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  @media screen and (min-width: 375px) {\n    margin-bottom: 22px;\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 16px;\n  }\n`;\n\nexport const Title = styled.h3`\n  font-size: 14px;\n  font-weight: 400;\n  color: rgba(239, 237, 232, 0.5);\n`;\n\nexport const Button = styled.button`\n  background-color: inherit;\n  border: none;\n  display: flex;\n  gap: 8px;\n  align-items: center;\n`;\n\nexport const Add = styled.p`\n  font-weight: 500;\n  color: #e6533c;\n\n  @media screen and (min-width: 375px) {\n    font-size: 14px;\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\n\nexport const ArrowIcon = styled.svg(\n  {\n    width: '16px',\n    height: '16px',\n  },\n  ({ iconColor = '#e6533c' }) => ({\n    fill: iconColor,\n    stroke: iconColor,\n  })\n);\n\nexport const Message = styled.p`\n  font-weight: 400;\n  color: rgba(239, 237, 232, 0.3);\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n\n  @media screen and (min-width: 375px) {\n    font-size: 14px;\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\nexport const TableArea = styled.div`\n  @media screen and (min-width: 1440px) {\n    padding-left: 16px;\n  }\n`;\n\nexport const TableHeader = styled.div`\n  @media screen and (min-width: 375px) {\n    display: none;\n  }\n\n  @media screen and (min-width: 768px) {\n    display: grid;\n    grid-gap: 8px;\n    grid-template-columns: 204px 128px 90px 90px 80px 20px;\n    grid-template-rows: auto;\n    grid-template-areas: 'grid1 grid2 grid3 grid4 grid5 grid6';\n    color: #ef8964;\n    font-size: 12px;\n    font-weight: 400;\n    margin-bottom: 8px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    grid-template-columns: 212px 166px 105px 105px 110px 20px;\n  }\n`;\n\nexport const Grid1 = styled.div`\n  grid-area: grid1;\n`;\nexport const Grid2 = styled.div`\n  grid-area: grid2;\n`;\nexport const Grid3 = styled.div`\n  grid-area: grid3;\n`;\nexport const Grid4 = styled.div`\n  grid-area: grid4;\n`;\nexport const Grid5 = styled.div`\n  grid-area: grid5;\n`;\nexport const Grid6 = styled.div`\n  grid-area: grid6;\n`;\n\nexport const ShorterTitle = styled.div`\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nexport const List = styled.div`\n  @media screen and (min-width: 375px) {\n    display: flex;\n    flex-direction: column;\n    gap: 38px;\n    overflow-y: scroll;\n    height: 786px;\n  }\n\n  @media screen and (min-width: 768px) {\n    gap: 8px;\n    height: 136px;\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const ProductDiv = styled.div`\n  @media screen and (min-width: 375px) {\n    align-items: center;\n    font-size: 13px;\n    font-weight: 400;\n    color: #efede8;\n    display: grid;\n    grid-gap: 14px;\n    grid-template-columns: 81px 80px 76px 20px;\n    grid-template-rows: auto;\n    grid-template-areas:\n      'grid1 grid1 grid1 grid1'\n      'grid2 grid2 grid2 grid2'\n      'grid3 grid4 grid5 grid6';\n  }\n\n  @media screen and (min-width: 768px) {\n    grid-gap: 8px;\n    grid-template-columns: 204px 128px 90px 90px 80px 20px;\n    grid-template-rows: 40px;\n    grid-template-areas: 'grid1 grid2 grid3 grid4 grid5 grid6';\n  }\n\n  @media screen and (min-width: 1440px) {\n    grid-template-columns: 212px 166px 105px 105px 110px 20px;\n  }\n`;\n\nexport const Grid1 = styled.div`\n  grid-area: grid1;\n`;\nexport const Grid2 = styled.div`\n  grid-area: grid2;\n`;\nexport const Grid3 = styled.div`\n  grid-area: grid3;\n`;\nexport const Grid4 = styled.div`\n  grid-area: grid4;\n`;\nexport const Grid5 = styled.div`\n  grid-area: grid5;\n`;\nexport const Grid6 = styled.div`\n  grid-area: grid6;\n`;\n\nexport const Title = styled.p`\n  color: #ef8964;\n  height: 12px;\n  font-size: 12px;\n  font-weight: 400;\n  margin-bottom: 8px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  @media screen and (min-width: 768px) {\n    display: none;\n  }\n`;\n\nexport const Column = styled.div`\n  border: 1px solid rgba(239, 237, 232, 0.3);\n  border-radius: 12px;\n  display: flex;\n  align-items: center;\n  padding-inline: 14px;\n  @media screen and (min-width: 375px) {\n    width: 100%;\n    height: 38px;\n  }\n\n  @media screen and (min-width: 768px) {\n    height: 40px;\n  }\n`;\n\nexport const ButtonEl = styled.button`\n  width: auto;\n  background-color: inherit;\n  border-radius: 12px;\n  border: none;\n  padding-inline: 0;\n`;\n\nexport const DeleteIcon = styled.svg(\n  {\n    width: '20px',\n    height: '20px',\n  },\n  ({ iconColor = '#EF8964' }) => ({\n    fill: iconColor,\n    stroke: iconColor,\n  })\n);\n","import {\n  ProductDiv,\n  Column,\n  ButtonEl,\n  DeleteIcon,\n  Grid1,\n  Grid2,\n  Grid3,\n  Grid4,\n  Grid5,\n  Grid6,\n  Title,\n} from './ProductItem.styled';\nimport sprite from 'assets/images/sprite.svg';\nimport PropTypes from 'prop-types';\n// import { useDispatch } from 'react-redux';\n// import { useState } from 'react';\n\nconst ProductItem = ({\n  id,\n  title,\n  category,\n  calories,\n  weight,\n  groupBloodNotAllowed,\n}) => {\n  //   const dispatch = useDispatch();\n  //   const deleteThisProduct = id => {\n  //     dispatch(deleteProduct(id));\n  //   };\n\n  return (\n    <ProductDiv key={id}>\n      <Grid1>\n        <Title>Title</Title>\n        <Column>{title}</Column>\n      </Grid1>\n      <Grid2>\n        <Title>Category</Title>\n        <Column>{category}</Column>\n      </Grid2>\n      <Grid3>\n        <Title>Calories</Title>\n        <Column>{calories}</Column>\n      </Grid3>\n      <Grid4>\n        <Title>Weight</Title>\n        <Column>{weight}</Column>\n      </Grid4>\n      <Grid5>\n        <Title>Recommend</Title>\n        <Column>Yes</Column>\n        {/* колонку доработаю, когда можно будет добавлять продукты  */}\n      </Grid5>\n      {/* <ButtonEl onClick={() => deleteThisExercise(id)}>Delete</ButtonEl> */}\n      <Grid6>\n        <Title></Title>\n        <ButtonEl>\n          <DeleteIcon iconColor=\"#EF8964\">\n            <use href={`${sprite}#trash`} />\n          </DeleteIcon>\n        </ButtonEl>\n      </Grid6>\n    </ProductDiv>\n  );\n};\n\nProductItem.propTypes = {\n  id: PropTypes.string,\n  title: PropTypes.string,\n  category: PropTypes.string,\n  calories: PropTypes.number,\n  weight: PropTypes.number,\n  groupBloodNotAllowed: PropTypes.number,\n};\n\nexport default ProductItem;\n","import {\n  DayProductsArea,\n  TitleArea,\n  Title,\n  Button,\n  Add,\n  ArrowIcon,\n  TableArea,\n  Message,\n  TableHeader,\n  List,\n  Grid1,\n  Grid2,\n  Grid3,\n  Grid4,\n  Grid5,\n  Grid6,\n} from './DayProducts.styled';\nimport sprite from 'assets/images/sprite.svg';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport {\n  selectDiary,\n  selectError,\n  selectIsLoading,\n} from 'redux/api/apiSelectors';\nimport { fetchProducts } from 'redux/api/apiOperations';\nimport Loader from 'components/Loader';\nimport { Notify } from 'notiflix';\nimport ProductItem from './ProductItem';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst DayProducts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const { consumedProducts } = useSelector(selectDiary);\n  const location = useLocation();\n\n  const findLength = async array => {\n    try {\n      const length = await array.length;\n      return length;\n    } catch (err) {\n      return err;\n    }\n  };\n  const arrayLength = findLength(consumedProducts);\n\n  const [heightProductArea, setHeightProductArea] = useState(true);\n  if (arrayLength === 0) {\n    setHeightProductArea(false);\n  }\n\n  useEffect(\n    date => {\n      dispatch(fetchProducts(date));\n    },\n    [dispatch]\n  );\n\n  return (\n    <DayProductsArea dimention={heightProductArea}>\n      <TitleArea>\n        <Title>Products</Title>\n        <Link to={`/products`} state={{ from: location }}>\n          <Button>\n            <Add>Add product</Add>\n            <ArrowIcon iconColor=\"#E6533C\">\n              <use href={`${sprite}#arrow`} />\n            </ArrowIcon>\n          </Button>{' '}\n        </Link>\n      </TitleArea>\n      <TableArea>\n        {isLoading && <Loader />}\n        {arrayLength > 0 ? (\n          <>\n            <TableHeader>\n              <Grid1>Title</Grid1>\n              <Grid2>Category</Grid2>\n              <Grid3>Calories</Grid3>\n              <Grid4>Weight</Grid4>\n              <Grid5>Recommend</Grid5>\n              <Grid6></Grid6>\n            </TableHeader>\n            <List>\n              {consumedProducts.map(\n                ({\n                  _id,\n                  title,\n                  category,\n                  calories,\n                  weight,\n                  groupBloodNotAllowed,\n                }) => (\n                  <ProductItem\n                    key={_id}\n                    id={_id}\n                    title={title}\n                    category={category}\n                    calories={calories}\n                    weight={weight}\n                    groupBloodNotAllowed={groupBloodNotAllowed}\n                  />\n                )\n              )}\n            </List>\n          </>\n        ) : (\n          <Message>Not found exercises</Message>\n        )}\n        {error && Notify.failure(error.message)}\n      </TableArea>\n    </DayProductsArea>\n  );\n};\n\nexport default DayProducts;\n","import styled from '@emotion/styled';\n\nexport const DaySwitchArea = styled.div`\n  position: absolute;\n  display: flex;\n\n  justify-content: center;\n  align-items: center;\n\n  @media screen and (min-width: 375px) {\n    right: 0;\n    top: 42px;\n    gap: 20px;\n  }\n\n  @media screen and (min-width: 768px) {\n    top: 52px;\n    gap: 40px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    right: 64px;\n  }\n`;\n\nexport const ArrowIcon = styled.svg`\n  width: 16px;\n  height: 16px;\n  // rgba(239,237,232,0.2) когда неактивная\n  fill: #efede8;\n\n  &:hover,\n  :focus {\n    fill: #ef8964;\n  }\n`;\n\nexport const Button = styled.button`\n  border: none;\n  background-color: inherit;\n  width: 20px;\n  height: 20px;\n  padding: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const ArrowArea = styled.div`\n  display: flex;\n  gap: 6px;\n`;\n","import { css } from '@emotion/react';\nimport styled from '@emotion/styled';\n\nexport const calendarGlobalStyles = css`\n  .react-datepicker__wrapper {\n    position: relative;\n  }\n  .react-datepicker {\n    position: absolute;\n    left: 0;\n    top: 50%;\n    transform: translate(-1%, 0%);\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: auto;\n    height: auto;\n    padding: 14px 14px;\n    background-color: #ef8964;\n    font-family: Inter;\n    border-radius: 16px;\n    border: none;\n  }\n  .react-datepicker__month-container {\n    float: inherit;\n    box-sizing: border-box;\n  }\n  .react-datepicker__header {\n    position: relative;\n    background-color: #ef8964;\n  }\n  .react-datepicker__day-names {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 8px 8px;\n    border-top: 1px solid rgba(239, 237, 232, 0.2);\n  }\n  .react-datepicker__header:not(.react-datepicker__header--has-time-select) {\n    border-bottom: 0px;\n    padding: 0;\n  }\n  .react-datepicker__day\n    react-datepicker__day--018.react-datepicker__day--selected\n    react-datepicker__day--today {\n    outline: none;\n    border: none;\n  }\n  .react-datepicker__current-month {\n    font-family: Inter;\n    font-size: 18px;\n    font-style: normal;\n    font-weight: 600;\n    text-align: center;\n    color: #efede8;\n    margin-bottom: 8px;\n  }\n  .react-datepicker__day-name {\n    margin: 0;\n    padding: 8px 8px;\n    font-family: Inter;\n    font-size: 14px;\n    font-style: normal;\n    font-weight: 600;\n    line-height: 18px;\n    text-align: center;\n    color: rgba(239, 237, 232, 0.5);\n  }\n  .react-datepicker__navigation {\n    margin-top: 4px;\n    color: #efe8eb;\n  }\n  .react-datepicker__navigation--previous {\n    left: 7px;\n    top: 14px;\n    width: 18px;\n    height: 18px;\n  }\n  .react-datepicker__navigation--next {\n    right: 7px;\n    top: 14px;\n    width: 18px;\n    height: 18px;\n  }\n  .react-datepicker__navigation-icon::before:hover:focus {\n    border-color: #efede8;\n  }\n  .react-datepicker__week {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    color: #efede8;\n  }\n  .react-datepicker__day {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 8px;\n    flex-shrink: 0;\n    margin: 0;\n    width: 32px;\n    height: 32px;\n    border-radius: 50%;\n    color: #efede8;\n    font-family: Inter;\n    font-size: 14px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: 18px;\n    text-align: center;\n  }\n  .react-datepicker__month {\n    display: flex;\n    gap: 7px;\n    flex-direction: column;\n    justify-content: space-between;\n    padding-top: 14px;\n    margin: 0;\n  }\n  .react-datepicker__day--selected {\n    background-color: #040404;\n    color: #efe8e8;\n    font-size: 14px;\n  }\n  .react-datepicker__day--selected:hover {\n    border-radius: 50%;\n    background-color: #040404;\n  }\n  .react-datepicker__day:hover {\n    border-radius: 50%;\n    background-color: #040404;\n    color: #efede8;\n  }\n  .react-datepicker__day--keyboard-selected {\n    border-radius: 50%;\n    background-color: #040404;\n    color: #efede8;\n  }\n  .react-datepicker__day--weekend {\n  }\n  .react-datepicker__day--disabled {\n    opacity: 50%;\n  }\n  .react-datepicker__day--outside-month {\n    background-color: transparent;\n    pointer-events: none;\n    opacity: 0;\n  }\n  .react-datepicker__view-calendar-icon input {\n    padding: 6px 10px 5px 13px;\n  }\n  .react-datepicker__triangle {\n    visibility: hidden;\n  }\n`;\n\nexport const TitleWrapper = styled.button`\n  color: #efede8;\n  background: inherit;\n  border: none;\n  font-weight: 700;\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 24px;\n  display: flex;\n  gap: 8px;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const CalendarIcon = styled.svg`\n  width: 24px;\n  height: 24px;\n  fill: #ef8964;\n  stroke: #ef8964;\n`;\n","import { forwardRef, useEffect, useState } from 'react';\nimport { format } from 'date-fns';\nimport DatePicker from 'react-datepicker';\nimport {\n  calendarGlobalStyles,\n  TitleWrapper,\n  CalendarIcon,\n} from './Datepicker.styled';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport sprite from 'assets/images/sprite.svg';\nimport { Global } from '@emotion/react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { currentUser } from 'redux/auth/authOperations';\nimport { selectUser } from 'redux/auth/authSelectors';\n\nconst StyledDatepicker = () => {\n  const [selectedDate, setSelectedDate] = useState(Date.now());\n  const dispatch = useDispatch();\n  const user = useSelector(selectUser);\n  const createdDate = Date.parse(user.createdAt);\n\n  const submitSelectedDate = date => {\n    setSelectedDate(date);\n    const newDate = format(date, 'dd-MM-yyyy');\n    console.log(newDate);\n  };\n\n  useEffect(() => {\n    dispatch(currentUser());\n  }, [dispatch]);\n\n  const CustomInput = forwardRef(({ value, onClick }, ref) => {\n    return (\n      <TitleWrapper onClick={onClick} ref={ref}>\n        {format(selectedDate, 'dd/MM/yyyy')}\n        <CalendarIcon iconColor=\"#EF8964\">\n          <use href={`${sprite}#calendar`} />\n        </CalendarIcon>\n      </TitleWrapper>\n    );\n  });\n\n  return (\n    <>\n      <Global styles={calendarGlobalStyles} />\n      <DatePicker\n        selected={selectedDate}\n        onChange={date => {\n          submitSelectedDate(date);\n        }}\n        customInput={<CustomInput />}\n        dateFormat={'dd MM yyyy'}\n        calendarStartDay={1}\n        minDate={user.createdAt ? createdDate : Date.now()}\n      />\n    </>\n  );\n};\n\nexport default StyledDatepicker;\n","import {\n  DaySwitchArea,\n  ArrowIcon,\n  Button,\n  ArrowArea,\n} from './DaySwitch.styled';\nimport StyledDatepicker from './Datepicker';\nimport sprite from 'assets/images/sprite.svg';\n\nconst DaySwitch = () => {\n  return (\n    <DaySwitchArea>\n      <StyledDatepicker />\n      <ArrowArea>\n        <Button type=\"button\">\n          <ArrowIcon iconColor=\"#efede8\">\n            <use href={`${sprite}#icon-chevron-left`} />\n          </ArrowIcon>\n        </Button>\n        <Button type=\"button\">\n          <ArrowIcon iconColor=\"#efede8)\">\n            <use href={`${sprite}#icon-chevron-right`} />\n          </ArrowIcon>\n        </Button>\n      </ArrowArea>\n    </DaySwitchArea>\n  );\n};\n\nexport default DaySwitch;\n","import styled from '@emotion/styled';\n\nexport const ForPosition = styled.div`\n  width: 100%;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n\n  @media screen and (min-width: 1440px) {\n    padding-inline: 64px;\n  }\n`;\n\nexport const DiaryContainer = styled.div`\n  display: flex;\n\n  @media screen and (min-width: 375px) {\n    flex-direction: column;\n    gap: 40px;\n    margin-top: 40px;\n  }\n\n  @media screen and (min-width: 768px) {\n    gap: 64px;\n    margin-top: 32px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    flex-direction: row;\n    gap: 32px;\n  }\n`;\n\nexport const Left = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  @media screen and (min-width: 375px) {\n    width: 335px;\n    gap: 40px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 704px;\n    gap: 32px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 826px;\n  }\n`;\n\nexport const Right = styled.div`\n  @media screen and (min-width: 375px) {\n    width: 335px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 593px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 390px;\n  }\n`;\n","import Container from 'components/Container';\nimport DayDashboard from 'components/DayDashboard';\nimport DayExercises from 'components/DayExercises';\nimport DayProducts from 'components/DayProducts';\nimport DaySwitch from 'components/DaySwitch';\nimport TitlePage from 'components/TitlePage';\nimport { DiaryContainer, Left, Right, ForPosition } from './Diary.styled';\nimport Notice from 'components/Notice';\n\n// import { useDispatch, useSelector } from 'react-redux';\n// import { selectDiaryUpdated } from 'redux/api/apiSelectors';\n// import { useEffect } from 'react';\n// import {\n//   deleteProduct,\n//   diaryUpdateReset,\n//   fetchDiary,\n// } from 'redux/api/apiOperations';\n\nconst Diary = () => {\n  // const dispatch = useDispatch();\n  // const dairyUpdated = useSelector(selectDiaryUpdated);\n\n  // console.log('Diary: dairyUpdated =>', dairyUpdated);\n\n  // useEffect(() => {\n  //   if (dairyUpdated) {\n  //     dispatch(fetchDiary({ date: '17-11-2023' }));\n  //   }\n\n  //   dispatch(diaryUpdateReset());\n  // }, [dispatch, dairyUpdated]);\n\n  // const handleClick = () => {\n  //   console.log(\"Diary: handleClick => '123'\");\n  //   dispatch(deleteProduct('123'));\n  // };\n\n  return (\n    <Container>\n      <ForPosition>\n        <TitlePage title=\"Diary\" />\n        <DaySwitch />\n        <DiaryContainer>\n          {/* <button type=\"button\" onClick={handleClick}>Delete</button> */}\n          <Left>\n            <DayProducts />\n            <DayExercises />\n          </Left>\n          <Right>\n            <DayDashboard />\n            <Notice notice=\"Record all your meals in the calorie diary every day. This will help you be aware of your nutrition and make informed choices.\" />\n          </Right>\n        </DiaryContainer>\n      </ForPosition>\n    </Container>\n  );\n};\n\nexport default Diary;\n","export const selectCategories = state => state.api.categories; // []\n\nexport const selectExercises = state => state.api.exercises; // { result: [], total_results: number }\n\nexport const selectFilters = state => state.api.filters; // { result: [], total_results: number }\n\nexport const selectProducts = state => state.api.products; // { result: [], total_results: number }\n\nexport const selectIsLoading = state => state.api.isLoading; // boolean\n\nexport const selectError = state => state.api.error; // { message: string }\n\nexport const selectCalculate = state => state.api.calculate; // {}\n\nexport const selectDiary = state => state.api.diary; // {}\n\nexport const selectDiaryUpdated = state => state.api.diaryUpdated; // boolean\n"],"names":["_ref","children","_jsx","ContainerWrapper","styled","div","_templateObject","_taggedTemplateLiteral","NoticeArea","NoticeIcon","_templateObject2","NoticeMessage","svg","width","height","_templateObject3","notice","_jsxs","fill","href","concat","sprite","Title","h1","title","DayDashboardArea","ul","DashboardItem","li","props","accent","TitleArea","Icon","_ref$iconColor","iconColor","stroke","p","_templateObject4","Value","_templateObject5","dispatch","useDispatch","calculateData","useSelector","selectCalculate","dailyActivity","BMR","useEffect","fetchCalculate","DayExercisesArea","dimention","h3","Button","button","Add","ArrowIcon","Message","_templateObject6","TableArea","_templateObject7","TableHeader","_templateObject8","Grid1","_templateObject9","Grid2","_templateObject10","Grid3","_templateObject11","Grid4","_templateObject12","Grid5","_templateObject13","Grid6","_templateObject14","Grid7","_templateObject15","ShorterTitle","_templateObject16","List","_templateObject17","ExerciseDiv","Column","ButtonEl","DeleteIcon","id","bodyPart","equipment","name","target","burnedCalories","time","isLoading","selectIsLoading","error","selectError","location","useLocation","doneExercises","selectDiary","findLength","_asyncToGenerator","_regeneratorRuntime","mark","_callee","array","length","wrap","_context","prev","next","sent","abrupt","t0","stop","_x","apply","arguments","arrayLength","_useState","useState","_useState2","_slicedToArray","heightExerciseArea","setHeightExerciseArea","date","fetchDiary","Link","to","state","from","Loader","_Fragment","map","_ref2","_id","ExerciseItem","Notify","failure","message","DayProductsArea","ProductDiv","category","calories","weight","groupBloodNotAllowed","consumedProducts","heightProductArea","setHeightProductArea","fetchProducts","ProductItem","DaySwitchArea","ArrowArea","calendarGlobalStyles","css","TitleWrapper","CalendarIcon","Date","now","selectedDate","setSelectedDate","user","selectUser","createdDate","parse","createdAt","currentUser","CustomInput","forwardRef","ref","value","onClick","format","Global","styles","DatePicker","selected","onChange","newDate","console","log","submitSelectedDate","customInput","dateFormat","calendarStartDay","minDate","StyledDatepicker","type","ForPosition","DiaryContainer","Left","Right","Container","TitlePage","DaySwitch","DayProducts","DayExercises","DayDashboard","Notice","selectCategories","api","categories","selectProducts","products","calculate","diary"],"sourceRoot":""}
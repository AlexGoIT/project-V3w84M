{"version":3,"file":"static/js/534.f8d9335a.chunk.js","mappings":"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","sources":["components/Container/Container.jsx","components/Container/Container.styled.js","components/Notice/Notice.styled.js","components/Notice/Notice.jsx","components/TitlePage/TitlePage.styled.js","components/TitlePage/TitlePage.jsx","components/DayDashboard/DayDashboard.styled.js","components/DayDashboard/DayDashboard.jsx","components/DayExercises/DayExercises.styled.js","components/DayExercises/ExerciseItem/ExerciseItem.styled.js","components/DayExercises/ExerciseItem/ExerciseItem.jsx","components/DayExercises/DayExercises.jsx","components/DayProducts/DayProducts.styled.js","components/DayProducts/ProductItem/ProductItem.styled.js","components/DayProducts/ProductItem/ProductItem.jsx","components/DayProducts/DayProducts.jsx","components/DaySwitch/DaySwitch.styled.js","components/DaySwitch/Datepicker/Datepicker.styled.jsx","components/DaySwitch/Datepicker/Datepicker.jsx","components/DaySwitch/DaySwitch.jsx","pages/Diary/Diary.styled.js","pages/Diary/Diary.jsx","redux/api/apiSelectors.js"],"sourcesContent":["import { ContainerWrapper } from './Container.styled';\n\nconst Container = ({ children }) => {\n  return <ContainerWrapper>{children}</ContainerWrapper>;\n};\n\nexport default Container;\n","import styled from '@emotion/styled';\n\nexport const ContainerWrapper = styled.div`\n  width: 100%;\n  margin-inline: auto;\n  padding-inline: 20px;\n  /* padding-top: 61px; */\n\n  @media screen and (min-width: 375px) {\n    width: 375px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 768px;\n    padding-inline: 32px;\n    /* padding-top: 84px; */\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 1440px;\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const NoticeArea = styled.div`\n  display: flex;\n  gap: 8px;\n  width: 100%;\n`;\n\nexport const NoticeIcon = styled.div`\n  width: 24px;\n  height: 24px;\n  border-radius: 12px;\n  background-color: #efa082;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const WarningIcon = styled.svg({\n  width: '16px',\n  height: '16px',\n});\n\nexport const NoticeMessage = styled.div`\n  width: 100%;\n  height: auto;\n  color: rgba(239, 237, 232, 0.3);\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 1.5;\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\n","import PropTypes from 'prop-types';\n\nimport { NoticeMessage, NoticeArea, NoticeIcon } from './Notice.styled';\n\nimport sprite from 'assets/images/sprite.svg';\n\nconst Notice = ({ notice }) => {\n  return (\n    <NoticeArea>\n      <NoticeIcon>\n        <svg width=\"18\" height=\"18\" fill=\"#efede8\">\n          <use href={`${sprite}#warning`} />\n        </svg>\n      </NoticeIcon>\n      <NoticeMessage>{notice}</NoticeMessage>\n    </NoticeArea>\n  );\n};\n\nexport default Notice;\n\nNotice.propTypes = {\n  notice: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Title = styled.h1`\n  margin-top: 40px;\n  font-family: Roboto;\n  color: #efede8;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 1.375;\n\n  @media screen and (min-width: 375px) {\n    margin-top: 40px;\n    font-size: 24px;\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-top: 72px;\n    font-size: 32px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Title } from './TitlePage.styled';\n\nconst TitlePage = ({ title }) => {\n  return <Title>{title}</Title>;\n};\n\nexport default TitlePage;\n\nTitlePage.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const DayDashboardArea = styled.ul`\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  height: 328px;\n  margin-bottom: 20px;\n  row-gap: 20px;\n  column-gap: 13px;\n\n  @media screen and (min-width: 768px) {\n    height: 248px;\n    margin-bottom: 32px;\n    row-gap: 16px;\n    column-gap: 16px;\n    flex-direction: column;\n  }\n\n  @media screen and (min-width: 1440px) {\n    height: 380px;\n    margin-bottom: 48px;\n    flex-direction: row;\n  }\n`;\n\nconst setBgColor = props => {\n  switch (props.accent) {\n    case 'true':\n      return '#e6533c';\n    case 'false':\n      return 'rgba(239, 237, 232, 0.05)';\n    default:\n      return 'rgba(239, 237, 232, 0.05)';\n  }\n};\n\nconst setRedBorderColor = props => {\n  switch (props.borderColor) {\n    case 'red':\n      return '#E9101D';\n    case 'green':\n      return '#3CBF61';\n    case 'default':\n      return 'rgba(239, 237, 232, 0.2)';\n    default:\n      return 'rgba(239, 237, 232, 0.2)';\n  }\n};\n\nexport const DashboardItem = styled.li`\n  border: 1px solid;\n  border-color: ${setRedBorderColor};\n  border-radius: 12px;\n  background-color: ${setBgColor};\n  padding: 18px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  width: 161px;\n  height: 96px;\n\n  @media screen and (min-width: 768px) {\n    width: 187px;\n    height: 116px;\n  }\n`;\n\nexport const TitleArea = styled.div`\n  display: flex;\n  gap: 8px;\n  align-items: center;\n`;\n\nexport const Icon = styled.svg(\n  {\n    width: '20px',\n    height: '20px',\n  },\n  ({ iconColor = '#EF8964' }) => ({\n    fill: iconColor,\n    stroke: iconColor,\n  })\n);\n\nconst setTitleColor = props => {\n  switch (props.accent) {\n    case 'true':\n      return 'rgba(239, 237, 232, 0.8)';\n    case 'false':\n      return 'rgba(239, 237, 232, 0.4)';\n    default:\n      return 'rgba(239, 237, 232, 0.4)';\n  }\n};\n\nexport const Title = styled.p`\n  font-size: 12px;\n  font-weight: 400;\n  color: ${setTitleColor};\n`;\n\nexport const Value = styled.p`\n  font-weight: 700;\n  color: #efede8;\n  font-size: 18px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 24px;\n  }\n`;\n","import {\n  DayDashboardArea,\n  DashboardItem,\n  TitleArea,\n  Title,\n  Value,\n  Icon,\n} from './DayDashboard.styled';\nimport sprite from 'assets/images/sprite.svg';\nimport PropTypes from 'prop-types';\n\nconst DayDashboard = ({ data }) => {\n  const {\n    dailyPhysicalActivity,\n    userBMR,\n    caloriesBurnedSum,\n    caloriesConsumedSum,\n    caloriesRemaining,\n    sportsRemaining,\n  } = data;\n\n  return (\n    <DayDashboardArea>\n      <DashboardItem accent=\"true\">\n        <TitleArea>\n          <Icon iconColor=\"#EF8964\">\n            <use href={`${sprite}#food`} />\n          </Icon>\n          <Title accent=\"true\">Daily calorie intake</Title>\n        </TitleArea>\n        {(data && Object.keys(data).length) !== 0 && userBMR ? (\n          <Value>{userBMR}</Value>\n        ) : (\n          <Value>0</Value>\n        )}\n      </DashboardItem>\n      <DashboardItem accent=\"true\">\n        <TitleArea>\n          <Icon iconColor=\"#EF8964\">\n            <use href={`${sprite}#dumbbell`} />\n          </Icon>\n          <Title accent=\"true\">Daily physical activity</Title>\n        </TitleArea>\n        {data && Object.keys(data).length !== 0 && (\n          <Value>{dailyPhysicalActivity} min</Value>\n        )}\n      </DashboardItem>\n      <DashboardItem accent=\"false\">\n        <TitleArea>\n          <Icon iconColor=\"#EF8964\">\n            <use href={`${sprite}#apple`} />\n          </Icon>\n          <Title accent=\"false\">Calories consumed</Title>\n        </TitleArea>\n        {data && Object.keys(data).length !== 0 && (\n          <Value>{caloriesConsumedSum}</Value>\n        )}\n      </DashboardItem>\n      <DashboardItem accent=\"false\">\n        <TitleArea>\n          <Icon iconColor=\"#EF8964\">\n            <use href={`${sprite}#fire`} />\n          </Icon>\n          <Title accent=\"false\">Calories burned</Title>\n        </TitleArea>\n        {data && Object.keys(data).length !== 0 && (\n          <Value>{caloriesBurnedSum}</Value>\n        )}\n      </DashboardItem>\n      <DashboardItem\n        accent=\"false\"\n        borderColor={userBMR && caloriesRemaining < 0 ? 'red' : 'default'}\n      >\n        <TitleArea>\n          <Icon iconColor=\"#EF8964\">\n            <use href={`${sprite}#bubble`} />\n          </Icon>\n          <Title accent=\"false\">Calories remaining</Title>\n        </TitleArea>\n        {data && Object.keys(data).length !== 0 && userBMR ? (\n          <Value>{caloriesRemaining}</Value>\n        ) : (\n          <Value>0</Value>\n        )}\n      </DashboardItem>\n      <DashboardItem\n        accent=\"false\"\n        borderColor={sportsRemaining >= 0 ? 'default' : 'green'}\n      >\n        <TitleArea>\n          <Icon iconColor=\"#EF8964\">\n            <use href={`${sprite}#figure`} />\n          </Icon>\n          <Title accent=\"false\">Sports remaining</Title>\n        </TitleArea>\n        {data && Object.keys(data).length !== 0 && (\n          <Value>\n            {sportsRemaining >= 0 ? <span></span> : <span>+</span>}\n            {Math.abs(sportsRemaining)} min\n          </Value>\n        )}\n      </DashboardItem>\n    </DayDashboardArea>\n  );\n};\n\nDayDashboard.propTypes = {\n  data: PropTypes.shape({\n    dailyPhysicalActivity: PropTypes.number,\n    userBMR: PropTypes.number,\n    caloriesBurnedSum: PropTypes.number,\n    caloriesConsumedSum: PropTypes.number,\n    caloriesRemaining: PropTypes.number,\n    sportsRemaining: PropTypes.number,\n  }),\n};\n\nexport default DayDashboard;\n","import styled from '@emotion/styled';\n\nconst setAreaHeight = props => {\n  switch (props.dimentionArea) {\n    case 'true':\n      return '1010px';\n    case 'false':\n      return '335px';\n    default:\n      return '335px';\n  }\n};\n\nexport const DayExercisesArea = styled.div`\n  position: relative;\n  width: 100%;\n  border: 1px solid;\n  border-color: rgba(239, 237, 232, 0.2);\n  border-radius: 12px;\n  background-color: rgba(239, 237, 232, 0.05);\n  padding: 16px;\n  height: ${setAreaHeight};\n  padding-right: 8px;\n\n  @media screen and (min-width: 768px) {\n    height: 234px;\n    padding-right: 16px;\n  }\n`;\n\nexport const TitleArea = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 22px;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 16px;\n  }\n`;\n\nexport const Title = styled.h3`\n  font-size: 14px;\n  font-weight: 400;\n  color: rgba(239, 237, 232, 0.5);\n`;\n\nexport const Button = styled.button`\n  background-color: inherit;\n  border: none;\n  display: flex;\n  gap: 8px;\n  align-items: center;\n`;\n\nexport const Add = styled.p`\n  font-weight: 500;\n  color: #e6533c;\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    color: #efede8;\n  }\n\n  &:hover,\n  &:focus {\n    color: #efede8;\n  }\n  font-size: 14px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\n\nexport const ArrowIcon = styled.svg(\n  {\n    width: '16px',\n    height: '16px',\n  },\n  ({ iconColor = '#e6533c' }) => ({\n    fill: iconColor,\n    stroke: iconColor,\n  })\n);\n\nexport const Message = styled.p`\n  font-weight: 400;\n  color: rgba(239, 237, 232, 0.3);\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  font-size: 14px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\n\nexport const TableArea = styled.div`\n  @media screen and (min-width: 1440px) {\n    padding-left: 16px;\n  }\n`;\n\nexport const TableHeader = styled.div`\n  display: none;\n\n  @media screen and (min-width: 768px) {\n    display: grid;\n    grid-gap: 8px;\n    grid-template-columns: 90px 132px 128px 84px 78px 72px 20px;\n    grid-template-rows: auto;\n    grid-template-areas: 'grid1 grid2 grid3 grid4 grid5 grid6 grid7';\n    color: #ef8964;\n    font-size: 12px;\n    font-weight: 400;\n    margin-bottom: 8px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    grid-template-columns: 115px 157px 131px 106px 91px 82px 20px;\n  }\n`;\n\nexport const Grid1 = styled.div`\n  grid-area: grid1;\n`;\nexport const Grid2 = styled.div`\n  grid-area: grid2;\n`;\nexport const Grid3 = styled.div`\n  grid-area: grid3;\n`;\nexport const Grid4 = styled.div`\n  grid-area: grid4;\n`;\nexport const Grid5 = styled.div`\n  grid-area: grid5;\n`;\nexport const Grid6 = styled.div`\n  grid-area: grid6;\n`;\nexport const Grid7 = styled.div`\n  grid-area: grid7;\n`;\n\nexport const ShorterTitle = styled.div`\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  transition: all;\n\n  :hover {\n    overflow: inherit;\n    text-overflow: inherit;\n    white-space: inherit;\n    height: auto;\n  }\n\n  @media screen and (min-width: 768px) {\n    :hover {\n      font-size: 10px;\n    }\n  }\n\n  @media screen and (min-width: 1440px) {\n    :hover {\n      font-size: inherit;\n    }\n  }\n`;\n\nconst setListHeight = props => {\n  switch (props.dimentionList) {\n    case 'true':\n      return '930px';\n    case 'false':\n      return '335px';\n    default:\n      return '300px';\n  }\n};\n\nexport const List = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 40px;\n  height: ${setListHeight};\n  overflow-y: scroll;\n  overflow-x: hidden;\n\n  &::-webkit-scrollbar-track {\n    background-color: transparent;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    border-radius: 12px;\n    background: rgba(239, 237, 232, 0.1);\n    width: 6px;\n    height: 50px;\n  }\n\n  &::-webkit-scrollbar {\n    width: 8px;\n    height: 15px;\n  }\n\n  @media screen and (min-width: 768px) {\n    gap: 8px;\n    height: 136px;\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const ExerciseDiv = styled.div`\n  align-items: center;\n  font-size: 13px;\n  font-weight: 400;\n  color: #efede8;\n  display: grid;\n  grid-gap: 16px;\n  grid-template-columns: 81px 80px 76px 20px;\n  grid-template-rows: auto;\n  grid-template-areas:\n    'grid1 grid1 grid1 grid1'\n    'grid2 grid2 grid2 grid2'\n    'grid3 grid3 grid3 grid3'\n    'grid4 grid5 grid6 grid7';\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    grid-gap: 8px;\n    grid-template-columns: 90px 132px 128px 84px 78px 72px 20px;\n    grid-template-rows: 40px;\n    grid-template-areas: 'grid1 grid2 grid3 grid4 grid5 grid6 grid7';\n  }\n\n  @media screen and (min-width: 1440px) {\n    grid-template-columns: 115px 157px 131px 106px 91px 82px 20px;\n  }\n`;\n\nexport const Grid1 = styled.div`\n  grid-area: grid1;\n`;\nexport const Grid2 = styled.div`\n  grid-area: grid2;\n`;\nexport const Grid3 = styled.div`\n  grid-area: grid3;\n`;\nexport const Grid4 = styled.div`\n  grid-area: grid4;\n`;\nexport const Grid5 = styled.div`\n  grid-area: grid5;\n`;\nexport const Grid6 = styled.div`\n  grid-area: grid6;\n`;\nexport const Grid7 = styled.div`\n  grid-area: grid7;\n`;\n\nexport const Title = styled.p`\n  color: #ef8964;\n  height: 12px;\n  font-size: 12px;\n  font-weight: 400;\n  margin-bottom: 8px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  @media screen and (min-width: 768px) {\n    display: none;\n  }\n`;\n\nexport const Column = styled.p`\n  border: 1px solid rgba(239, 237, 232, 0.3);\n  border-radius: 12px;\n  display: flex;\n  align-items: center;\n  padding-inline: 14px;\n  width: 100%;\n  height: 38px;\n\n  @media screen and (min-width: 768px) {\n    height: 40px;\n  }\n`;\n\nexport const ShorterTitle = styled.div`\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  transition: all 150ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover {\n    overflow: inherit;\n    text-overflow: inherit;\n    white-space: inherit;\n    height: auto;\n  }\n\n  @media screen and (min-width: 768px) {\n    :hover {\n      font-size: 12px;\n    }\n  }\n`;\n\nexport const ButtonEl = styled.button`\n  width: auto;\n  background-color: inherit;\n  border-radius: 12px;\n  border: none;\n  padding-inline: 0;\n`;\n\nexport const DeleteIcon = styled.svg(\n  {\n    width: '20px',\n    height: '20px',\n  },\n  ({ iconColor = '#EF8964' }) => ({\n    fill: iconColor,\n    stroke: iconColor,\n  })\n);\n","import {\n  ExerciseDiv,\n  Column,\n  ButtonEl,\n  DeleteIcon,\n  Grid1,\n  Grid2,\n  Grid3,\n  Grid4,\n  Grid5,\n  Grid6,\n  Grid7,\n  Title,\n  ShorterTitle,\n} from './ExerciseItem.styled';\nimport sprite from 'assets/images/sprite.svg';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteExercise } from 'redux/api/apiOperations';\n\nconst ExerciseItem = ({\n  id,\n  exercise,\n  caloriesBurned,\n  workoutTime,\n  dateForDelete,\n}) => {\n  const dispatch = useDispatch();\n\n  const handleClick = (id, dateForDelete) => {\n    dispatch(deleteExercise({ exerciseId: id, date: dateForDelete }));\n  };\n\n  return (\n    <ExerciseDiv key={id}>\n      <Grid1>\n        <Title>Body Part</Title>\n        <Column>\n          <ShorterTitle>{exercise.bodyPart}</ShorterTitle>\n        </Column>\n      </Grid1>\n      <Grid2>\n        <Title>Equipment</Title>\n        <Column>\n          <ShorterTitle>{exercise.equipment}</ShorterTitle>\n        </Column>\n      </Grid2>\n      <Grid3>\n        <Title>Name</Title>\n        <Column>\n          <ShorterTitle>{exercise.name}</ShorterTitle>\n        </Column>\n      </Grid3>\n      <Grid4>\n        <Title>Target</Title>\n        <Column>\n          <ShorterTitle>{exercise.target}</ShorterTitle>\n        </Column>\n      </Grid4>\n      <Grid5>\n        <Title>Burned Calorie</Title>\n        <Column>{caloriesBurned}</Column>\n      </Grid5>\n      <Grid6>\n        <Title>Time</Title>\n        <Column>{workoutTime}</Column>\n      </Grid6>\n      <Grid7>\n        <Title></Title>\n        <ButtonEl onClick={() => handleClick(id, dateForDelete)}>\n          <DeleteIcon iconColor=\"#EF8964\">\n            <use href={`${sprite}#trash`} />\n          </DeleteIcon>\n        </ButtonEl>\n      </Grid7>\n    </ExerciseDiv>\n  );\n};\n\nExerciseItem.propTypes = {\n  id: PropTypes.string,\n  exercise: PropTypes.shape({\n    bodyPart: PropTypes.string,\n    equipment: PropTypes.string,\n    name: PropTypes.string,\n    target: PropTypes.string,\n  }),\n  caloriesBurned: PropTypes.number,\n  workoutTime: PropTypes.number,\n  dateForDelete: PropTypes.string,\n};\n\nexport default ExerciseItem;\n","import {\n  DayExercisesArea,\n  TitleArea,\n  Title,\n  Button,\n  Add,\n  ArrowIcon,\n  Message,\n  TableArea,\n  TableHeader,\n  List,\n  Grid1,\n  Grid2,\n  Grid3,\n  Grid4,\n  Grid5,\n  Grid6,\n  Grid7,\n  ShorterTitle,\n} from './DayExercises.styled';\nimport sprite from 'assets/images/sprite.svg';\nimport { useSelector } from 'react-redux';\nimport { selectError, selectIsLoading } from 'redux/api/apiSelectors';\nimport Loader from 'components/Loader';\nimport { Notify } from 'notiflix';\nimport ExerciseItem from './ExerciseItem';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst DayExercises = ({\n  doneExercises,\n  dateForDelete,\n  caloriesBurned,\n  workoutTime,\n}) => {\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const location = useLocation();\n\n  return (\n    <DayExercisesArea\n      dimentionArea={\n        doneExercises && doneExercises.length > 0 ? 'true' : 'false'\n      }\n    >\n      <TitleArea>\n        <Title>Execrcises</Title>\n        <Link to={`/exercises`} state={{ from: location }}>\n          <Button>\n            <Add>Add exercise</Add>\n            <ArrowIcon iconColor=\"#E6533C\">\n              <use href={`${sprite}#arrow`} />\n            </ArrowIcon>\n          </Button>\n        </Link>\n      </TitleArea>\n\n      <TableArea>\n        {isLoading && <Loader />}\n        {doneExercises && doneExercises.length > 0 ? (\n          <>\n            <TableHeader>\n              <Grid1>Body Part</Grid1>\n              <Grid2>Equipment</Grid2>\n              <Grid3>Name</Grid3>\n              <Grid4>Target</Grid4>\n              <Grid5>\n                <ShorterTitle>Burned Calories</ShorterTitle>\n              </Grid5>\n              <Grid6>Time</Grid6>\n              <Grid7 />\n            </TableHeader>\n            <List\n              dimentionList={\n                doneExercises && doneExercises.length > 0 ? 'true' : 'false'\n              }\n            >\n              {doneExercises.map(\n                ({ _id, exercise, caloriesBurned, workoutTime }) => (\n                  <ExerciseItem\n                    key={_id}\n                    id={_id}\n                    exercise={exercise}\n                    dateForDelete={dateForDelete}\n                    caloriesBurned={caloriesBurned}\n                    workoutTime={workoutTime}\n                  />\n                )\n              )}\n            </List>\n          </>\n        ) : (\n          <Message>Not found exercises</Message>\n        )}\n        {error && Notify.failure(error.message)}\n      </TableArea>\n    </DayExercisesArea>\n  );\n};\n\nexport default DayExercises;\n","import styled from '@emotion/styled';\n\nconst setAreaHeight = props => {\n  switch (props.dimentionArea) {\n    case 'true':\n      return '780px';\n    case 'false':\n      return '335px';\n    default:\n      return '335px';\n  }\n};\n\nexport const DayProductsArea = styled.div`\n  position: relative;\n  width: 100%;\n  border: 1px solid;\n  border-color: rgba(239, 237, 232, 0.2);\n  border-radius: 12px;\n  background-color: rgba(239, 237, 232, 0.05);\n  padding: 16px;\n  height: ${setAreaHeight};\n  padding-right: 8px;\n\n  @media screen and (min-width: 768px) {\n    height: 234px;\n    padding-right: 16px;\n  }\n`;\n\nexport const TitleArea = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 22px;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 16px;\n  }\n`;\n\nexport const Title = styled.h3`\n  font-size: 14px;\n  font-weight: 400;\n  color: rgba(239, 237, 232, 0.5);\n`;\n\nexport const Button = styled.button`\n  background-color: inherit;\n  border: none;\n  display: flex;\n  gap: 8px;\n  align-items: center;\n`;\n\nexport const Add = styled.p`\n  font-weight: 500;\n  color: #e6533c;\n\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  font-size: 14px;\n\n  &:hover,\n  &:focus {\n    color: #efede8;\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n  &:hover {\n    color: #efede8;\n  }\n`;\n\nexport const ArrowIcon = styled.svg(\n  {\n    width: '16px',\n    height: '16px',\n  },\n  ({ iconColor = '#e6533c' }) => ({\n    fill: iconColor,\n    stroke: iconColor,\n  })\n);\n\nexport const Message = styled.p`\n  font-weight: 400;\n  color: rgba(239, 237, 232, 0.3);\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  font-size: 14px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\nexport const TableArea = styled.div`\n  @media screen and (min-width: 1440px) {\n    padding-left: 16px;\n  }\n`;\n\nexport const TableHeader = styled.div`\n  display: none;\n\n  @media screen and (min-width: 768px) {\n    display: grid;\n    grid-gap: 8px;\n    grid-template-columns: 204px 128px 90px 90px 80px 20px;\n    grid-template-rows: auto;\n    grid-template-areas: 'grid1 grid2 grid3 grid4 grid5 grid6';\n    color: #ef8964;\n    font-size: 12px;\n    font-weight: 400;\n    margin-bottom: 8px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    grid-template-columns: 212px 166px 105px 105px 110px 20px;\n  }\n`;\n\nexport const Grid1 = styled.div`\n  grid-area: grid1;\n`;\nexport const Grid2 = styled.div`\n  grid-area: grid2;\n`;\nexport const Grid3 = styled.div`\n  grid-area: grid3;\n`;\nexport const Grid4 = styled.div`\n  grid-area: grid4;\n`;\nexport const Grid5 = styled.div`\n  grid-area: grid5;\n`;\nexport const Grid6 = styled.div`\n  grid-area: grid6;\n`;\n\nconst setListHeight = props => {\n  switch (props.dimentionList) {\n    case 'true':\n      return '700px';\n    case 'false':\n      return '335px';\n    default:\n      return '300px';\n  }\n};\n\nexport const List = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 40px;\n  height: ${setListHeight};\n  overflow-y: scroll;\n  overflow-x: hidden;\n\n  &::-webkit-scrollbar-track {\n    background-color: transparent;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    border-radius: 12px;\n    background: rgba(239, 237, 232, 0.1);\n    width: 6px;\n    height: 90px;\n  }\n\n  &::-webkit-scrollbar {\n    width: 8px;\n    height: 15px;\n  }\n\n  @media screen and (min-width: 768px) {\n    gap: 8px;\n    height: 136px;\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const ProductDiv = styled.div`\n  align-items: center;\n  font-size: 13px;\n  font-weight: 400;\n  color: #efede8;\n  display: grid;\n  grid-gap: 14px;\n  grid-template-columns: 81px 80px 76px 20px;\n  grid-template-rows: auto;\n  grid-template-areas:\n    'grid1 grid1 grid1 grid1'\n    'grid2 grid2 grid2 grid2'\n    'grid3 grid4 grid5 grid6';\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    grid-gap: 8px;\n    grid-template-columns: 204px 128px 90px 90px 80px 20px;\n    grid-template-rows: 40px;\n    grid-template-areas: 'grid1 grid2 grid3 grid4 grid5 grid6';\n  }\n\n  @media screen and (min-width: 1440px) {\n    grid-template-columns: 212px 166px 105px 105px 110px 20px;\n  }\n`;\n\nexport const Grid1 = styled.div`\n  grid-area: grid1;\n`;\nexport const Grid2 = styled.div`\n  grid-area: grid2;\n`;\nexport const Grid3 = styled.div`\n  grid-area: grid3;\n`;\nexport const Grid4 = styled.div`\n  grid-area: grid4;\n`;\nexport const Grid5 = styled.div`\n  grid-area: grid5;\n`;\nexport const Grid6 = styled.div`\n  grid-area: grid6;\n`;\n\nexport const Title = styled.p`\n  color: #ef8964;\n  height: 12px;\n  font-size: 12px;\n  font-weight: 400;\n  margin-bottom: 8px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  @media screen and (min-width: 768px) {\n    display: none;\n  }\n`;\n\nexport const Column = styled.div`\n  border: 1px solid rgba(239, 237, 232, 0.3);\n  border-radius: 12px;\n  display: flex;\n  align-items: center;\n  padding-inline: 14px;\n\n  width: 100%;\n  height: 38px;\n\n  @media screen and (min-width: 768px) {\n    height: 40px;\n  }\n`;\n\nexport const ButtonEl = styled.button`\n  width: auto;\n  background-color: inherit;\n  border-radius: 12px;\n  border: none;\n  padding-inline: 0;\n`;\n\nexport const DeleteIcon = styled.svg(\n  {\n    width: '20px',\n    height: '20px',\n  },\n  ({ iconColor = '#EF8964' }) => ({\n    fill: iconColor,\n    stroke: iconColor,\n  })\n);\n\nexport const Indicator = styled.span`\n  display: inline-block;\n  width: 14px;\n  height: 14px;\n  border-radius: 10px;\n  background: ${props => props.color};\n`;\n\nexport const RecommendText = styled.span`\n  margin-left: 8px;\n`;\n\nexport const ShorterTitle = styled.div`\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  transition: all 150ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover {\n    overflow: inherit;\n    text-overflow: inherit;\n    white-space: inherit;\n    height: auto;\n  }\n\n  @media screen and (min-width: 768px) {\n    :hover {\n      font-size: 12px;\n    }\n  }\n`;","import {\n  ProductDiv,\n  Column,\n  ButtonEl,\n  DeleteIcon,\n  Grid1,\n  Grid2,\n  Grid3,\n  Grid4,\n  Grid5,\n  Grid6,\n  Title,\n  Indicator,\n  RecommendText,\n  ShorterTitle,\n} from './ProductItem.styled';\nimport sprite from 'assets/images/sprite.svg';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteProduct } from 'redux/api/apiOperations';\n\nconst ProductItem = ({\n  id,\n  product,\n  caloriesConsumed,\n  weightConsumed,\n  recommendedByGroupBlood,\n  dateForDelete,\n}) => {\n  const dispatch = useDispatch();\n\n  const isRecommended = recommendedByGroupBlood;\n\n  const handleClick = (id, dateForDelete) => {\n    dispatch(deleteProduct({ productId: id, date: dateForDelete }));\n  };\n\n  return (\n    <ProductDiv key={id}>\n      <Grid1>\n        <Title>Title</Title>\n        <Column>\n          <ShorterTitle>{product.title}</ShorterTitle>\n        </Column>\n      </Grid1>\n      <Grid2>\n        <Title>Category</Title>\n        <Column>\n          <ShorterTitle>{product.category}</ShorterTitle>\n        </Column>\n      </Grid2>\n      <Grid3>\n        <Title>Calories</Title>\n        <Column>{caloriesConsumed}</Column>\n      </Grid3>\n      <Grid4>\n        <Title>Weight</Title>\n        <Column>{weightConsumed}</Column>\n      </Grid4>\n      <Grid5>\n        <Title>Recommend</Title>\n        <Column>\n          {isRecommended ? (\n            <>\n              <Indicator color=\"#419B09\" />\n              <RecommendText>Yes</RecommendText>\n            </>\n          ) : (\n            <>\n              <Indicator color=\"#E9101D\" />\n              <RecommendText>No</RecommendText>\n            </>\n          )}\n        </Column>\n      </Grid5>\n      <Grid6>\n        <Title></Title>\n        <ButtonEl onClick={() => handleClick(id, dateForDelete)}>\n          <DeleteIcon iconColor=\"#EF8964\">\n            <use href={`${sprite}#trash`} />\n          </DeleteIcon>\n        </ButtonEl>\n      </Grid6>\n    </ProductDiv>\n  );\n};\n\nProductItem.propTypes = {\n  id: PropTypes.string,\n  product: PropTypes.shape({\n    title: PropTypes.string,\n    category: PropTypes.string,\n  }),\n  caloriesConsumed: PropTypes.number,\n  weightConsumed: PropTypes.number,\n  dateForDelete: PropTypes.string,\n  recommendedByGroupBlood: PropTypes.bool,\n};\n\nexport default ProductItem;\n","import {\n  DayProductsArea,\n  TitleArea,\n  Title,\n  Button,\n  Add,\n  ArrowIcon,\n  TableArea,\n  Message,\n  TableHeader,\n  List,\n  Grid1,\n  Grid2,\n  Grid3,\n  Grid4,\n  Grid5,\n  Grid6,\n} from './DayProducts.styled';\nimport sprite from 'assets/images/sprite.svg';\nimport { useSelector } from 'react-redux';\nimport { selectError, selectIsLoading } from 'redux/api/apiSelectors';\nimport Loader from 'components/Loader';\nimport { Notify } from 'notiflix';\nimport ProductItem from './ProductItem';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst DayProducts = ({ consumedProducts, dateForDelete }) => {\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const location = useLocation();\n\n  return (\n    <DayProductsArea\n      dimentionArea={\n        consumedProducts && consumedProducts.length > 0 ? 'true' : 'false'\n      }\n    >\n      <TitleArea>\n        <Title>Products</Title>\n        <Link to={`/products`} state={{ from: location }}>\n          <Button>\n            <Add>Add product</Add>\n            <ArrowIcon iconColor=\"#E6533C\">\n              <use href={`${sprite}#arrow`} />\n            </ArrowIcon>\n          </Button>\n        </Link>\n      </TitleArea>\n      <TableArea>\n        {isLoading && <Loader />}\n        {consumedProducts && consumedProducts.length > 0 ? (\n          <>\n            <TableHeader>\n              <Grid1>Title</Grid1>\n              <Grid2>Category</Grid2>\n              <Grid3>Calories</Grid3>\n              <Grid4>Weight</Grid4>\n              <Grid5>Recommend</Grid5>\n              <Grid6></Grid6>\n            </TableHeader>\n            <List\n              dimentionList={\n                consumedProducts && consumedProducts.length > 0\n                  ? 'true'\n                  : 'false'\n              }\n            >\n              {consumedProducts.map(\n                ({\n                  _id,\n                  product,\n                  caloriesConsumed,\n                  weightConsumed,\n                  recommendedByGroupBlood,\n                }) => (\n                  <ProductItem\n                    key={_id}\n                    id={_id}\n                    product={product}\n                    caloriesConsumed={caloriesConsumed}\n                    weightConsumed={weightConsumed}\n                    recommendedByGroupBlood={recommendedByGroupBlood}\n                    dateForDelete={dateForDelete}\n                  />\n                )\n              )}\n            </List>\n          </>\n        ) : (\n          <Message>Not found exercises</Message>\n        )}\n        {error && Notify.failure(error.message)}\n      </TableArea>\n    </DayProductsArea>\n  );\n};\n\nexport default DayProducts;\n","import styled from '@emotion/styled';\n\nexport const DaySwitchArea = styled.div`\n  position: absolute;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  right: 0;\n  top: 46px;\n  gap: 20px;\n\n  @media screen and (min-width: 768px) {\n    top: 52px;\n    gap: 40px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    right: 64px;\n  }\n`;\n\nexport const ArrowIcon = styled.svg`\n  width: 16px;\n  height: 16px;\n`;\n\nexport const Button = styled.button`\n  border: none;\n  background-color: inherit;\n  width: 20px;\n  height: 20px;\n  padding: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const ArrowArea = styled.div`\n  display: flex;\n  gap: 6px;\n`;\n","import { css } from '@emotion/react';\nimport styled from '@emotion/styled';\n\nexport const calendarGlobalStyles = css`\n  .react-datepicker__wrapper {\n    position: relative;\n  }\n  .react-datepicker {\n    position: absolute;\n    left: 0;\n    top: 50%;\n    transform: translate(-1%, 0%);\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: auto;\n    height: auto;\n    padding: 14px 14px;\n    background-color: #ef8964;\n    font-family: Inter;\n    border-radius: 16px;\n    border: none;\n  }\n  .react-datepicker__month-container {\n    float: inherit;\n    box-sizing: border-box;\n  }\n  .react-datepicker__header {\n    position: relative;\n    background-color: #ef8964;\n  }\n  .react-datepicker__day-names {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 8px 8px;\n    border-top: 1px solid rgba(239, 237, 232, 0.2);\n  }\n  .react-datepicker__header:not(.react-datepicker__header--has-time-select) {\n    border-bottom: 0px;\n    padding: 0;\n  }\n  .react-datepicker__day\n    react-datepicker__day--018.react-datepicker__day--selected\n    react-datepicker__day--today {\n    outline: none;\n    border: none;\n  }\n  .react-datepicker__current-month {\n    font-family: Inter;\n    font-size: 18px;\n    font-style: normal;\n    font-weight: 600;\n    text-align: center;\n    color: #efede8;\n    margin-bottom: 8px;\n  }\n  .react-datepicker__day-name {\n    margin: 0;\n    padding: 8px 8px;\n    font-family: Inter;\n    font-size: 14px;\n    font-style: normal;\n    font-weight: 600;\n    line-height: 18px;\n    text-align: center;\n    color: rgba(239, 237, 232, 0.5);\n  }\n  .react-datepicker__navigation {\n    margin-top: 4px;\n    color: #efe8eb;\n  }\n  .react-datepicker__navigation--previous {\n    left: 7px;\n    top: 14px;\n    width: 18px;\n    height: 18px;\n  }\n  .react-datepicker__navigation--next {\n    right: 7px;\n    top: 14px;\n    width: 18px;\n    height: 18px;\n  }\n  .react-datepicker__navigation-icon::before:hover:focus {\n    border-color: #efede8;\n  }\n  .react-datepicker__week {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    color: #efede8;\n  }\n  .react-datepicker__day {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 8px;\n    flex-shrink: 0;\n    margin: 0;\n    width: 32px;\n    height: 32px;\n    border-radius: 50%;\n    color: #efede8;\n    font-family: Inter;\n    font-size: 14px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: 18px;\n    text-align: center;\n  }\n  .react-datepicker__month {\n    display: flex;\n    gap: 7px;\n    flex-direction: column;\n    justify-content: space-between;\n    padding-top: 14px;\n    margin: 0;\n  }\n  .react-datepicker__day--selected {\n    background-color: #040404;\n    color: #efe8e8;\n    font-size: 14px;\n  }\n  .react-datepicker__day--selected:hover {\n    border-radius: 50%;\n    background-color: #040404;\n  }\n  .react-datepicker__day:hover {\n    border-radius: 50%;\n    background-color: #040404;\n    color: #efede8;\n  }\n  .react-datepicker__day--keyboard-selected {\n    border-radius: 50%;\n    background-color: #040404;\n    color: #efede8;\n  }\n  .react-datepicker__day--weekend {\n  }\n  .react-datepicker__day--disabled {\n    opacity: 50%;\n  }\n  .react-datepicker__day--outside-month {\n    background-color: transparent;\n    pointer-events: none;\n    opacity: 0;\n  }\n  .react-datepicker__view-calendar-icon input {\n    padding: 6px 10px 5px 13px;\n  }\n  .react-datepicker__triangle {\n    visibility: hidden;\n  }\n`;\n\nexport const TitleWrapper = styled.button`\n  color: #efede8;\n  background: inherit;\n  border: none;\n  font-weight: 700;\n  text-align: center;\n  text-transform: uppercase;\n  display: flex;\n  gap: 8px;\n  justify-content: center;\n  align-items: center;\n  font-size: 18px;\n\n\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  @media screen and (min-width: 375px) {\n    font-size: 18px;\n\n  &:hover,\n  &:focus {\n    color: #ef8964;\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 24px;\n  }\n`;\n\nexport const CalendarIcon = styled.svg`\n  fill: none;\n    width: 20px;\n  height: 20px;\n   transition: fill 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    fill: #e6533c;\n  }\n\n\n  @media screen and (min-width: 768px) {\n    width: 24px;\n    height: 24px;\n  }\n`;\n","import { forwardRef } from 'react';\nimport { format } from 'date-fns';\nimport DatePicker from 'react-datepicker';\nimport {\n  calendarGlobalStyles,\n  TitleWrapper,\n  CalendarIcon,\n} from './Datepicker.styled';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport sprite from 'assets/images/sprite.svg';\nimport { Global } from '@emotion/react';\n\nconst StyledDatepicker = ({\n  selectedDate,\n  setSelectedDate,\n  user,\n  onDateChange,\n}) => {\n  const createdDate = Date.parse(user.createdAt);\n\n  const submitSelectedDate = date => {\n    setSelectedDate(date);\n    onDateChange(date);\n  };\n\n  const CustomInput = forwardRef(({ value, onClick }, ref) => {\n    return (\n      <TitleWrapper onClick={onClick} ref={ref}>\n        {format(selectedDate, 'dd/MM/yyyy')}\n        <CalendarIcon iconColor=\"#EF8964\">\n          {/* <use href={`${sprite}#calendar`} /> */}\n          <use href={`${sprite}#icon-calendar`} />\n        </CalendarIcon>\n      </TitleWrapper>\n    );\n  });\n\n  return (\n    <>\n      <Global styles={calendarGlobalStyles} />\n      <DatePicker\n        selected={selectedDate}\n        onChange={date => {\n          submitSelectedDate(date);\n        }}\n        customInput={<CustomInput />}\n        dateFormat={'dd MM yyyy'}\n        calendarStartDay={1}\n        minDate={user.createdAt ? createdDate : Date.now()}\n        maxDate={Date.now()}\n      />\n    </>\n  );\n};\n\nexport default StyledDatepicker;\n","import {\n  DaySwitchArea,\n  ArrowIcon,\n  Button,\n  ArrowArea,\n} from './DaySwitch.styled';\nimport StyledDatepicker from './Datepicker';\nimport sprite from 'assets/images/sprite.svg';\nimport { useState } from 'react';\n\nconst DaySwitch = ({ selectedDate, setSelectedDate, user }) => {\n  const [disabledLeft, setDisabledLeft] = useState(false);\n  const [disabledRight, setDisabledRight] = useState(true);\n  const createdDate = Date.parse(user.createdAt);\n\n  const handleDateChange = date => {\n    setSelectedDate(date);\n  };\n\n  const handlePrevDay = () => {\n    const newDate = new Date(selectedDate);\n    newDate.setDate(selectedDate.getDate() - 1);\n    setSelectedDate(newDate);\n\n    const formatNewDate = Math.floor(newDate.getTime() / (24 * 60 * 60 * 1000));\n    const formatRegisterDate = Math.floor(createdDate / (24 * 60 * 60 * 1000));\n\n    if (formatNewDate < formatRegisterDate) {\n      setDisabledLeft(true);\n    }\n    setDisabledRight(false);\n  };\n\n  const handleNextDay = () => {\n    const newDate = new Date(selectedDate);\n    newDate.setDate(selectedDate.getDate() + 1);\n    setSelectedDate(newDate);\n\n    const formatNewDate = Math.floor(newDate.getTime() / (24 * 60 * 60 * 1000));\n    const formatTodayDate = Math.floor(new Date() / (24 * 60 * 60 * 1000)) - 1;\n\n    if (formatNewDate > formatTodayDate) {\n      setDisabledRight(true);\n    }\n    setDisabledLeft(false);\n  };\n\n  return (\n    <DaySwitchArea>\n      <StyledDatepicker\n        selectedDate={selectedDate}\n        setSelectedDate={setSelectedDate}\n        user={user}\n        onDateChange={handleDateChange}\n      />\n      <ArrowArea>\n        <Button type=\"button\" onClick={handlePrevDay} disabled={disabledLeft}>\n          <ArrowIcon\n            style={{\n              '--color1': disabledLeft ? 'rgba(239, 237, 232, 0.2)' : '#efede8',\n            }}\n          >\n            <use href={`${sprite}#icon-chevron-left`} />\n          </ArrowIcon>\n        </Button>\n        <Button type=\"button\" onClick={handleNextDay} disabled={disabledRight}>\n          <ArrowIcon\n            style={{\n              '--color1': disabledRight\n                ? 'rgba(239, 237, 232, 0.2)'\n                : '#efede8',\n            }}\n          >\n            <use href={`${sprite}#icon-chevron-right`} />\n          </ArrowIcon>\n        </Button>\n      </ArrowArea>\n    </DaySwitchArea>\n  );\n};\n\nexport default DaySwitch;\n","import styled from '@emotion/styled';\n\nexport const DiaryWrapper = styled.div`\n  padding-top: 62px;\n  padding-bottom: 80px;\n  width: 100%;\n\n  @media screen and (min-width: 768px) {\n    padding-bottom: 64px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding-top: 85px;\n    padding-bottom: 68px;\n  }\n`;\n\nexport const ForPosition = styled.div`\n  width: 100%;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n\n  @media screen and (min-width: 1440px) {\n    padding-inline: 64px;\n  }\n`;\n\nexport const DiaryContainer = styled.div`\n  display: grid;\n  grid-gap: 40px;\n  grid-template-columns: 100%;\n  grid-template-rows: auto;\n  grid-template-areas:\n    'grid2'\n    'grid1';\n  margin-top: 40px;\n\n  @media screen and (min-width: 768px) {\n    display: flex;\n    flex-direction: column;\n    gap: 64px;\n    margin-top: 32px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    flex-direction: row;\n    gap: 32px;\n  }\n`;\n\nexport const Left = styled.div`\n  grid-area: grid1;\n  display: flex;\n  flex-direction: column;\n  width: 335px;\n  gap: 40px;\n\n  @media screen and (min-width: 768px) {\n    width: 704px;\n    gap: 32px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 826px;\n  }\n`;\n\nexport const Right = styled.div`\n  grid-area: grid2;\n  width: 335px;\n\n  @media screen and (min-width: 768px) {\n    width: 593px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 390px;\n  }\n`;\n","import Container from 'components/Container';\nimport DayDashboard from 'components/DayDashboard';\nimport DayExercises from 'components/DayExercises';\nimport DayProducts from 'components/DayProducts';\nimport DaySwitch from 'components/DaySwitch';\nimport TitlePage from 'components/TitlePage';\nimport {\n  DiaryWrapper,\n  DiaryContainer,\n  Left,\n  Right,\n  ForPosition,\n} from './Diary.styled';\nimport Notice from 'components/Notice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport { selectDiary } from 'redux/api/apiSelectors';\nimport { currentUser } from 'redux/auth/authOperations';\nimport { selectUser } from 'redux/auth/authSelectors';\nimport { format } from 'date-fns';\nimport { selectDiaryUpdated } from 'redux/api/apiSelectors';\nimport { diaryUpdateReset, fetchDiary } from 'redux/api/apiOperations';\n\nconst Diary = () => {\n  const dispatch = useDispatch();\n  const [selectedDate, setSelectedDate] = useState(new Date(Date.now()));\n  const data = useSelector(selectDiary);\n\n  const { consumedProducts, doneExercises, date, caloriesBurned, workoutTime } =\n    data;\n  const user = useSelector(selectUser);\n  const newDate = format(selectedDate, 'dd-MM-yyyy');\n  const dairyUpdated = useSelector(selectDiaryUpdated);\n\n  useEffect(() => {\n    dispatch(fetchDiary({ date: newDate }));\n  }, [dispatch, newDate]);\n\n  useEffect(() => {\n    if (dairyUpdated) {\n      dispatch(fetchDiary({ date: newDate }));\n    }\n    dispatch(currentUser());\n    dispatch(diaryUpdateReset());\n  }, [dispatch, dairyUpdated, newDate]);\n\n  return (\n    <DiaryWrapper>\n      <Container>\n        <ForPosition>\n          <TitlePage title=\"Diary\" />\n          <DaySwitch\n            selectedDate={selectedDate}\n            setSelectedDate={setSelectedDate}\n            user={user}\n          />\n          <DiaryContainer>\n            <Left>\n              <DayProducts\n                consumedProducts={consumedProducts}\n                dateForDelete={date}\n              />\n              <DayExercises\n                doneExercises={doneExercises}\n                dateForDelete={date}\n                caloriesBurned={caloriesBurned}\n                workoutTime={workoutTime}\n              />\n            </Left>\n            <Right>\n              <DayDashboard data={data} />\n              <Notice notice=\"Record all your meals in the calorie diary every day. This will help you be aware of your nutrition and make informed choices.\" />\n            </Right>\n          </DiaryContainer>\n        </ForPosition>\n      </Container>\n    </DiaryWrapper>\n  );\n};\n\nexport default Diary;\n","export const selectCategories = state => state.api.categories; // []\n\nexport const selectExercises = state => state.api.exercises; // { result: [], total_results: number }\n\nexport const selectFilters = state => state.api.filters; // { result: [], total_results: number }\n\nexport const selectProducts = state => state.api.products; // { result: [], total_results: number }\n\nexport const selectIsLoading = state => state.api.isLoading; // boolean\n\nexport const selectError = state => state.api.error; // { message: string }\n\nexport const selectCalculate = state => state.api.calculate; // {}\n\nexport const selectDiary = state => state.api.diary; // {}\n\nexport const selectDiaryUpdated = state => state.api.diaryUpdated; // boolean\n\nexport const selectStatistics = state => state.api.statistics; // {}\n"],"names":["_ref","children","_jsx","ContainerWrapper","styled","div","_templateObject","_taggedTemplateLiteral","NoticeArea","NoticeIcon","_templateObject2","NoticeMessage","svg","width","height","_templateObject3","notice","_jsxs","fill","href","concat","sprite","Title","h1","title","DayDashboardArea","ul","DashboardItem","li","props","borderColor","accent","TitleArea","Icon","_ref$iconColor","iconColor","stroke","p","_templateObject4","Value","_templateObject5","data","dailyPhysicalActivity","userBMR","caloriesBurnedSum","caloriesConsumedSum","caloriesRemaining","sportsRemaining","Object","keys","length","Math","abs","DayExercisesArea","dimentionArea","h3","Button","button","Add","ArrowIcon","Message","_templateObject6","TableArea","_templateObject7","TableHeader","_templateObject8","Grid1","_templateObject9","Grid2","_templateObject10","Grid3","_templateObject11","Grid4","_templateObject12","Grid5","_templateObject13","Grid6","_templateObject14","Grid7","_templateObject15","ShorterTitle","_templateObject16","List","_templateObject17","dimentionList","ExerciseDiv","Column","ButtonEl","DeleteIcon","id","exercise","caloriesBurned","workoutTime","dateForDelete","dispatch","useDispatch","bodyPart","equipment","name","target","onClick","deleteExercise","exerciseId","date","handleClick","doneExercises","isLoading","useSelector","selectIsLoading","error","selectError","location","useLocation","Link","to","state","from","Loader","_Fragment","map","_ref2","_id","ExerciseItem","Notify","failure","message","DayProductsArea","ProductDiv","Indicator","span","color","RecommendText","product","caloriesConsumed","weightConsumed","recommendedByGroupBlood","isRecommended","category","deleteProduct","productId","consumedProducts","ProductItem","DaySwitchArea","ArrowArea","calendarGlobalStyles","css","TitleWrapper","CalendarIcon","selectedDate","setSelectedDate","user","onDateChange","createdDate","Date","parse","createdAt","CustomInput","forwardRef","ref","value","format","Global","styles","DatePicker","selected","onChange","submitSelectedDate","customInput","dateFormat","calendarStartDay","minDate","now","maxDate","_useState","useState","_useState2","_slicedToArray","disabledLeft","setDisabledLeft","_useState3","_useState4","disabledRight","setDisabledRight","StyledDatepicker","type","newDate","setDate","getDate","floor","getTime","disabled","style","DiaryWrapper","ForPosition","DiaryContainer","Left","Right","selectDiary","selectUser","dairyUpdated","selectDiaryUpdated","useEffect","fetchDiary","currentUser","diaryUpdateReset","Container","TitlePage","DaySwitch","DayProducts","DayExercises","DayDashboard","Notice","selectCategories","api","categories","selectExercises","exercises","selectFilters","filters","selectProducts","products","selectCalculate","calculate","diary","diaryUpdated","selectStatistics","statistics"],"sourceRoot":""}
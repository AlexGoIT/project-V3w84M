{"version":3,"file":"static/js/534.1271d4fd.chunk.js","mappings":"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","sources":["components/Container/Container.jsx","components/Container/Container.styled.js","components/Notice/Notice.styled.js","components/Notice/Notice.jsx","components/TitlePage/TitlePage.styled.js","components/TitlePage/TitlePage.jsx","components/DayDashboard/DayDashboard.styled.js","components/DayDashboard/DayDashboard.jsx","components/DayExercises/DayExercises.styled.js","components/DayExercises/ExerciseItem/ExerciseItem.styled.js","components/DayExercises/ExerciseItem/ExerciseItem.jsx","components/DayExercises/DayExercises.jsx","components/DayProducts/DayProducts.styled.js","components/DayProducts/ProductItem/ProductItem.styled.js","components/DayProducts/ProductItem/ProductItem.jsx","components/DayProducts/DayProducts.jsx","components/DaySwitch/DaySwitch.styled.js","components/DaySwitch/Datepicker/Datepicker.styled.jsx","components/DaySwitch/Datepicker/Datepicker.jsx","components/DaySwitch/DaySwitch.jsx","pages/Diary/Diary.styled.js","pages/Diary/Diary.jsx","redux/api/apiSelectors.js"],"sourcesContent":["import { ContainerWrapper } from './Container.styled';\n\nconst Container = ({ children }) => {\n  return <ContainerWrapper>{children}</ContainerWrapper>;\n};\n\nexport default Container;\n","import styled from '@emotion/styled';\n\nexport const ContainerWrapper = styled.div`\n  width: 100%;\n  margin-inline: auto;\n  padding-inline: 20px;\n  /* padding-top: 61px; */\n\n  @media screen and (min-width: 375px) {\n    width: 375px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 768px;\n    padding-inline: 32px;\n    /* padding-top: 84px; */\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 1440px;\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const NoticeArea = styled.div`\n  display: flex;\n  gap: 8px;\n  width: 100%;\n`;\n\nexport const NoticeIcon = styled.div`\n  width: 24px;\n  height: 24px;\n  border-radius: 12px;\n  background-color: #efa082;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const WarningIcon = styled.svg({\n  width: '16px',\n  height: '16px',\n});\n\nexport const NoticeMessage = styled.div`\n  width: 100%;\n  height: auto;\n  color: rgba(239, 237, 232, 0.3);\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 1.5;\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\n","import PropTypes from 'prop-types';\n\nimport { NoticeMessage, NoticeArea, NoticeIcon } from './Notice.styled';\n\nimport sprite from 'assets/images/sprite.svg';\n\nconst Notice = ({ notice }) => {\n  return (\n    <NoticeArea>\n      <NoticeIcon>\n        <svg width=\"18\" height=\"18\" fill=\"#efede8\">\n          <use href={`${sprite}#warning`} />\n        </svg>\n      </NoticeIcon>\n      <NoticeMessage>{notice}</NoticeMessage>\n    </NoticeArea>\n  );\n};\n\nexport default Notice;\n\nNotice.propTypes = {\n  notice: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Title = styled.h1`\n  margin-top: 40px;\n  font-family: Roboto;\n  color: #efede8;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 1.375;\n\n  @media screen and (min-width: 375px) {\n    margin-top: 40px;\n    font-size: 24px;\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-top: 72px;\n    font-size: 32px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Title } from './TitlePage.styled';\n\nconst TitlePage = ({ title }) => {\n  return <Title>{title}</Title>;\n};\n\nexport default TitlePage;\n\nTitlePage.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const DayDashboardArea = styled.ul`\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n\n  @media screen and (min-width: 375px) {\n    height: 328px;\n    margin-bottom: 20px;\n    row-gap: 20px;\n    column-gap: 13px;\n  }\n\n  @media screen and (min-width: 768px) {\n    height: 248px;\n    margin-bottom: 32px;\n    row-gap: 16px;\n    column-gap: 16px;\n    flex-direction: column;\n  }\n\n  @media screen and (min-width: 1440px) {\n    height: 380px;\n    margin-bottom: 48px;\n    flex-direction: row;\n  }\n`;\n\nconst setBgColor = props => {\n  switch (props.accent) {\n    case 'true':\n      return '#e6533c';\n    case 'false':\n      return 'rgba(239, 237, 232, 0.05)';\n    default:\n      return 'rgba(239, 237, 232, 0.05)';\n  }\n};\n\nexport const DashboardItem = styled.li`\n  border: 1px solid;\n  border-color: rgba(239, 237, 232, 0.2);\n  border-radius: 12px;\n  background-color: ${setBgColor};\n  padding: 18px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  @media screen and (min-width: 375px) {\n    width: 161px;\n    height: 96px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 187px;\n    height: 116px;\n  }\n`;\n\nexport const TitleArea = styled.div`\n  display: flex;\n  gap: 8px;\n  align-items: center;\n`;\n\nexport const Icon = styled.svg(\n  {\n    width: '20px',\n    height: '20px',\n  },\n  ({ iconColor = '#EF8964' }) => ({\n    fill: iconColor,\n    stroke: iconColor,\n  })\n);\n\nconst setTitleColor = props => {\n  switch (props.accent) {\n    case 'true':\n      return 'rgba(239, 237, 232, 0.8)';\n    case 'false':\n      return 'rgba(239, 237, 232, 0.4)';\n    default:\n      return 'rgba(239, 237, 232, 0.4)';\n  }\n};\n\nexport const Title = styled.p`\n  font-size: 12px;\n  font-weight: 400;\n  color: ${setTitleColor};\n`;\n\nexport const Value = styled.p`\n  font-weight: 700;\n  color: #efede8;\n\n  @media screen and (min-width: 375px) {\n    font-size: 18px;\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 24px;\n  }\n`;\n","import {\n  DayDashboardArea,\n  DashboardItem,\n  TitleArea,\n  Title,\n  Value,\n  Icon,\n} from './DayDashboard.styled';\nimport sprite from 'assets/images/sprite.svg';\n\nconst DayDashboard = ({ data }) => {\n  const {\n    dailyPhysicalActivity,\n    userBMR,\n    caloriesBurnedSum,\n    caloriesConsumedSum,\n    caloriesRemaining,\n    sportsRemaining,\n  } = data;\n\n  return (\n    <DayDashboardArea>\n      <DashboardItem accent=\"true\">\n        <TitleArea>\n          <Icon iconColor=\"#EF8964\">\n            <use href={`${sprite}#food`} />\n          </Icon>\n          <Title accent=\"true\">Daily calorie intake</Title>\n        </TitleArea>\n        {data && Object.keys(data).length !== 0 && <Value>{userBMR}</Value>}\n      </DashboardItem>\n      <DashboardItem accent=\"true\">\n        <TitleArea>\n          <Icon iconColor=\"#EF8964\">\n            <use href={`${sprite}#dumbbell`} />\n          </Icon>\n          <Title accent=\"true\">Daily physical activity</Title>\n        </TitleArea>\n        {data && Object.keys(data).length !== 0 && (\n          <Value>{dailyPhysicalActivity} min</Value>\n        )}\n      </DashboardItem>\n      <DashboardItem accent=\"false\">\n        <TitleArea>\n          <Icon iconColor=\"#EF8964\">\n            <use href={`${sprite}#apple`} />\n          </Icon>\n          <Title accent=\"false\">Calories consumed</Title>\n        </TitleArea>\n        {data && Object.keys(data).length !== 0 && (\n          <Value>{caloriesConsumedSum}</Value>\n        )}\n      </DashboardItem>\n      <DashboardItem accent=\"false\">\n        <TitleArea>\n          <Icon iconColor=\"#EF8964\">\n            <use href={`${sprite}#fire`} />\n          </Icon>\n          <Title accent=\"false\">Calories burned</Title>\n        </TitleArea>\n        {data && Object.keys(data).length !== 0 && (\n          <Value>{caloriesBurnedSum}</Value>\n        )}\n      </DashboardItem>\n      <DashboardItem accent=\"false\">\n        <TitleArea>\n          <Icon iconColor=\"#EF8964\">\n            <use href={`${sprite}#bubble`} />\n          </Icon>\n          <Title accent=\"false\">Calories remaining</Title>\n        </TitleArea>\n        {data && Object.keys(data).length !== 0 && (\n          <Value>{caloriesRemaining}</Value>\n        )}\n      </DashboardItem>\n      <DashboardItem accent=\"false\">\n        <TitleArea>\n          <Icon iconColor=\"#EF8964\">\n            <use href={`${sprite}#figure`} />\n          </Icon>\n          <Title accent=\"false\">Sports remaining</Title>\n        </TitleArea>\n        {data && Object.keys(data).length !== 0 && (\n          <Value>{sportsRemaining} min</Value>\n        )}\n      </DashboardItem>\n    </DayDashboardArea>\n  );\n};\n\nexport default DayDashboard;\n","import styled from '@emotion/styled';\n\nconst setHeight = props => {\n  switch (props.dimention) {\n    case 'true':\n      return '1064px';\n    case 'false':\n      return '335px';\n    default:\n      return '335px';\n  }\n};\n\nexport const DayExercisesArea = styled.div`\n  position: relative;\n  width: 100%;\n  border: 1px solid;\n  border-color: rgba(239, 237, 232, 0.2);\n  border-radius: 12px;\n  background-color: rgba(239, 237, 232, 0.05);\n  padding: 16px;\n\n  @media screen and (min-width: 375px) {\n    max-height: ${setHeight};\n  }\n\n  @media screen and (min-width: 768px) {\n    height: 234px;\n  }\n`;\n\nexport const TitleArea = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  @media screen and (min-width: 375px) {\n    margin-bottom: 22px;\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 16px;\n  }\n`;\n\nexport const Title = styled.h3`\n  font-size: 14px;\n  font-weight: 400;\n  color: rgba(239, 237, 232, 0.5);\n`;\n\nexport const Button = styled.button`\n  background-color: inherit;\n  border: none;\n  display: flex;\n  gap: 8px;\n  align-items: center;\n`;\n\nexport const Add = styled.p`\n  font-weight: 500;\n  color: #e6533c;\n\n  @media screen and (min-width: 375px) {\n    font-size: 14px;\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\n\nexport const ArrowIcon = styled.svg(\n  {\n    width: '16px',\n    height: '16px',\n  },\n  ({ iconColor = '#e6533c' }) => ({\n    fill: iconColor,\n    stroke: iconColor,\n  })\n);\n\nexport const Message = styled.p`\n  font-weight: 400;\n  color: rgba(239, 237, 232, 0.3);\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n\n  @media screen and (min-width: 375px) {\n    font-size: 14px;\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\n\nexport const TableArea = styled.div`\n  @media screen and (min-width: 1440px) {\n    padding-left: 16px;\n  }\n`;\n\nexport const TableHeader = styled.div`\n  @media screen and (min-width: 375px) {\n    display: none;\n  }\n\n  @media screen and (min-width: 768px) {\n    display: grid;\n    grid-gap: 8px;\n    grid-template-columns: 90px 132px 128px 84px 78px 72px 20px;\n    grid-template-rows: auto;\n    grid-template-areas: 'grid1 grid2 grid3 grid4 grid5 grid6 grid7';\n    color: #ef8964;\n    font-size: 12px;\n    font-weight: 400;\n    margin-bottom: 8px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    grid-template-columns: 115px 157px 131px 106px 91px 82px 20px;\n  }\n`;\n\nexport const Grid1 = styled.div`\n  grid-area: grid1;\n`;\nexport const Grid2 = styled.div`\n  grid-area: grid2;\n`;\nexport const Grid3 = styled.div`\n  grid-area: grid3;\n`;\nexport const Grid4 = styled.div`\n  grid-area: grid4;\n`;\nexport const Grid5 = styled.div`\n  grid-area: grid5;\n`;\nexport const Grid6 = styled.div`\n  grid-area: grid6;\n`;\nexport const Grid7 = styled.div`\n  grid-area: grid7;\n`;\n\nexport const ShorterTitle = styled.div`\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nexport const List = styled.div`\n  @media screen and (min-width: 375px) {\n    display: flex;\n    flex-direction: column;\n    gap: 38px;\n    height: 900px;\n    overflow-y: scroll;\n    overflow-x: hidden;\n\n    &::-webkit-scrollbar-track {\n      background: rgba(239, 237, 232, 0.1);\n      border-radius: 12px;\n      height: 15px;\n    }\n\n    &::-webkit-scrollbar-thumb {\n      background-color: #ef8964;\n      border-radius: 12px;\n      height: 15px;\n    }\n\n    &::-webkit-scrollbar {\n      width: 8px;\n      height: 15px;\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    gap: 8px;\n    height: 136px;\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const ExerciseDiv = styled.div`\n  @media screen and (min-width: 375px) {\n    align-items: center;\n    font-size: 13px;\n    font-weight: 400;\n    color: #efede8;\n    display: grid;\n    grid-gap: 14px;\n    grid-template-columns: 81px 80px 76px 20px;\n    grid-template-rows: auto;\n    grid-template-areas:\n      'grid1 grid1 grid1 grid1'\n      'grid2 grid2 grid2 grid2'\n      'grid3 grid3 grid3 grid3'\n      'grid4 grid5 grid6 grid7';\n  }\n\n  @media screen and (min-width: 768px) {\n    grid-gap: 8px;\n    grid-template-columns: 90px 132px 128px 84px 78px 72px 20px;\n    grid-template-rows: 40px;\n    grid-template-areas: 'grid1 grid2 grid3 grid4 grid5 grid6 grid7';\n  }\n\n  @media screen and (min-width: 1440px) {\n    grid-template-columns: 115px 157px 131px 106px 91px 82px 20px;\n  }\n`;\n\nexport const Grid1 = styled.div`\n  grid-area: grid1;\n`;\nexport const Grid2 = styled.div`\n  grid-area: grid2;\n`;\nexport const Grid3 = styled.div`\n  grid-area: grid3;\n`;\nexport const Grid4 = styled.div`\n  grid-area: grid4;\n`;\nexport const Grid5 = styled.div`\n  grid-area: grid5;\n`;\nexport const Grid6 = styled.div`\n  grid-area: grid6;\n`;\nexport const Grid7 = styled.div`\n  grid-area: grid7;\n`;\n\nexport const Title = styled.p`\n  color: #ef8964;\n  height: 12px;\n  font-size: 12px;\n  font-weight: 400;\n  margin-bottom: 8px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  @media screen and (min-width: 768px) {\n    display: none;\n  }\n`;\n\nexport const Column = styled.div`\n  border: 1px solid rgba(239, 237, 232, 0.3);\n  border-radius: 12px;\n  display: flex;\n  align-items: center;\n  padding-inline: 14px;\n  @media screen and (min-width: 375px) {\n    width: 100%;\n    height: 38px;\n  }\n\n  @media screen and (min-width: 768px) {\n    height: 40px;\n  }\n`;\n\nexport const ButtonEl = styled.button`\n  width: auto;\n  background-color: inherit;\n  border-radius: 12px;\n  border: none;\n  padding-inline: 0;\n`;\n\nexport const DeleteIcon = styled.svg(\n  {\n    width: '20px',\n    height: '20px',\n  },\n  ({ iconColor = '#EF8964' }) => ({\n    fill: iconColor,\n    stroke: iconColor,\n  })\n);\n","import {\n  ExerciseDiv,\n  Column,\n  ButtonEl,\n  DeleteIcon,\n  Grid1,\n  Grid2,\n  Grid3,\n  Grid4,\n  Grid5,\n  Grid6,\n  Grid7,\n  Title,\n} from './ExerciseItem.styled';\nimport sprite from 'assets/images/sprite.svg';\nimport { format } from 'date-fns';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteExercise } from 'redux/api/apiOperations';\n// import { useDispatch } from 'react-redux';\n// import { useState } from 'react';\n\nconst ExerciseItem = ({\n  id,\n  bodyPart,\n  equipment,\n  name,\n  target,\n  burnedCalories,\n  time,\n  date,\n}) => {\n  //   const dispatch = useDispatch();\n  //   const deleteThisExercise = id => {\n  //     dispatch(deleteExercise(id));\n  //   };\n\n  const dispatch = useDispatch();\n\n  const handleClick = (productId, date) => {\n    const fDate = format(new Date(date), 'dd-MM-yyyy');\n\n    dispatch(deleteExercise({ productId, date: fDate }));\n  };\n\n  return (\n    <ExerciseDiv key={id}>\n      <Grid1>\n        <Title>Body Part</Title>\n        <Column>{bodyPart}</Column>\n      </Grid1>\n      <Grid2>\n        <Title>Equipment</Title>\n        <Column>{equipment}</Column>\n      </Grid2>\n      <Grid3>\n        <Title>Name</Title>\n        <Column>{name}</Column>\n      </Grid3>\n      <Grid4>\n        <Title>Target</Title>\n        <Column>{target}</Column>\n      </Grid4>\n      <Grid5>\n        <Title>Burned Calorie</Title>\n        <Column>{burnedCalories}</Column>\n      </Grid5>\n      <Grid6>\n        <Title>Time</Title>\n        <Column>{time}</Column>\n      </Grid6>\n      {/* <ButtonEl onClick={() => deleteThisExercise(id)}>Delete</ButtonEl> */}\n      <Grid7>\n        <Title></Title>\n        <ButtonEl onClick={() => handleClick(id, date)}>\n          <DeleteIcon iconColor=\"#EF8964\">\n            <use href={`${sprite}#trash`} />\n          </DeleteIcon>\n        </ButtonEl>\n      </Grid7>\n    </ExerciseDiv>\n  );\n};\n\nExerciseItem.propTypes = {\n  id: PropTypes.string,\n  bodyPart: PropTypes.string,\n  equipment: PropTypes.string,\n  name: PropTypes.string,\n  target: PropTypes.string,\n  burnedCalories: PropTypes.number,\n  time: PropTypes.number,\n  date: PropTypes.string.isRequired,\n};\n\nexport default ExerciseItem;\n","import {\n  DayExercisesArea,\n  TitleArea,\n  Title,\n  Button,\n  Add,\n  ArrowIcon,\n  Message,\n  TableArea,\n  TableHeader,\n  List,\n  Grid1,\n  Grid2,\n  Grid3,\n  Grid4,\n  Grid5,\n  Grid6,\n  Grid7,\n  ShorterTitle,\n} from './DayExercises.styled';\nimport sprite from 'assets/images/sprite.svg';\nimport { useSelector } from 'react-redux';\nimport { useState } from 'react';\nimport { selectError, selectIsLoading } from 'redux/api/apiSelectors';\nimport Loader from 'components/Loader';\nimport { Notify } from 'notiflix';\nimport ExerciseItem from './ExerciseItem';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst DayExercises = ({ doneExercises }) => {\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const location = useLocation();\n\n  const findLength = async array => {\n    try {\n      const length = await array.length;\n      return length;\n    } catch (err) {\n      return err;\n    }\n  };\n  const arrayLength = findLength(doneExercises);\n\n  const [heightExerciseArea, setHeightExerciseArea] = useState(true);\n  if (arrayLength === 0) {\n    setHeightExerciseArea(false);\n  }\n\n  return (\n    <DayExercisesArea dimention={heightExerciseArea}>\n      <TitleArea>\n        <Title>Execrcises</Title>\n        <Link to={`/exercises`} state={{ from: location }}>\n          <Button>\n            <Add>Add exercise</Add>\n            <ArrowIcon iconColor=\"#E6533C\">\n              <use href={`${sprite}#arrow`} />\n            </ArrowIcon>\n          </Button>\n        </Link>\n      </TitleArea>\n\n      <TableArea>\n        {isLoading && <Loader />}\n        {doneExercises && doneExercises.length > 0 ? (\n          <>\n            <TableHeader>\n              <Grid1>Body Part</Grid1>\n              <Grid2>Equipment</Grid2>\n              <Grid3>Name</Grid3>\n              <Grid4>Target</Grid4>\n              <Grid5>\n                <ShorterTitle>Burned Calories</ShorterTitle>\n              </Grid5>\n              <Grid6>Time</Grid6>\n              <Grid7 />\n            </TableHeader>\n            <List>\n              {doneExercises.map(\n                ({\n                  _id,\n                  bodyPart,\n                  equipment,\n                  name,\n                  target,\n                  burnedCalories,\n                  time,\n                  createAt,\n                }) => (\n                  <ExerciseItem\n                    key={_id}\n                    id={_id}\n                    bodyPart={bodyPart}\n                    equipment={equipment}\n                    name={name}\n                    target={target}\n                    burnedCalories={burnedCalories}\n                    time={time}\n                    date={createAt}\n                  />\n                )\n              )}\n            </List>\n          </>\n        ) : (\n          <Message>Not found exercises</Message>\n        )}\n        {error && Notify.failure(error.message)}\n      </TableArea>\n    </DayExercisesArea>\n  );\n};\n\nexport default DayExercises;\n","import styled from '@emotion/styled';\n\nconst setHeight = props => {\n  switch (props.dimention) {\n    case 'true':\n      return '824px';\n    case 'false':\n      return '335px';\n    default:\n      return '335px';\n  }\n};\n\nexport const DayProductsArea = styled.div`\n  position: relative;\n  width: 100%;\n  border: 1px solid;\n  border-color: rgba(239, 237, 232, 0.2);\n  border-radius: 12px;\n  background-color: rgba(239, 237, 232, 0.05);\n  padding: 16px;\n\n  @media screen and (min-width: 375px) {\n    /* height: ${setHeight}; */\n  }\n\n  @media screen and (min-width: 768px) {\n    height: 234px;\n  }\n`;\n\nexport const TitleArea = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  @media screen and (min-width: 375px) {\n    margin-bottom: 22px;\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 16px;\n  }\n`;\n\nexport const Title = styled.h3`\n  font-size: 14px;\n  font-weight: 400;\n  color: rgba(239, 237, 232, 0.5);\n`;\n\nexport const Button = styled.button`\n  background-color: inherit;\n  border: none;\n  display: flex;\n  gap: 8px;\n  align-items: center;\n`;\n\nexport const Add = styled.p`\n  font-weight: 500;\n  color: #e6533c;\n\n  @media screen and (min-width: 375px) {\n    font-size: 14px;\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\n\nexport const ArrowIcon = styled.svg(\n  {\n    width: '16px',\n    height: '16px',\n  },\n  ({ iconColor = '#e6533c' }) => ({\n    fill: iconColor,\n    stroke: iconColor,\n  })\n);\n\nexport const Message = styled.p`\n  font-weight: 400;\n  color: rgba(239, 237, 232, 0.3);\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n\n  @media screen and (min-width: 375px) {\n    font-size: 14px;\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\nexport const TableArea = styled.div`\n  @media screen and (min-width: 1440px) {\n    padding-left: 16px;\n  }\n`;\n\nexport const TableHeader = styled.div`\n  @media screen and (min-width: 375px) {\n    display: none;\n  }\n\n  @media screen and (min-width: 768px) {\n    display: grid;\n    grid-gap: 8px;\n    grid-template-columns: 204px 128px 90px 90px 80px 20px;\n    grid-template-rows: auto;\n    grid-template-areas: 'grid1 grid2 grid3 grid4 grid5 grid6';\n    color: #ef8964;\n    font-size: 12px;\n    font-weight: 400;\n    margin-bottom: 8px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    grid-template-columns: 212px 166px 105px 105px 110px 20px;\n  }\n`;\n\nexport const Grid1 = styled.div`\n  grid-area: grid1;\n`;\nexport const Grid2 = styled.div`\n  grid-area: grid2;\n`;\nexport const Grid3 = styled.div`\n  grid-area: grid3;\n`;\nexport const Grid4 = styled.div`\n  grid-area: grid4;\n`;\nexport const Grid5 = styled.div`\n  grid-area: grid5;\n`;\nexport const Grid6 = styled.div`\n  grid-area: grid6;\n`;\n\nexport const ShorterTitle = styled.div`\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nexport const List = styled.div`\n  @media screen and (min-width: 375px) {\n    display: flex;\n    flex-direction: column;\n    gap: 38px;\n    /* height: 786px; */\n    /* min-height: 335px; */\n\n  }\n\n  @media screen and (min-width: 768px) {\n    gap: 8px;\n    height: 136px;\n    overflow-y: scroll;\n    overflow-x: hidden;\n\n    &::-webkit-scrollbar-track {\n      background-color: transparent;\n    }\n\n    &::-webkit-scrollbar-thumb {\n      border-radius: 12px;\n      background: rgba(239, 237, 232, 0.10);\n      width: 6px;\n      height: 90px;   \n    }\n\n    &::-webkit-scrollbar {\n      width: 8px;\n      height: 15px;\n    }\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const ProductDiv = styled.div`\n  @media screen and (min-width: 375px) {\n    align-items: center;\n    font-size: 14px;\n    font-weight: 400;\n    color: #efede8;\n    display: grid;\n    grid-gap: 14px;\n    grid-template-columns: 81px 80px 76px 20px;\n    grid-template-rows: auto;\n    grid-template-areas:\n      'grid1 grid1 grid1 grid1'\n      'grid2 grid2 grid2 grid2'\n      'grid3 grid4 grid5 grid6';\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    grid-gap: 8px;\n    grid-template-columns: 204px 128px 90px 90px 80px 20px;\n    grid-template-rows: 40px;\n    grid-template-areas: 'grid1 grid2 grid3 grid4 grid5 grid6';\n  }\n\n  @media screen and (min-width: 1440px) {\n    grid-template-columns: 212px 166px 105px 105px 110px 20px;\n  }\n`;\n\nexport const Grid1 = styled.div`\n  grid-area: grid1;\n`;\nexport const Grid2 = styled.div`\n  grid-area: grid2;\n`;\nexport const Grid3 = styled.div`\n  grid-area: grid3;\n`;\nexport const Grid4 = styled.div`\n  grid-area: grid4;\n`;\nexport const Grid5 = styled.div`\n  grid-area: grid5;\n`;\nexport const Grid6 = styled.div`\n  grid-area: grid6;\n`;\n\nexport const Title = styled.p`\n  color: #ef8964;\n  height: 12px;\n  font-size: 12px;\n  font-weight: 400;\n  margin-bottom: 8px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  @media screen and (min-width: 768px) {\n    display: none;\n  }\n`;\n\nexport const Column = styled.div`\n  border: 1px solid rgba(239, 237, 232, 0.3);\n  border-radius: 12px;\n  display: flex;\n  align-items: center;\n  padding-inline: 14px;\n  @media screen and (min-width: 375px) {\n    width: 100%;\n    height: 38px;\n  }\n\n  @media screen and (min-width: 768px) {\n    height: 40px;\n  }\n`;\n\nexport const ButtonEl = styled.button`\n  width: auto;\n  background-color: inherit;\n  border-radius: 12px;\n  border: none;\n  padding-inline: 0;\n`;\n\nexport const DeleteIcon = styled.svg(\n  {\n    width: '20px',\n    height: '20px',\n  },\n  ({ iconColor = '#EF8964' }) => ({\n    fill: iconColor,\n    stroke: iconColor,\n  })\n);\n\nexport const Indicator = styled.span`\n  display: inline-block;\n  width: 14px;\n  height: 14px;\n  border-radius: 10px;\n  background: ${props => props.color};\n`;\n\nexport const RecommendText = styled.span`\n  margin-left: 8px;\n`;\n","import { format } from 'date-fns';\nimport {\n  ProductDiv,\n  Column,\n  ButtonEl,\n  DeleteIcon,\n  Grid1,\n  Grid2,\n  Grid3,\n  Grid4,\n  Grid5,\n  Grid6,\n  Title,\n  Indicator,\n  RecommendText\n} from './ProductItem.styled';\nimport sprite from 'assets/images/sprite.svg';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteProduct } from 'redux/api/apiOperations';\n\nconst ProductItem = ({\n  id,\n  title,\n  category,\n  caloriesConsumed,\n  weightConsumed,\n  recommendedByGroupBlood,\n  date,\n}) => {\n  const dispatch = useDispatch();\n  \n  const isRecommended = recommendedByGroupBlood; \n\n  const handleClick = (productId, date) => {\n    const fDate = format(new Date(date), 'dd-MM-yyyy');\n\n    dispatch(deleteProduct({ productId, date: fDate }));\n  };\n\n  return (\n    <ProductDiv key={id}>\n      <Grid1>\n        <Title>Title</Title>\n        <Column>{title}</Column>\n      </Grid1>\n      <Grid2>\n        <Title>Category</Title>\n        <Column>{category}</Column>\n      </Grid2>\n      <Grid3>\n        <Title>Calories</Title>\n        <Column>{caloriesConsumed}</Column>\n      </Grid3>\n      <Grid4>\n        <Title>Weight</Title>\n        <Column>{weightConsumed}</Column>\n      </Grid4>\n      <Grid5>\n        <Title>Recommend</Title>\n        <Column>\n          {isRecommended ? (\n            <>\n              <Indicator color=\"#419B09\" />\n              <RecommendText>Yes</RecommendText>\n            </>\n          ) : (\n            <>\n              <Indicator color=\"#E9101D\" />\n              <RecommendText>No</RecommendText>\n            </>\n          )}\n        </Column>\n      </Grid5>\n      {/* <ButtonEl onClick={() => deleteThisExercise(id)}>Delete</ButtonEl> */}\n      <Grid6>\n        <Title></Title>\n        <ButtonEl onClick={() => handleClick(id, date)}>\n          <DeleteIcon iconColor=\"#EF8964\">\n            <use href={`${sprite}#trash`} />\n          </DeleteIcon>\n        </ButtonEl>\n      </Grid6>\n    </ProductDiv>\n  );\n};\n\nProductItem.propTypes = {\n  id: PropTypes.string,\n  title: PropTypes.string,\n  category: PropTypes.string,\n  caloriesConsumed: PropTypes.number,\n  weightConsumed: PropTypes.number,\n  recommendedByGroupBlood: PropTypes.bool,\n  date: PropTypes.string.isRequired,\n};\n\nexport default ProductItem;\n","import {\n  DayProductsArea,\n  TitleArea,\n  Title,\n  Button,\n  Add,\n  ArrowIcon,\n  TableArea,\n  Message,\n  TableHeader,\n  List,\n  Grid1,\n  Grid2,\n  Grid3,\n  Grid4,\n  Grid5,\n  Grid6,\n} from './DayProducts.styled';\nimport sprite from 'assets/images/sprite.svg';\nimport { useSelector } from 'react-redux';\nimport { selectError, selectIsLoading } from 'redux/api/apiSelectors';\nimport Loader from 'components/Loader';\nimport { Notify } from 'notiflix';\nimport ProductItem from './ProductItem';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst DayProducts = ({ consumedProducts }) => {\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const location = useLocation();\n  console.log(consumedProducts);\n\n  // const [heightProductArea, setHeightProductArea] = useState(true);\n  // if (arrayLength === 0) {\n  //   setHeightProductArea(false);\n  // }\n\n  return (\n    <DayProductsArea>\n      <TitleArea>\n        <Title>Products</Title>\n        <Link to={`/products`} state={{ from: location }}>\n          <Button>\n            <Add>Add product</Add>\n            <ArrowIcon iconColor=\"#E6533C\">\n              <use href={`${sprite}#arrow`} />\n            </ArrowIcon>\n          </Button>{' '}\n        </Link>\n      </TitleArea>\n      <TableArea>\n        {isLoading && <Loader />}\n        {consumedProducts && consumedProducts.length > 0 ? (\n          <>\n            <TableHeader>\n              <Grid1>Title</Grid1>\n              <Grid2>Category</Grid2>\n              <Grid3>Calories</Grid3>\n              <Grid4>Weight</Grid4>\n              <Grid5>Recommend</Grid5>\n              <Grid6></Grid6>\n            </TableHeader>\n            <List>\n              {consumedProducts.map(\n                ({\n                  _id,\n                  title,\n                  category,\n                  caloriesConsumed,\n                  weightConsumed,\n                  recommendedByGroupBlood,\n                  createdAt,\n                }) => (\n                  <ProductItem\n                    key={_id}\n                    id={_id}\n                    title={title}\n                    category={category}\n                    caloriesConsumed={caloriesConsumed}\n                    weightConsumed={weightConsumed}\n                    recommendedByGroupBlood={recommendedByGroupBlood}\n                    date={createdAt}\n                  />\n                )\n              )}\n            </List>\n          </>\n        ) : (\n          <Message>Not found exercises</Message>\n        )}\n        {error && Notify.failure(error.message)}\n      </TableArea>\n    </DayProductsArea>\n  );\n};\n\nexport default DayProducts;\n","import styled from '@emotion/styled';\n\nexport const DaySwitchArea = styled.div`\n  position: absolute;\n  display: flex;\n\n  justify-content: center;\n  align-items: center;\n\n  @media screen and (min-width: 375px) {\n    right: 0;\n    top: 42px;\n    gap: 20px;\n  }\n\n  @media screen and (min-width: 768px) {\n    top: 52px;\n    gap: 40px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    right: 64px;\n  }\n`;\n\nexport const ArrowIcon = styled.svg`\n  width: 16px;\n  height: 16px;\n  // rgba(239,237,232,0.2) когда неактивная\n  fill: #efede8;\n\n  &:hover,\n  :focus {\n    fill: #ef8964;\n  }\n`;\n\nexport const Button = styled.button`\n  border: none;\n  background-color: inherit;\n  width: 20px;\n  height: 20px;\n  padding: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const ArrowArea = styled.div`\n  display: flex;\n  gap: 6px;\n`;\n","import { css } from '@emotion/react';\nimport styled from '@emotion/styled';\n\nexport const calendarGlobalStyles = css`\n  .react-datepicker__wrapper {\n    position: relative;\n  }\n  .react-datepicker {\n    position: absolute;\n    left: 0;\n    top: 50%;\n    transform: translate(-1%, 0%);\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: auto;\n    height: auto;\n    padding: 14px 14px;\n    background-color: #ef8964;\n    font-family: Inter;\n    border-radius: 16px;\n    border: none;\n  }\n  .react-datepicker__month-container {\n    float: inherit;\n    box-sizing: border-box;\n  }\n  .react-datepicker__header {\n    position: relative;\n    background-color: #ef8964;\n  }\n  .react-datepicker__day-names {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 8px 8px;\n    border-top: 1px solid rgba(239, 237, 232, 0.2);\n  }\n  .react-datepicker__header:not(.react-datepicker__header--has-time-select) {\n    border-bottom: 0px;\n    padding: 0;\n  }\n  .react-datepicker__day\n    react-datepicker__day--018.react-datepicker__day--selected\n    react-datepicker__day--today {\n    outline: none;\n    border: none;\n  }\n  .react-datepicker__current-month {\n    font-family: Inter;\n    font-size: 18px;\n    font-style: normal;\n    font-weight: 600;\n    text-align: center;\n    color: #efede8;\n    margin-bottom: 8px;\n  }\n  .react-datepicker__day-name {\n    margin: 0;\n    padding: 8px 8px;\n    font-family: Inter;\n    font-size: 14px;\n    font-style: normal;\n    font-weight: 600;\n    line-height: 18px;\n    text-align: center;\n    color: rgba(239, 237, 232, 0.5);\n  }\n  .react-datepicker__navigation {\n    margin-top: 4px;\n    color: #efe8eb;\n  }\n  .react-datepicker__navigation--previous {\n    left: 7px;\n    top: 14px;\n    width: 18px;\n    height: 18px;\n  }\n  .react-datepicker__navigation--next {\n    right: 7px;\n    top: 14px;\n    width: 18px;\n    height: 18px;\n  }\n  .react-datepicker__navigation-icon::before:hover:focus {\n    border-color: #efede8;\n  }\n  .react-datepicker__week {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    color: #efede8;\n  }\n  .react-datepicker__day {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 8px;\n    flex-shrink: 0;\n    margin: 0;\n    width: 32px;\n    height: 32px;\n    border-radius: 50%;\n    color: #efede8;\n    font-family: Inter;\n    font-size: 14px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: 18px;\n    text-align: center;\n  }\n  .react-datepicker__month {\n    display: flex;\n    gap: 7px;\n    flex-direction: column;\n    justify-content: space-between;\n    padding-top: 14px;\n    margin: 0;\n  }\n  .react-datepicker__day--selected {\n    background-color: #040404;\n    color: #efe8e8;\n    font-size: 14px;\n  }\n  .react-datepicker__day--selected:hover {\n    border-radius: 50%;\n    background-color: #040404;\n  }\n  .react-datepicker__day:hover {\n    border-radius: 50%;\n    background-color: #040404;\n    color: #efede8;\n  }\n  .react-datepicker__day--keyboard-selected {\n    border-radius: 50%;\n    background-color: #040404;\n    color: #efede8;\n  }\n  .react-datepicker__day--weekend {\n  }\n  .react-datepicker__day--disabled {\n    opacity: 50%;\n  }\n  .react-datepicker__day--outside-month {\n    background-color: transparent;\n    pointer-events: none;\n    opacity: 0;\n  }\n  .react-datepicker__view-calendar-icon input {\n    padding: 6px 10px 5px 13px;\n  }\n  .react-datepicker__triangle {\n    visibility: hidden;\n  }\n`;\n\nexport const TitleWrapper = styled.button`\n  color: #efede8;\n  background: inherit;\n  border: none;\n  font-weight: 700;\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 24px;\n  display: flex;\n  gap: 8px;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const CalendarIcon = styled.svg`\n  width: 24px;\n  height: 24px;\n  fill: #ef8964;\n  stroke: #ef8964;\n`;\n","import { forwardRef } from 'react';\nimport { format } from 'date-fns';\nimport DatePicker from 'react-datepicker';\nimport {\n  calendarGlobalStyles,\n  TitleWrapper,\n  CalendarIcon,\n} from './Datepicker.styled';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport sprite from 'assets/images/sprite.svg';\nimport { Global } from '@emotion/react';\n//import formatDate from 'utils/formatDate';\n\nconst StyledDatepicker = ({ selectedDate, setSelectedDate, user }) => {\n  const createdDate = Date.parse(user.createdAt);\n\n  const submitSelectedDate = date => {\n    setSelectedDate(date);\n  };\n\n  const CustomInput = forwardRef(({ value, onClick }, ref) => {\n    return (\n      <TitleWrapper onClick={onClick} ref={ref}>\n        {format(selectedDate, 'dd/MM/yyyy')}\n        <CalendarIcon iconColor=\"#EF8964\">\n          <use href={`${sprite}#calendar`} />\n        </CalendarIcon>\n      </TitleWrapper>\n    );\n  });\n\n  return (\n    <>\n      <Global styles={calendarGlobalStyles} />\n      <DatePicker\n        selected={selectedDate}\n        onChange={date => {\n          submitSelectedDate(date);\n        }}\n        customInput={<CustomInput />}\n        dateFormat={'dd MM yyyy'}\n        calendarStartDay={1}\n        minDate={user.createdAt ? createdDate : Date.now()}\n        maxDate={Date.now()}\n      />\n    </>\n  );\n};\n\nexport default StyledDatepicker;\n","import {\n  DaySwitchArea,\n  ArrowIcon,\n  Button,\n  ArrowArea,\n} from './DaySwitch.styled';\nimport StyledDatepicker from './Datepicker';\nimport sprite from 'assets/images/sprite.svg';\n\nconst DaySwitch = ({ selectedDate, setSelectedDate, user }) => {\n  return (\n    <DaySwitchArea>\n      <StyledDatepicker\n        selectedDate={selectedDate}\n        setSelectedDate={setSelectedDate}\n        user={user}\n      />\n      <ArrowArea>\n        <Button type=\"button\">\n          <ArrowIcon iconColor=\"#efede8\">\n            <use href={`${sprite}#icon-chevron-left`} />\n          </ArrowIcon>\n        </Button>\n        <Button type=\"button\">\n          <ArrowIcon iconColor=\"#efede8)\">\n            <use href={`${sprite}#icon-chevron-right`} />\n          </ArrowIcon>\n        </Button>\n      </ArrowArea>\n    </DaySwitchArea>\n  );\n};\n\nexport default DaySwitch;\n","import styled from '@emotion/styled';\n\nexport const DiaryWrapper = styled.div`\n  padding-top: 62px;\n  padding-bottom: 80px;  \n  width: 100%;\n\n    @media screen and (min-width: 768px) {   \n      padding-bottom: 64px;  \n  }\n\n  @media screen and (min-width: 1440px) {\n      padding-top: 85px;\n      padding-bottom: 68px; \n  }\n`;\n\nexport const ForPosition = styled.div`\n  width: 100%;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n\n  @media screen and (min-width: 1440px) {\n    padding-inline: 64px;\n  }\n`;\n\nexport const DiaryContainer = styled.div`\n  display: flex;\n\n  @media screen and (min-width: 375px) {\n    flex-direction: column;\n    gap: 40px;\n    margin-top: 40px;\n  }\n\n  @media screen and (min-width: 768px) {\n    gap: 64px;\n    margin-top: 32px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    flex-direction: row;\n    gap: 32px;\n  }\n`;\n\nexport const Left = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  @media screen and (min-width: 375px) {\n    width: 335px;\n    gap: 40px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 704px;\n    gap: 32px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 826px;\n  }\n`;\n\nexport const Right = styled.div`\n  @media screen and (min-width: 375px) {\n    width: 335px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 593px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 390px;\n  }\n`;\n","import Container from 'components/Container';\nimport DayDashboard from 'components/DayDashboard';\nimport DayExercises from 'components/DayExercises';\nimport DayProducts from 'components/DayProducts';\nimport DaySwitch from 'components/DaySwitch';\nimport TitlePage from 'components/TitlePage';\nimport { DiaryWrapper, DiaryContainer, Left, Right, ForPosition } from './Diary.styled';\nimport Notice from 'components/Notice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport { selectDiary } from 'redux/api/apiSelectors';\nimport { currentUser } from 'redux/auth/authOperations';\nimport { selectUser } from 'redux/auth/authSelectors';\nimport { format } from 'date-fns';\nimport { selectDiaryUpdated } from 'redux/api/apiSelectors';\nimport {\n  //deleteProduct,\n  diaryUpdateReset,\n  fetchDiary,\n} from 'redux/api/apiOperations';\n\nconst Diary = () => {\n  const dispatch = useDispatch();\n  const [selectedDate, setSelectedDate] = useState(Date.now());\n  const data = useSelector(selectDiary);\n\n  const { consumedProducts, doneExercises } = data;\n  const user = useSelector(selectUser);\n  const newDate = format(selectedDate, 'dd-MM-yyyy');\n  const dairyUpdated = useSelector(selectDiaryUpdated);\n\n  useEffect(() => {\n    dispatch(fetchDiary({ date: newDate }));\n  }, [dispatch, newDate]);\n\n  useEffect(() => {\n    if (dairyUpdated) {\n      dispatch(fetchDiary({ date: newDate }));\n    }\n    dispatch(currentUser());\n    dispatch(diaryUpdateReset());\n  }, [dispatch, dairyUpdated, newDate]);\n\n  return (\n    <DiaryWrapper>\n      <Container>\n        <ForPosition>\n          <TitlePage title=\"Diary\" />\n          <DaySwitch\n            selectedDate={selectedDate}\n            setSelectedDate={setSelectedDate}\n            user={user}\n          />\n          <DiaryContainer>\n            <Left>\n              <DayProducts consumedProducts={consumedProducts} />\n              <DayExercises doneExercises={doneExercises} />\n            </Left>\n            <Right>\n              <DayDashboard data={data} />\n              <Notice notice=\"Record all your meals in the calorie diary every day. This will help you be aware of your nutrition and make informed choices.\" />\n            </Right>\n          </DiaryContainer>\n        </ForPosition>\n      </Container>\n    </DiaryWrapper>\n  );\n};\n\nexport default Diary;\n","export const selectCategories = state => state.api.categories; // []\n\nexport const selectExercises = state => state.api.exercises; // { result: [], total_results: number }\n\nexport const selectFilters = state => state.api.filters; // { result: [], total_results: number }\n\nexport const selectProducts = state => state.api.products; // { result: [], total_results: number }\n\nexport const selectIsLoading = state => state.api.isLoading; // boolean\n\nexport const selectError = state => state.api.error; // { message: string }\n\nexport const selectCalculate = state => state.api.calculate; // {}\n\nexport const selectDiary = state => state.api.diary; // {}\n\nexport const selectDiaryUpdated = state => state.api.diaryUpdated; // boolean\n"],"names":["_ref","children","_jsx","ContainerWrapper","styled","div","_templateObject","_taggedTemplateLiteral","NoticeArea","NoticeIcon","_templateObject2","NoticeMessage","svg","width","height","_templateObject3","notice","_jsxs","fill","href","concat","sprite","Title","h1","title","DayDashboardArea","ul","DashboardItem","li","props","accent","TitleArea","Icon","_ref$iconColor","iconColor","stroke","p","_templateObject4","Value","_templateObject5","data","dailyPhysicalActivity","userBMR","caloriesBurnedSum","caloriesConsumedSum","caloriesRemaining","sportsRemaining","Object","keys","length","DayExercisesArea","dimention","h3","Button","button","Add","ArrowIcon","Message","_templateObject6","TableArea","_templateObject7","TableHeader","_templateObject8","Grid1","_templateObject9","Grid2","_templateObject10","Grid3","_templateObject11","Grid4","_templateObject12","Grid5","_templateObject13","Grid6","_templateObject14","Grid7","_templateObject15","ShorterTitle","_templateObject16","List","_templateObject17","ExerciseDiv","Column","ButtonEl","DeleteIcon","id","bodyPart","equipment","name","target","burnedCalories","time","date","dispatch","useDispatch","onClick","productId","fDate","format","Date","deleteExercise","handleClick","doneExercises","isLoading","useSelector","selectIsLoading","error","selectError","location","useLocation","findLength","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","array","wrap","_context","prev","next","sent","abrupt","t0","stop","_x","apply","arguments","arrayLength","_useState","useState","_useState2","_slicedToArray","heightExerciseArea","setHeightExerciseArea","Link","to","state","from","Loader","_Fragment","map","_ref3","_id","createAt","ExerciseItem","Notify","failure","message","DayProductsArea","ProductDiv","Indicator","span","color","RecommendText","category","caloriesConsumed","weightConsumed","recommendedByGroupBlood","isRecommended","deleteProduct","consumedProducts","console","log","createdAt","ProductItem","DaySwitchArea","ArrowArea","calendarGlobalStyles","css","TitleWrapper","CalendarIcon","selectedDate","setSelectedDate","user","createdDate","parse","CustomInput","forwardRef","ref","value","Global","styles","DatePicker","selected","onChange","submitSelectedDate","customInput","dateFormat","calendarStartDay","minDate","now","maxDate","StyledDatepicker","type","DiaryWrapper","ForPosition","DiaryContainer","Left","Right","selectDiary","selectUser","newDate","dairyUpdated","selectDiaryUpdated","useEffect","fetchDiary","currentUser","diaryUpdateReset","Container","TitlePage","DaySwitch","DayProducts","DayExercises","DayDashboard","Notice","selectCategories","api","categories","selectProducts","products","selectCalculate","calculate","diary","diaryUpdated"],"sourceRoot":""}